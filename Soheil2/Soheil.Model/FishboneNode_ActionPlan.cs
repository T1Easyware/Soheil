//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace Soheil.Model
{
    public partial class FishboneNode_ActionPlan
    {
        #region Primitive Properties
    
        public virtual int Id
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
    
        public virtual ActionPlan ActionPlan
        {
            get { return _actionPlan; }
            set
            {
                if (!ReferenceEquals(_actionPlan, value))
                {
                    var previousValue = _actionPlan;
                    _actionPlan = value;
                    FixupActionPlan(previousValue);
                }
            }
        }
        private ActionPlan _actionPlan;
    
        public virtual FishboneNode FishboneNode
        {
            get { return _fishboneNode; }
            set
            {
                if (!ReferenceEquals(_fishboneNode, value))
                {
                    var previousValue = _fishboneNode;
                    _fishboneNode = value;
                    FixupFishboneNode(previousValue);
                }
            }
        }
        private FishboneNode _fishboneNode;

        #endregion

        #region Association Fixup
    
        private void FixupActionPlan(ActionPlan previousValue)
        {
            if (previousValue != null && previousValue.FishboneNode_ActionPlan.Contains(this))
            {
                previousValue.FishboneNode_ActionPlan.Remove(this);
            }
    
            if (ActionPlan != null)
            {
                if (!ActionPlan.FishboneNode_ActionPlan.Contains(this))
                {
                    ActionPlan.FishboneNode_ActionPlan.Add(this);
                }
            }
        }
    
        private void FixupFishboneNode(FishboneNode previousValue)
        {
            if (previousValue != null && previousValue.FishboneNode_ActionPlans.Contains(this))
            {
                previousValue.FishboneNode_ActionPlans.Remove(this);
            }
    
            if (FishboneNode != null)
            {
                if (!FishboneNode.FishboneNode_ActionPlans.Contains(this))
                {
                    FishboneNode.FishboneNode_ActionPlans.Add(this);
                }
            }
        }

        #endregion

    }
}
