//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace Soheil.Model
{
    public partial class PartWarehouse
    {
        #region Primitive Properties
    
        public virtual int Id
        {
            get;
            set;
        }
    
        public virtual string Code
        {
            get;
            set;
        }
    
        public virtual string Name
        {
            get;
            set;
        }
    
        public virtual System.DateTime ModifiedDate
        {
            get;
            set;
        }
    
        public virtual System.DateTime CreatedDate
        {
            get;
            set;
        }
    
        public virtual int ModifiedBy
        {
            get;
            set;
        }
    
        public virtual byte Status
        {
            get { return _status; }
            set { _status = value; }
        }
        private byte _status = 1;
    
        public virtual Nullable<int> Quantity
        {
            get;
            set;
        }
    
        public virtual Nullable<int> OriginalQuantity
        {
            get;
            set;
        }
    
        public virtual Nullable<double> TotalCost
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
    
        public virtual PartWarehouseGroup PartWarehouseGroup
        {
            get { return _partWarehouseGroup; }
            set
            {
                if (!ReferenceEquals(_partWarehouseGroup, value))
                {
                    var previousValue = _partWarehouseGroup;
                    _partWarehouseGroup = value;
                    FixupPartWarehouseGroup(previousValue);
                }
            }
        }
        private PartWarehouseGroup _partWarehouseGroup;
    
        public virtual Cost Cost
        {
            get { return _cost; }
            set
            {
                if (!ReferenceEquals(_cost, value))
                {
                    var previousValue = _cost;
                    _cost = value;
                    FixupCost(previousValue);
                }
            }
        }
        private Cost _cost;

        #endregion

        #region Association Fixup
    
        private void FixupPartWarehouseGroup(PartWarehouseGroup previousValue)
        {
            if (previousValue != null && previousValue.PartWarehouses.Contains(this))
            {
                previousValue.PartWarehouses.Remove(this);
            }
    
            if (PartWarehouseGroup != null)
            {
                if (!PartWarehouseGroup.PartWarehouses.Contains(this))
                {
                    PartWarehouseGroup.PartWarehouses.Add(this);
                }
            }
        }
    
        private void FixupCost(Cost previousValue)
        {
            if (previousValue != null && ReferenceEquals(previousValue.PartWarehouse, this))
            {
                previousValue.PartWarehouse = null;
            }
    
            if (Cost != null)
            {
                Cost.PartWarehouse = this;
            }
        }

        #endregion

    }
}
