//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace Soheil.Model
{
    public partial class StationMachine
    {
        #region Primitive Properties
    
        public virtual int Id
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
    
        public virtual Machine Machine
        {
            get { return _machine; }
            set
            {
                if (!ReferenceEquals(_machine, value))
                {
                    var previousValue = _machine;
                    _machine = value;
                    FixupMachine(previousValue);
                }
            }
        }
        private Machine _machine;
    
        public virtual ICollection<PM> PMs
        {
            get
            {
                if (_pMs == null)
                {
                    var newCollection = new FixupCollection<PM>();
                    newCollection.CollectionChanged += FixupPMs;
                    _pMs = newCollection;
                }
                return _pMs;
            }
            set
            {
                if (!ReferenceEquals(_pMs, value))
                {
                    var previousValue = _pMs as FixupCollection<PM>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupPMs;
                    }
                    _pMs = value;
                    var newValue = value as FixupCollection<PM>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupPMs;
                    }
                }
            }
        }
        private ICollection<PM> _pMs;
    
        public virtual Station Station
        {
            get { return _station; }
            set
            {
                if (!ReferenceEquals(_station, value))
                {
                    var previousValue = _station;
                    _station = value;
                    FixupStation(previousValue);
                }
            }
        }
        private Station _station;

        #endregion

        #region Association Fixup
    
        private void FixupMachine(Machine previousValue)
        {
            if (previousValue != null && previousValue.StationMachines.Contains(this))
            {
                previousValue.StationMachines.Remove(this);
            }
    
            if (Machine != null)
            {
                if (!Machine.StationMachines.Contains(this))
                {
                    Machine.StationMachines.Add(this);
                }
            }
        }
    
        private void FixupStation(Station previousValue)
        {
            if (previousValue != null && previousValue.StationMachines.Contains(this))
            {
                previousValue.StationMachines.Remove(this);
            }
    
            if (Station != null)
            {
                if (!Station.StationMachines.Contains(this))
                {
                    Station.StationMachines.Add(this);
                }
            }
        }
    
        private void FixupPMs(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (PM item in e.NewItems)
                {
                    item.StationMachine = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (PM item in e.OldItems)
                {
                    if (ReferenceEquals(item.StationMachine, this))
                    {
                        item.StationMachine = null;
                    }
                }
            }
        }

        #endregion

    }
}
