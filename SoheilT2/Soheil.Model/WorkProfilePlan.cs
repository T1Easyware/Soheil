//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace Soheil.Model
{
    public partial class WorkProfilePlan
    {
        #region Primitive Properties
    
        public virtual int Id
        {
            get;
            set;
        }
    
        public virtual string Name
        {
            get;
            set;
        }
    
        public virtual System.DateTime StartDate
        {
            get;
            set;
        }
    
        public virtual System.DateTime EndDate
        {
            get;
            set;
        }
    
        public virtual byte MergingStrategyNr
        {
            get { return _mergingStrategyNr; }
            set { _mergingStrategyNr = value; }
        }
        private byte _mergingStrategyNr = 0;
    
        public virtual System.DateTime ModifiedDate
        {
            get;
            set;
        }
    
        public virtual System.DateTime CreatedDate
        {
            get;
            set;
        }
    
        public virtual int ModifiedBy
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
    
        public virtual WorkProfile WorkProfile
        {
            get { return _workProfile; }
            set
            {
                if (!ReferenceEquals(_workProfile, value))
                {
                    var previousValue = _workProfile;
                    _workProfile = value;
                    FixupWorkProfile(previousValue);
                }
            }
        }
        private WorkProfile _workProfile;

        #endregion

        #region Association Fixup
    
        private void FixupWorkProfile(WorkProfile previousValue)
        {
            if (previousValue != null && previousValue.WorkProfilePlans.Contains(this))
            {
                previousValue.WorkProfilePlans.Remove(this);
            }
    
            if (WorkProfile != null)
            {
                if (!WorkProfile.WorkProfilePlans.Contains(this))
                {
                    WorkProfile.WorkProfilePlans.Add(this);
                }
            }
        }

        #endregion

    }
}
