<UserControl x:Class="Soheil.Views.SkillCenter.SkillCenter"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:I="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:localstt="clr-namespace:Soheil.Views.SkillCenter"
             xmlns:common="clr-namespace:Soheil.Common;assembly=Soheil.Common"
			 xmlns:vm="clr-namespace:Soheil.Core.ViewModels.SkillCenter;assembly=Soheil.Core"
             mc:Ignorable="d" 
			 FlowDirection="RightToLeft"
             d:DesignHeight="300" d:DesignWidth="300">
	
    <UserControl.Resources>
		<ItemsPanelTemplate x:Key="horizontalStackPanelTemplate">
			<StackPanel Orientation="Horizontal"/>
		</ItemsPanelTemplate>


		<!-- tree -->
		
		<DataTemplate DataType="{x:Type vm:GeneralVm}">
            <Button Command="{Binding SelectCommand}" HorizontalAlignment="Stretch">
                <Button.ToolTip>
                    <StackPanel>
                        <TextBlock Text="{Loc txtGeneralSkillInfo1}"/>
                        <TextBlock Text="{Loc txtGeneralSkillInfo2}"/>
                    </StackPanel>
                </Button.ToolTip>
                <DockPanel HorizontalAlignment="Left">
                    <Image Source="/Soheil.Controls;component/Images/all.png" Width="32" DockPanel.Dock="Left"/>
                    <Canvas Width="5"/>
                    <TextBlock Text="{Binding Name}" Foreground="White" FontWeight="Bold" DockPanel.Dock="Right" VerticalAlignment="Center"/>
                </DockPanel>
            </Button>
        </DataTemplate>
		<DataTemplate DataType="{x:Type vm:ProductGroupVm}">
			<Expander Header="{Binding}">
				<Expander.HeaderTemplate>
					<DataTemplate>
						<DockPanel>
                            <TextBlock Text="{Binding Code}" Foreground="DarkGray" FontSize="14" DockPanel.Dock="Left" VerticalAlignment="Center"/>
                            <Canvas Width="5"/>
                            <TextBlock Text="{Binding Name}" Foreground="White" FontSize="12" DockPanel.Dock="Left" VerticalAlignment="Center"/>
							<!--Button Content="Select" Command="{Binding SelectCommand}" VerticalAlignment="Center"/-->
						</DockPanel>
					</DataTemplate>
				</Expander.HeaderTemplate>
				<ItemsControl ItemsSource="{Binding Children}"/>
			</Expander>
		</DataTemplate>
		<DataTemplate DataType="{x:Type vm:ProductVm}">
			<Expander Header="{Binding}">
				<Expander.HeaderTemplate>
					<DataTemplate>
						<DockPanel>
							<Rectangle Width="20" Height="20" Fill="{Binding Color, Converter={StaticResource colorFixer}}" DockPanel.Dock="Left" VerticalAlignment="Center"/>
                            <TextBlock Text="{Binding Code}" Foreground="DarkGray" FontSize="13" DockPanel.Dock="Left" VerticalAlignment="Center"/>
                            <Canvas Width="5"/>
                            <TextBlock Text="{Binding Name}" Foreground="White" FontSize="11" DockPanel.Dock="Left" VerticalAlignment="Center"/>
							<!--Button Content="Select" Command="{Binding SelectCommand}" VerticalAlignment="Center"/-->
						</DockPanel>
					</DataTemplate>
				</Expander.HeaderTemplate>
				<ItemsControl ItemsSource="{Binding Children}"/>
			</Expander>
		</DataTemplate>
		<DataTemplate DataType="{x:Type vm:ProductReworkVm}">
            <Button Command="{Binding SelectCommand}" HorizontalAlignment="Stretch">
                <Grid DockPanel.Dock="Left">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="20"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="5"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Image Style="{StaticResource ReworkImage}" VerticalAlignment="Center" Visibility="{Binding IsMainProduct, Converter={StaticResource booleanToInvisibilityConverter}}"/>
                    <TextBlock Text="{Binding Code}" Foreground="DarkGray" FontSize="12" Grid.Column="1" VerticalAlignment="Center"/>
                    <TextBlock Text="{Binding Name}" Foreground="White" FontSize="10" Grid.Column="3" VerticalAlignment="Center"/>
                </Grid>
            </Button>
        </DataTemplate>

		<!-- headers -->

		<DataTemplate DataType="{x:Type vm:ActivityGroupColumnVm}">
			<Border BorderThickness="1" CornerRadius="5,5,0,0" BorderBrush="DarkGray" Width="{Binding Span, Converter={StaticResource floatMultiplier}, ConverterParameter=32}" Padding="1">
				<StackPanel>
					<TextBlock Text="{Binding Name}" Foreground="Gainsboro" TextTrimming="CharacterEllipsis"/>
					<TextBlock Text="{Binding Code}" TextAlignment="Right" Foreground="#0AA"/>
				</StackPanel>
			</Border>
		</DataTemplate>
		<DataTemplate DataType="{x:Type vm:ActivityColumnVm}">
			<Border BorderThickness="1,0,1,1" BorderBrush="DarkGray" Width="32" Padding="1">
				<DockPanel>
					<DockPanel.Resources>
						<Style TargetType="TextBlock">
							<Setter Property="LayoutTransform">
								<Setter.Value>
									<RotateTransform Angle="90"/>
								</Setter.Value>
							</Setter>
						</Style>
					</DockPanel.Resources>
					<TextBlock Text="{Binding Name}" Foreground="Gainsboro" TextTrimming="CharacterEllipsis"/>
					<TextBlock Text="{Binding Code}" TextAlignment="Right" Foreground="#0AA"/>
				</DockPanel>
			</Border>
		</DataTemplate>
		<DataTemplate x:Key="operatorHeader" DataType="{x:Type vm:OperatorRowVm}">
			<Border BorderThickness="1" CornerRadius="5,0,0,5" BorderBrush="Gray" Height="44" Margin="0,1" Padding="1">
				<StackPanel>
					<TextBlock Text="{Binding Name}" Foreground="Gainsboro" TextTrimming="CharacterEllipsis"/>
					<TextBlock Text="{Binding Code}" VerticalAlignment="Bottom" Foreground="#0AA" FontSize="16"/>
				</StackPanel>
			</Border>
		</DataTemplate>
		
		<!-- cells -->

		<DataTemplate x:Key="iluoTemplate" DataType="{x:Type vm:BaseSkillVm}">
			<Canvas Width="30" Height="40" FlowDirection="LeftToRight" Margin="1">
				<Canvas.Resources>
					<Style TargetType="Polygon">
						<Setter Property="Fill" Value="Transparent"/>
						<Style.Triggers>
							<EventTrigger RoutedEvent="MouseEnter">
								<BeginStoryboard>
									<Storyboard Duration="0:0:0.1">
										<ColorAnimation Storyboard.TargetProperty="(Polygon.Fill).(SolidColorBrush.Color)" To="White" Duration="0:0:0.1"/>
									</Storyboard>
								</BeginStoryboard>
							</EventTrigger>
							<EventTrigger RoutedEvent="MouseLeave">
								<BeginStoryboard>
									<Storyboard Duration="0:0:0.3">
										<ColorAnimation Storyboard.TargetProperty="(Polygon.Fill).(SolidColorBrush.Color)" To="Transparent" Duration="0:0:0.3"/>
									</Storyboard>
								</BeginStoryboard>
							</EventTrigger>
						</Style.Triggers>
					</Style>
				</Canvas.Resources>
				<Polygon x:Name="O" Points="0,0 0,40 30,40 30,0 0,0 10,10 10,30 20,30 20,10 10,10">
					<I:Interaction.Triggers>
						<I:EventTrigger EventName="MouseDown">
							<I:InvokeCommandAction Command="{Binding ChangeCommand}" CommandParameter="{x:Static common:ILUO.O}"/>
						</I:EventTrigger>
					</I:Interaction.Triggers>
				</Polygon>
				<Polygon x:Name="U" Points="0,0 0,40 30,40 30,0 20,10 20,30 10,30 10,10">
					<I:Interaction.Triggers>
						<I:EventTrigger EventName="MouseDown">
							<I:InvokeCommandAction Command="{Binding ChangeCommand}" CommandParameter="{x:Static common:ILUO.U}"/>
						</I:EventTrigger>
					</I:Interaction.Triggers>
				</Polygon>
				<Polygon x:Name="L" Points="0,0 0,40 30,40 20,30 10,30 10,10">
					<I:Interaction.Triggers>
						<I:EventTrigger EventName="MouseDown">
							<I:InvokeCommandAction Command="{Binding ChangeCommand}" CommandParameter="{x:Static common:ILUO.L}"/>
						</I:EventTrigger>
					</I:Interaction.Triggers>
				</Polygon>
				<Polygon x:Name="I" Points="0,0 0,40 10,30 10,10">
					<I:Interaction.Triggers>
						<I:EventTrigger EventName="MouseDown">
							<I:InvokeCommandAction Command="{Binding ChangeCommand}" CommandParameter="{x:Static common:ILUO.I}"/>
						</I:EventTrigger>
					</I:Interaction.Triggers>
				</Polygon>
                <Polygon x:Name="N" Points="10,18 10,22 20,22 20,18" IsHitTestVisible="False">
                    <I:Interaction.Triggers>
                        <I:EventTrigger EventName="MouseDown">
                            <I:InvokeCommandAction Command="{Binding ChangeCommand}" CommandParameter="{x:Static common:ILUO.NA}"/>
                        </I:EventTrigger>
                    </I:Interaction.Triggers>
                </Polygon>
                <Polygon x:Name="NA" Points="10,10 10,30 20,30 20,10">
                    <I:Interaction.Triggers>
                        <I:EventTrigger EventName="MouseDown">
                            <I:InvokeCommandAction Command="{Binding ChangeCommand}" CommandParameter="{x:Static common:ILUO.N}"/>
                        </I:EventTrigger>
                    </I:Interaction.Triggers>
                </Polygon>
                <TextBlock Text="{Binding GeneralData}" Margin="10" FontWeight="Black" FontSize="16" IsHitTestVisible="False" x:Name="generalIluoText"/>
			</Canvas>
			<DataTemplate.Triggers>
				<DataTrigger Binding="{Binding Data}" Value="{x:Static common:ILUO.O}">
					<Setter TargetName="O" Property="Style">
						<Setter.Value>
							<Style TargetType="Polygon">
								<Setter Property="Fill" Value="#2C3"/>
							</Style>
						</Setter.Value>
					</Setter>
				</DataTrigger>
				<DataTrigger Binding="{Binding Data}" Value="{x:Static common:ILUO.U}">
					<Setter TargetName="U" Property="Style">
						<Setter.Value>
							<Style TargetType="Polygon">
								<Setter Property="Fill" Value="#3AE"/>
							</Style>
						</Setter.Value>
					</Setter>
				</DataTrigger>
				<DataTrigger Binding="{Binding Data}" Value="{x:Static common:ILUO.L}">
					<Setter TargetName="L" Property="Style">
						<Setter.Value>
							<Style TargetType="Polygon">
								<Setter Property="Fill" Value="#FD0"/>
							</Style>
						</Setter.Value>
					</Setter>
				</DataTrigger>
				<DataTrigger Binding="{Binding Data}" Value="{x:Static common:ILUO.I}">
					<Setter TargetName="I" Property="Style">
						<Setter.Value>
							<Style TargetType="Polygon">
								<Setter Property="Fill" Value="#C22"/>
							</Style>
						</Setter.Value>
					</Setter>
				</DataTrigger>
                <DataTrigger Binding="{Binding Data}" Value="{x:Static common:ILUO.N}">
                    <Setter TargetName="N" Property="Style">
                        <Setter.Value>
                            <Style TargetType="Polygon">
                                <Setter Property="Fill" Value="#777"/>
                            </Style>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Data}" Value="{x:Static common:ILUO.NA}">
                    <Setter TargetName="NA" Property="Style">
                        <Setter.Value>
                            <Style TargetType="Polygon">
                                <Setter Property="Fill" Value="#777"/>
                            </Style>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding GeneralData}" Value="{x:Static common:ILUO.O}">
					<Setter TargetName="generalIluoText" Property="Foreground" Value="#2C3"/>
				</DataTrigger>
				<DataTrigger Binding="{Binding GeneralData}" Value="{x:Static common:ILUO.U}">
					<Setter TargetName="generalIluoText" Property="Foreground" Value="#3AE"/>
				</DataTrigger>
				<DataTrigger Binding="{Binding GeneralData}" Value="{x:Static common:ILUO.L}">
					<Setter TargetName="generalIluoText" Property="Foreground" Value="#FD0"/>
				</DataTrigger>
				<DataTrigger Binding="{Binding GeneralData}" Value="{x:Static common:ILUO.I}">
					<Setter TargetName="generalIluoText" Property="Foreground" Value="#C22"/>
				</DataTrigger>
                <DataTrigger Binding="{Binding GeneralData}" Value="{x:Static common:ILUO.N}">
                    <Setter TargetName="generalIluoText" Property="Foreground" Value="#BBB"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding GeneralData}" Value="{x:Static common:ILUO.NA}">
                    <Setter TargetName="generalIluoText" Property="Foreground" Value="Transparent"/>
                </DataTrigger>
            </DataTemplate.Triggers>
		</DataTemplate>
		<DataTemplate x:Key="operatorRow" DataType="{x:Type vm:OperatorRowVm}">
			<Border BorderThickness="0,1" BorderBrush="Gray" Margin="0,1">
				<ItemsControl ItemsSource="{Binding Cells}" ItemTemplate="{StaticResource iluoTemplate}" ItemsPanel="{StaticResource horizontalStackPanelTemplate}" Height="42"/>
			</Border>
		</DataTemplate>

	</UserControl.Resources>
	
	
	
	
	
	<Grid>
		<DockPanel>
			<!-- tree -->
			<ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto" FlowDirection="LeftToRight">
				<ItemsControl ItemsSource="{Binding Tree}" DockPanel.Dock="Left" FlowDirection="RightToLeft"/>
			</ScrollViewer>
			<!-- title -->
			<WrapPanel DockPanel.Dock="Top" Height="30">
				<TextBlock Text="{Binding Content.SelectedItem.Code}" FontSize="16" Foreground="Gainsboro" FontWeight="Bold"/>
				<Canvas Width="20"/>
				<TextBlock Text="{Binding Content.SelectedItem.Name}" FontSize="16" Foreground="Silver" FontWeight="Bold"/>
			</WrapPanel>
			<!-- operators and corner headers -->
			<DockPanel DockPanel.Dock="Left" Width="150">
				<!-- corner headers -->
				<DockPanel DockPanel.Dock="Top" Height="150" LastChildFill="False">
					<TextBlock Foreground="Silver" Text="{Loc txtActivityGroups}" DockPanel.Dock="Top" HorizontalAlignment="Right" Margin="5"/>
					<TextBlock Foreground="Silver" Text="{Loc txtActivities}" DockPanel.Dock="Top" HorizontalAlignment="Right" Margin="5,20,5,5"/>
					<TextBlock Foreground="Silver" Text="{Loc txtOperators}" DockPanel.Dock="Bottom" Margin="5"/>
				</DockPanel>
				<!-- operators -->
				<ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Visible" x:Name="scrollBarV" ScrollChanged="VerticalScrollViewer_ScrollChanged">
					<ItemsControl ItemsSource="{Binding Content.Rows}" ItemTemplate="{StaticResource operatorHeader}" Width="150"/>
				</ScrollViewer>
			</DockPanel>
			<!-- activities and activityGroups -->
			<ScrollViewer DockPanel.Dock="Top" HorizontalScrollBarVisibility="Visible" VerticalScrollBarVisibility="Disabled" x:Name="scrollBarH" ScrollChanged="HorizontalScrollViewer_ScrollChanged" Height="150">
				<DockPanel>
					<ItemsControl ItemsSource="{Binding Content.Groups}" ItemsPanel="{StaticResource horizontalStackPanelTemplate}" DockPanel.Dock="Top"/>
					<ItemsControl ItemsSource="{Binding Content.Columns}" ItemsPanel="{StaticResource horizontalStackPanelTemplate}"/>
				</DockPanel>
			</ScrollViewer>
			<!-- iluos -->
			<ScrollViewer HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" x:Name="scrollBar" ScrollChanged="scrollBar_ScrollChanged">
				<ItemsControl ItemsSource="{Binding Content.Rows}" ItemTemplate="{StaticResource operatorRow}" IsEnabled="{Binding CanEdit}"/>
			</ScrollViewer>
		</DockPanel>
		<Grid Background="#2FFF" Visibility="{Binding IsLoading, Converter={StaticResource booleanToVisibilityConverter}}">
			<TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Text="Loading..." Foreground="White" FontWeight="Bold" FontSize="22"/>
		</Grid>
		<Grid Background="#4F88" Visibility="{Binding Message.HasException, Converter={StaticResource booleanToVisibilityConverter}}">
			<StackPanel VerticalAlignment="Center">
				<TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Text="{Binding Message.FullExceptionText}" Foreground="Yellow" FontWeight="Bold" FontSize="22"/>
				<Button Width="300" Height="60" Content="{Loc txtClose}" Command="{Binding CloseMessageCommand}"/>
			</StackPanel>
		</Grid>
	</Grid>
</UserControl>
