<UserControl x:Class="Soheil.Views.SoheilSingularView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:Mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:D="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:Views="clr-namespace:Soheil.Views"
             xmlns:I="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:Behavior="clr-namespace:Soheil.Core.DataValidation.Behavior;assembly=Soheil.Core"
             xmlns:TemplateSelectors="clr-namespace:Soheil.TemplateSelectors"
             xmlns:IndexViewModels="clr-namespace:Soheil.Core.ViewModels.Index;assembly=Soheil.Core"
             xmlns:Common="clr-namespace:Soheil.Common;assembly=Soheil.Common"
             xmlns:SoheilException="clr-namespace:Soheil.Common.SoheilException;assembly=Soheil.Common"
             xmlns:customControls="clr-namespace:Soheil.Controls.CustomControls;assembly=Soheil.Controls"
             xmlns:System="clr-namespace:System;assembly=mscorlib"
             xmlns:Indices="clr-namespace:Soheil.Core.Index;assembly=Soheil.Core"
             xmlns:Behaviors="clr-namespace:Soheil.Controls.Behaviors;assembly=Soheil.Controls"
             xmlns:MultipleCommands="clr-namespace:Soheil.Core.Commands.MultipleCommands;assembly=Soheil.Core"
             xmlns:Virtualizing="clr-namespace:Soheil.Core.Virtualizing;assembly=Soheil.Core"
             xmlns:Reports="clr-namespace:Soheil.Core.ViewModels.Reports;assembly=Soheil.Core"
             Mc:Ignorable="D">
    <UserControl.Resources>
        <SolidColorBrush x:Key="ClickedTransparent" Color="#3000" />
		<SolidColorBrush x:Key="ShadowTransparent" Color="#3FFF" />
		<SolidColorBrush x:Key="SingularViewBackground" Color="#1000" />

		<!--................................................ 2.Basic .................................................-->

		<!-- 2.6. SetupTime Table -->
		<DataTemplate x:Key="SetupTimesTemplate" DataType="{x:Type vm:SetupTimeTableVm}"
				xmlns:vm="clr-namespace:Soheil.Core.ViewModels.SetupTime;assembly=Soheil.Core"
				xmlns:v="clr-namespace:Soheil.Views.SetupTime">
			<v:SetupTimeTable Background="{StaticResource SingularViewBackground}"/>
		</DataTemplate>

		<!-- 2.7. Skill Center -->
		<DataTemplate x:Key="SkillCenterTemplate" DataType="{x:Type vm:SkillCenterVm}"
             xmlns:v="clr-namespace:Soheil.Views.SkillCenter"
			 xmlns:vm="clr-namespace:Soheil.Core.ViewModels.SkillCenter;assembly=Soheil.Core">
			<v:SkillCenter Background="{StaticResource SingularViewBackground}"/>
		</DataTemplate>
		
		<!--................................................ 3.Control ...............................................-->

        <!-- 3.1. Product Plan (PP) -->
		<DataTemplate x:Key="PPTableTemplate" DataType="{x:Type vm:PPTableVm}"
			xmlns:local="clr-namespace:Soheil.Views.PP"
			xmlns:vm="clr-namespace:Soheil.Core.ViewModels.PP;assembly=Soheil.Core"
			xmlns:report="clr-namespace:Soheil.Core.ViewModels.PP.Report;assembly=Soheil.Core"
			xmlns:timeline="clr-namespace:Soheil.Core.ViewModels.PP.Timeline;assembly=Soheil.Core"
			xmlns:cal="clr-namespace:Arash.PersianDateControls;assembly=PersianDateControls">
			<DataTemplate.Resources>
				<System:Double x:Key="StationOrActivityHeaderWidth">100.0</System:Double>
				<GridLength x:Key="StationOrActivityHeaderGridLength">100.0</GridLength>
				<Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
					<Setter Property="Margin" Value="1"/>
				</Style>
				<ControlTemplate x:Key="ButtonTemplate" TargetType="{x:Type Button}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="HoverOn">
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverShineBorder"
                                       Storyboard.TargetProperty="(UIElement.Opacity)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder"
                                       Storyboard.TargetProperty="(UIElement.Opacity)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
							</DoubleAnimationUsingKeyFrames>

						</Storyboard>
						<Storyboard x:Key="HoverOff">
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverShineBorder"
                                       Storyboard.TargetProperty="(UIElement.Opacity)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder"
                                       Storyboard.TargetProperty="(UIElement.Opacity)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
							</DoubleAnimationUsingKeyFrames>

						</Storyboard>
						<Storyboard x:Key="PressedOn">

							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PressedBorder"
                                       Storyboard.TargetProperty="(UIElement.Opacity)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
							</DoubleAnimationUsingKeyFrames>

						</Storyboard>
						<Storyboard x:Key="PressedOff">

							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PressedBorder"
                                       Storyboard.TargetProperty="(UIElement.Opacity)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
							</DoubleAnimationUsingKeyFrames>

						</Storyboard>
						<Storyboard x:Key="FocusedOn">
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement"
                                       Storyboard.TargetProperty="(UIElement.Opacity)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="FocussedOff">
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement"
                                       Storyboard.TargetProperty="(UIElement.Opacity)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>

					</ControlTemplate.Resources>
					<Grid x:Name="Grid" TextBlock.Foreground="Black">
						<Border x:Name="Background" Background="{StaticResource NormalBrush}"
              BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3" />
						<Border x:Name="HoverBorder" Background="{StaticResource HoverBrush}"
              BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3"
              Opacity="0" />
						<Border x:Name="HoverShineBorder" Background="{StaticResource HoverShineBrush}"
              BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3"
              Opacity="0" />
						<Border x:Name="PressedBorder" Background="{StaticResource PressedBrush}"
              BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3"
              Opacity="0" />
						<Border x:Name="ShineBorder" Background="{StaticResource ShineBrush}"
              BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3"
              Opacity="1" />
						<ContentPresenter Margin="{TemplateBinding Padding}"
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" />
						<Border x:Name="FocusVisualElement" Margin="1,1,1,1" BorderBrush="{StaticResource HoverShineBrush}"
              BorderThickness="1" CornerRadius="3,3,3,3" IsHitTestVisible="false" Opacity="0" />
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsDefault" Value="True">
							<Setter TargetName="ShineBorder" Property="BorderBrush" Value="{DynamicResource DefaultedBorderBrush}" />
						</Trigger>
						<Trigger Property="IsKeyboardFocused" Value="true">
							<Trigger.ExitActions>
								<BeginStoryboard x:Name="FocussedOff_BeginStoryboard" Storyboard="{StaticResource FocussedOff}" />
							</Trigger.ExitActions>
							<Trigger.EnterActions>
								<BeginStoryboard x:Name="FocusedOn_BeginStoryboard" Storyboard="{StaticResource FocusedOn}" />
							</Trigger.EnterActions>

						</Trigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Trigger.ExitActions>
								<BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}" />
							</Trigger.ExitActions>
							<Trigger.EnterActions>
								<BeginStoryboard Storyboard="{StaticResource HoverOn}" />
							</Trigger.EnterActions>

						</Trigger>
						<Trigger Property="IsPressed" Value="true">
							<Trigger.ExitActions>
								<BeginStoryboard Storyboard="{StaticResource PressedOff}" />
							</Trigger.ExitActions>
							<Trigger.EnterActions>
								<BeginStoryboard Storyboard="{StaticResource PressedOn}" />
							</Trigger.EnterActions>
						</Trigger>
						<Trigger Property="IsEnabled" Value="true" />
						<Trigger Property="IsEnabled" Value="false">
							<Setter TargetName="Background" Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" />
							<Setter TargetName="ShineBorder" Property="BorderBrush" Value="{DynamicResource DisabledBorderBrush}" />
							<Setter TargetName="Grid" Property="Opacity" Value="0.5" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
				<Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
					<Setter Property="Background" Value="Black"/>
					<Setter Property="Template" Value="{StaticResource ButtonTemplate}"/>
				</Style>


				<LinearGradientBrush x:Key="SlideWindowBackground" StartPoint="0,0" EndPoint="1,0.001">
					<GradientBrush.GradientStops>
						<GradientStopCollection>
							<GradientStop Color="#2BFF" Offset="0" />
							<GradientStop Color="#8CFF" Offset="0.5" />
							<GradientStop Color="#48CC" Offset="0.6" />
							<GradientStop Color="#8AFF" Offset="1"/>
						</GradientStopCollection>
					</GradientBrush.GradientStops>
				</LinearGradientBrush>
				<LinearGradientBrush x:Key="SlideWindowBorder" StartPoint="0,0" EndPoint="0,1">
					<GradientBrush.GradientStops>
						<GradientStopCollection>
							<GradientStop Color="#CFF" Offset="0.0"/>
							<GradientStop Color="#9DC" Offset="1.0"/>
						</GradientStopCollection>
					</GradientBrush.GradientStops>
				</LinearGradientBrush>

				<!--ScrollBars-->
				<Style x:Key="VerticalThumb" D:IsControlPart="True" TargetType="{x:Type Thumb}" BasedOn="{x:Null}">
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="{x:Type Thumb}">
								<Grid Margin="0,0,0,0" x:Name="Grid">
									<Rectangle HorizontalAlignment="Stretch" x:Name="Rectangle" VerticalAlignment="Stretch" Width="Auto" Height="Auto" RadiusX="3" RadiusY="3" Fill="{TemplateBinding Background}" Stroke="{x:Null}" />
									<!--Opacity="0.6"-->
								</Grid>
								<ControlTemplate.Triggers>
									<Trigger Property="IsFocused" Value="True"/>
									<Trigger Property="IsMouseOver" Value="True">
										<Setter Property="Fill" TargetName="Rectangle" Value="#FFCCCCCC"/>
										<!---->
										<Setter Property="Opacity" TargetName="Rectangle" Value="1"/>
									</Trigger>
									<Trigger Property="IsEnabled" Value="False"/>
									<Trigger Property="IsDragging" Value="True"/>
								</ControlTemplate.Triggers>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
				<Style x:Key="ScrollRepeatButtonStyle" D:IsControlPart="True" TargetType="{x:Type RepeatButton}">
				  <Setter Property="Background" Value="Transparent"/>
				  <Setter Property="BorderBrush" Value="Transparent"/>
				  <Setter Property="IsTabStop" Value="false"/>
				  <Setter Property="Focusable" Value="false"/>
				  <Setter Property="Template">
					<Setter.Value>
					  <ControlTemplate TargetType="{x:Type RepeatButton}">
						<Grid>
						  <Rectangle Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}"/>
						</Grid>
					  </ControlTemplate>
					</Setter.Value>
				  </Setter>
				</Style>
				<Style x:Key="MenuScrollBar" TargetType="{x:Type ScrollBar}">
					<Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
					<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="{x:Type ScrollBar}">
								<Grid x:Name="GridRoot" Background="{x:Null}" Width="15">
									<Grid.RowDefinitions>
										<RowDefinition MaxHeight="18" Height="16"/>
										<RowDefinition Height="*"/>
										<RowDefinition MaxHeight="18" Height="16"/>
									</Grid.RowDefinitions>

									<Rectangle Stroke="{x:Null}" RadiusX="0" RadiusY="0" VerticalAlignment="Stretch" Height="Auto" Grid.RowSpan="3" Fill="#D81B171E"/>

									<RepeatButton x:Name="DecreaseRepeat" Style="{DynamicResource SimpleRepeatButton}" Command="ScrollBar.LineUpCommand" Background="Transparent" BorderBrush="{x:Null}" Margin="0,0,0,0" Focusable="False" VerticalAlignment="Stretch" Height="Auto" Grid.RowSpan="1">
										<Grid>
											<Path x:Name="DecreaseArrow" StrokeThickness="1" Data="M 0 4 L 8 4 L 4 0 Z" HorizontalAlignment="Center" VerticalAlignment="Center" Width="7" Height="5" Fill="#FFCCCCCC" Stretch="Fill"/>
										</Grid>
									</RepeatButton>

									<!-- Track is a special layout container which sizes the thumb and the repeat button which do jump scrolling either side of it -->
											<Track Grid.Row="1" x:Name="PART_Track" Orientation="Vertical" IsDirectionReversed="true">
												<Track.Thumb>
													<Thumb Style="{DynamicResource VerticalThumb}" Background="#FFCCCCCC" Foreground="{x:Null}" HorizontalAlignment="Center" VerticalAlignment="Stretch" Width="7"/>
												</Track.Thumb>
												<Track.IncreaseRepeatButton>
													<RepeatButton x:Name="PageUp" Style="{DynamicResource ScrollRepeatButtonStyle}" Command="ScrollBar.PageDownCommand"/>
												</Track.IncreaseRepeatButton>
												<Track.DecreaseRepeatButton>
													<RepeatButton x:Name="PageDown" Style="{DynamicResource ScrollRepeatButtonStyle}" Command="ScrollBar.PageUpCommand"/>
												</Track.DecreaseRepeatButton>
											</Track>

											<RepeatButton x:Name="IncreaseRepeat" Style="{DynamicResource SimpleRepeatButton}" Command="ScrollBar.LineDownCommand" Background="Transparent" BorderBrush="{x:Null}" Margin="0,0,0,0" Focusable="False" VerticalAlignment="Stretch" Height="Auto" Grid.Row="2" Grid.RowSpan="1">
												<Grid>
													<Path x:Name="IncreaseArrow" StrokeThickness="1" Data="M 0 0 L 4 4 L 8 0 Z" Width="7" Height="5" Fill="#FFCCCCCC" Stretch="Fill"/>
												</Grid>
											</RepeatButton>

											</Grid>

											<!-- This uses a single template for ScrollBar and rotate it to be Horizontal
			It also changes the commands so that the it does Left and Right instead of Up and Down Commands -->
											<ControlTemplate.Triggers>
												<Trigger Property="IsEnabled" Value="False">
													<Setter Property="Visibility" TargetName="GridRoot" Value="Collapsed"/>
												</Trigger>
												<Trigger Property="Orientation" Value="Horizontal">
													<!-- Rotate the ScrollBar from Vertical to Horizontal -->
													<Setter Property="LayoutTransform" TargetName="GridRoot">
														<Setter.Value>
															<RotateTransform Angle="-90"/>
														</Setter.Value>
													</Setter>
													<!-- Track is bound to Orientation internally, so we need to rotate it back to Vertical -->
													<Setter TargetName="PART_Track" Property="Orientation" Value="Vertical"/>

													<!-- Change the commands to do Horizontal commands -->
													<Setter Property="Command" Value="ScrollBar.PageLeftCommand" TargetName="PageDown"/>
													<Setter Property="Command" Value="ScrollBar.PageRightCommand" TargetName="PageUp"/>
												</Trigger>
											</ControlTemplate.Triggers>
								</ControlTemplate>
							</Setter.Value>
						</Setter>
					</Style>
				<Style TargetType="{x:Type ScrollViewer}" BasedOn="{x:Null}">
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="{x:Type ScrollViewer}">
								<ControlTemplate.Resources>
									<Storyboard x:Key="MouseOver">
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PART_HorizontalScrollBar" Storyboard.TargetProperty="(UIElement.Opacity)">
											<SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PART_VerticalScrollBar" Storyboard.TargetProperty="(UIElement.Opacity)">
											<SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
									<Storyboard x:Key="MouseOut">
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PART_HorizontalScrollBar" Storyboard.TargetProperty="(UIElement.Opacity)">
											<SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.2"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PART_VerticalScrollBar" Storyboard.TargetProperty="(UIElement.Opacity)">
											<SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.2"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</ControlTemplate.Resources>
								<Grid>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="*"/>
										<ColumnDefinition Width="Auto"/>
									</Grid.ColumnDefinitions>
									<Grid.RowDefinitions>
										<RowDefinition Height="*"/>
										<RowDefinition Height="Auto"/>
									</Grid.RowDefinitions>
									<ScrollContentPresenter Grid.Column="0" Grid.Row="0" Margin="{TemplateBinding Padding}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" CanContentScroll="{TemplateBinding CanContentScroll}" Grid.ColumnSpan="1" x:Name="scrollContentPresenter"/>

									<!-- The visibility of the ScrollBars is controlled by the implementation fo the control -->
									<ScrollBar Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Grid.Column="0" Grid.Row="1" x:Name="PART_HorizontalScrollBar" Style="{DynamicResource MenuScrollBar}" Orientation="Horizontal" Value="{Binding Path=HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}" Minimum="0" Maximum="{TemplateBinding ScrollableWidth}" AutomationProperties.AutomationId="HorizontalScrollBar" Opacity="0.2"/>
									<ScrollBar Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Grid.Column="1" Grid.Row="0" x:Name="PART_VerticalScrollBar" Style="{DynamicResource MenuScrollBar}" Orientation="Vertical" Value="{Binding Path=VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" Minimum="0" Maximum="{TemplateBinding ScrollableHeight}" AutomationProperties.AutomationId="VerticalScrollBar" Opacity="0.2"/>
								</Grid>
								<ControlTemplate.Triggers>
									<Trigger Property="IsMouseOver" Value="True">
										<Trigger.ExitActions>
											<BeginStoryboard x:Name="MouseOut_BeginStoryboard1" Storyboard="{StaticResource MouseOut}"/>
										</Trigger.ExitActions>
										<Trigger.EnterActions>
											<BeginStoryboard Storyboard="{StaticResource MouseOver}" x:Name="MouseOver_BeginStoryboard"/>
										</Trigger.EnterActions>
									</Trigger>
								</ControlTemplate.Triggers>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
					<Setter Property="Foreground" Value="#FFFFFFFF"/>
					<Setter Property="Background" Value="{x:Null}"/>
					<Setter Property="BorderThickness" Value="1,0,0,1"/>
					<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
					<Setter Property="VerticalContentAlignment" Value="Stretch"/>
				</Style>
				<Style x:Key="SimpleRepeatButton" D:IsControlPart="True" TargetType="{x:Type RepeatButton}" BasedOn="{x:Null}">
					<Setter Property="Background" Value="{DynamicResource NormalBrush}"/>
					<Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}"/>
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="{x:Type RepeatButton}">
								<Grid>
									<Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"/>
									<ContentPresenter HorizontalAlignment="Stretch" x:Name="ContentPresenter" VerticalAlignment="Stretch" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" Opacity="1"/>
									<!--Opacity="0.6"-->
								</Grid>
								<ControlTemplate.Triggers>
									<Trigger Property="IsKeyboardFocused" Value="true"/>
									<Trigger Property="IsMouseOver" Value="true">
										<Setter Property="Opacity" TargetName="ContentPresenter" Value="1"/>
									</Trigger>
									<Trigger Property="IsPressed" Value="true"/>
									<Trigger Property="IsEnabled" Value="false"/>
								</ControlTemplate.Triggers>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</DataTemplate.Resources>
            <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">

                <Grid Margin="5" Background="{StaticResource SingularViewBackground}" 
				      x:Name="ppTable" MouseMove="Area_MouseMove" MouseUp="Area_MouseUp" Loaded="ppTable_Loaded_1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="40"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Name="cd_stations" Width="{StaticResource StationOrActivityHeaderGridLength}"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <ToolBarTray Background="Transparent" Grid.ColumnSpan="2" FlowDirection="RightToLeft">
                        <ToolBar Background="Transparent">
                            <Button Margin="1" Command="{Binding ToggleTaskEditorCommand}">
								<Image Style="{StaticResource TaskImage}"/>
                                <Button.ToolTip>
                                    <StackPanel>
                                        <TextBlock Text="ویرایشگر Task"/>
                                        <TextBlock Foreground="DarkGray" FontSize="10" Text="ویرایشگر Task با محتویات اخیر نمایش داده می شود"/>
                                    </StackPanel>
                                </Button.ToolTip>
                            </Button>
                            <UniformGrid Rows="1" Background="#80FF" x:Name="taskEditorToolbarButtons" Width="0">
                                <Button Margin="1" Command="{Binding TaskEditor.ResetCurrentBlockCommand}">
									<Image Style="{StaticResource Undo16Image}"/>
                                    <Button.ToolTip>
                                        <StackPanel>
                                            <TextBlock Text="خالی کردن برنامه"/>
                                            <TextBlock Foreground="DarkGray" FontSize="10" Text="تمام اطلاعات مربوط به برنامه فعلی از صفحه پاک می شود"/>
                                        </StackPanel>
                                    </Button.ToolTip>
                                </Button>
                                <Button Margin="1" Command="{Binding TaskEditor.ClearAllCommand}">
                                    <Image Style="{StaticResource NewTaskImage}"/>
                                    <Button.ToolTip>
                                        <StackPanel>
                                            <TextBlock Text="خالی کردن صفحه"/>
                                            <TextBlock Foreground="DarkGray" FontSize="10" Text="اطلاعات موجود در ویرایشگر Task حذف خواهد شد"/>
                                        </StackPanel>
                                    </Button.ToolTip>
                                </Button>
                                <!--Button Margin="1" Command="{Binding TaskEditor.SaveCommand}">
									<Image Style="{StaticResource Save16Image}"/>
                                    <Button.ToolTip>
                                        <StackPanel>
                                            <TextBlock Text="ذخیره برنامه"/>
                                            <TextBlock Foreground="DarkGray" FontSize="10" Text="برنامه فعلی در ویرایشگر Task ذخیره می شود"/>
                                        </StackPanel>
                                    </Button.ToolTip>
                                </Button-->
                                <Button Margin="1" Command="{Binding TaskEditor.ExitCommand}">
									<Image Style="{StaticResource CloseWipeUpImage}"/>
                                    <Button.ToolTip>
                                        <StackPanel>
                                            <TextBlock Text="بستن ویرایشگر"/>
                                            <TextBlock Foreground="DarkGray" FontSize="10" Text="ویرایشگر Task بسته می شود و آخرین اطلاعات آن نگه داشته می شود"/>
                                        </StackPanel>
                                    </Button.ToolTip>
                                </Button>
                                <Button Margin="1" Command="{Binding TaskEditor.SaveAllCommand}">
									<Image Style="{StaticResource SaveWipeUpImage}"/>
                                    <Button.ToolTip>
                                        <StackPanel>
                                            <TextBlock Text="ذخیره همه و خروج"/>
                                            <TextBlock Foreground="DarkGray" FontSize="10" Text="تمام برنامه های ویرایشگر Task ذخیره و ویرایشگر بسته می شود"/>
                                        </StackPanel>
                                    </Button.ToolTip>
                                </Button>
                            </UniformGrid>
                            <Separator/>
                            <Button Margin="1" Command="{Binding ToggleJobEditorCommand}">
                                <Image Style="{StaticResource JobImage}"/>
                                <Button.ToolTip>
                                    <StackPanel>
                                        <TextBlock Text="ویرایشگر Job"/>
                                        <TextBlock Foreground="DarkGray" FontSize="10" Text="ویرایشگر Job با محتویات اخیر نمایش داده می شود"/>
                                    </StackPanel>
                                </Button.ToolTip>
                            </Button>
                            <UniformGrid Rows="1" Background="#80FF" x:Name="jobEditorToolbarButtons" Width="0">
                                <Button Margin="1" Command="{Binding JobEditor.ClearAllCommand}">
                                    <Image Style="{StaticResource NewJobImage}"/>
                                    <Button.ToolTip>
                                        <StackPanel>
                                            <TextBlock Text="خالی کردن صفحه"/>
                                            <TextBlock Foreground="DarkGray" FontSize="10" Text="اطلاعات موجود در ویرایشگر Job حذف خواهد شد"/>
                                        </StackPanel>
                                    </Button.ToolTip>
                                </Button>
								<Button Margin="1" Command="{Binding JobEditor.ExitCommand}">
									<Image Style="{StaticResource CloseWipeUpImage}"/>
									<Button.ToolTip>
										<StackPanel>
											<TextBlock Text="بستن ویرایشگر"/>
											<TextBlock Foreground="DarkGray" FontSize="10" Text="ویرایشگر Job بسته می شود و آخرین اطلاعات آن نگه داشته می شود"/>
										</StackPanel>
									</Button.ToolTip>
								</Button>
								<Button Margin="1" Command="{Binding JobEditor.SaveAllCommand}">
                                    <Image Style="{StaticResource SaveWipeUpImage}"/>
                                    <Button.ToolTip>
                                        <StackPanel>
                                            <TextBlock Text="ذخیره همه و خروج"/>
                                            <TextBlock Foreground="DarkGray" FontSize="10" Text="تمام برنامه های ویرایشگر Job ذخیره و ویرایشگر بسته می شود"/>
                                        </StackPanel>
                                    </Button.ToolTip>
                                </Button>
                            </UniformGrid>
                            <Separator/>
                            <ToggleButton Margin="2" IsChecked="{Binding ShowInsertSetupButton}">
                                <Image Style="{StaticResource AddSetupImage}"/>
                                <ToggleButton.ToolTip>
                                    <StackPanel>
                                        <TextBlock Text="نمایش کلیدهای آماده سازی خودکار"/>
                                        <TextBlock Foreground="DarkGray" FontSize="10" Text="با کلیک بر روی کلید هر Task، آماده سازی بطور خودکار قبل از آن Task اضافه میشود"/>
                                    </StackPanel>
                                </ToggleButton.ToolTip>
                            </ToggleButton>

                            <ToggleButton Margin="2" IsChecked="{Binding JobList.IsVisible}">
								<Image Style="{StaticResource JobListImage}"/>
                                <ToggleButton.ToolTip>
                                    <StackPanel>
                                        <TextBlock Text="نمایش لیست Job ها"/>
                                        <TextBlock Foreground="DarkGray" FontSize="10" Text="Job های بازه زمانی مشخص شده لیست می شوند"/>
                                    </StackPanel>
                                </ToggleButton.ToolTip>
                            </ToggleButton>
                        </ToolBar>
                        <ToolBar Background="Transparent">
                            <Button Command="{Binding GoToNowCommand}" ToolTip="برو به الان">
                                <Image Style="{StaticResource NowImage}"/>
                            </Button>
                            <WrapPanel VerticalAlignment="Center">
                                <Image Style="{StaticResource ZoomImage}" VerticalAlignment="Center"/>
								<Slider Margin="2" Maximum="10" Minimum="1" Value="{Binding HourZoom, Converter={StaticResource logarithmicSlider}}" Width="140" VerticalAlignment="Center">
									<I:Interaction.Triggers>
										<I:EventTrigger EventName="PreviewMouseDown">
											<I:InvokeCommandAction Command="{Binding ZoomStartedCommand}"/>
										</I:EventTrigger>
									</I:Interaction.Triggers>
								</Slider>
								<WrapPanel.ToolTip>
                                    <ToolTip>بزرگنمایی زمان</ToolTip>
                                </WrapPanel.ToolTip>
                            </WrapPanel>
							<Button Command="{Binding UndoZoomCommand}">
								<Image Style="{StaticResource ZoomUndoImage}"/>
                                <Button.ToolTip>
                                    <ToolTip>بزرگنمایی قبلی</ToolTip>
                                </Button.ToolTip>
                            </Button>
                            <Separator/>
                            <ToggleButton IsChecked="{Binding AlwaysLoadTasks}">
								<Image Style="{StaticResource AutoLoadTaskImage}"/>
                                <ToggleButton.ToolTip>
                                    <ToolTip>لود اتوماتیک</ToolTip>
                                </ToggleButton.ToolTip>
                            </ToggleButton>
                            <ToggleButton IsChecked="{Binding ShowProductCodes}">
								<Image Style="{StaticResource ToggleShowCodeImage}"/>
                                <ToggleButton.ToolTip>
                                    <ToolTip>نمایش کد بجای نام محصولات</ToolTip>
                                </ToggleButton.ToolTip>
                            </ToggleButton>
                            <Separator/>
                            <ToggleButton IsChecked="{Binding ShowBlockReport}">
								<Image Style="{StaticResource ProcessReportImage}"/>
                                <ToggleButton.ToolTip>
                                    <ToolTip>گزارش</ToolTip>
                                </ToggleButton.ToolTip>
                            </ToggleButton>
                        </ToolBar>
                    </ToolBarTray>

                    <!-- JobList -->
					<local:JobList x:Name="jobListPanel" Grid.ColumnSpan="2" Grid.Row="1" Height="0" 
								   DataContext="{Binding JobList}" FlowDirection="RightToLeft"/>
                    <!--Job Editor-->
					<local:PPJobEditor Grid.ColumnSpan="2" Grid.Row="1" x:Name="jobEditorPanel" Height="0"
										HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Padding="20"
										DataContext="{Binding JobEditor}"/>
                    <!--Task Editor-->
					<local:PPTaskEditor Grid.ColumnSpan="2" Grid.Row="1" x:Name="taskEditorPanel" Height="0"
										HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Padding="20"
										DataContext="{Binding TaskEditor}"/>
                    <!-- NPT Editor-->
					<local:NptEditor Grid.ColumnSpan="2" Grid.Row="1" x:Name="nptEditorPanel" Height="0"
									 DataContext="{Binding SelectedNPT}" FlowDirection="RightToLeft"/>
					<!-- TaskReportBuilder -->
					<local:TaskReportBuilder Grid.ColumnSpan="2" Grid.Row="1" x:Name="taskReportBuilderPanel" Height="0"
											 DataContext="{Binding CurrentTaskReportBuilder}" FlowDirection="RightToLeft"/>
					<!-- NPTReportBuilder -->
					<local:NptReportBuilder Grid.ColumnSpan="2" Grid.Row="1" x:Name="nptReportBuilderPanel" Height="0"
											DataContext="{Binding CurrentNPTReportBuilder}" FlowDirection="RightToLeft"/>
					<!-- ProcessReportBuilder -->
					<local:ProcessReportBuilder Grid.ColumnSpan="2" Grid.Row="1" x:Name="processReportBuilderPanel" Height="0"
												DataContext="{Binding CurrentProcessReportBuilder}" FlowDirection="RightToLeft"/>

					<!-- Month-Day-Hour Sliders-->
                    <ItemsControl Grid.Row="2" Grid.Column="1" SizeChanged="Grid_SizeChanged" ItemsSource="{Binding Months}" Name="ic_months">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <Grid customControls:GridHelper.ColumnCount="12" customControls:GridHelper.RowCount="1"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <ToggleButton BorderBrush="{StaticResource HeaderBorderBrush}" IsChecked="{Binding IsSelected}" SnapsToDevicePixels="True">
                                    <ToggleButton.Width>
                                        <MultiBinding Converter="{StaticResource aCrossBDividebByC}">
                                            <Binding Path="NumOfDays"/>
                                            <Binding ElementName="ic_months" Path="ActualWidth"/>
                                            <Binding ElementName="ppTable" Path="DataContext.DaysInYear"/>
                                        </MultiBinding>
                                    </ToggleButton.Width>
                                    <ToggleButton.Background>
                                        <SolidColorBrush Color="{Binding Data, Converter={StaticResource timeRollItemBackgroundConverter}, ConverterParameter=Month}"/>
                                    </ToggleButton.Background>
                                    <TextBlock Text="{Binding Text}" VerticalAlignment="Center" HorizontalAlignment="Center">
                                        <TextBlock.Foreground>
                                            <SolidColorBrush Color="{Binding Data, Converter={StaticResource timeRollItemForegroundConverter}, ConverterParameter=Month}"/>
                                        </TextBlock.Foreground>
                                    </TextBlock>
                                </ToggleButton>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                        <ItemsControl.ItemContainerStyle>
                            <Style TargetType="ContentPresenter">
                                <Setter Property="Grid.Column" Value="{Binding ColumnIndex}"/>
                            </Style>
                        </ItemsControl.ItemContainerStyle>
                        <ItemsControl.Template>
                            <ControlTemplate>
                                <Grid>
                                    <Border BorderThickness="0,1,0,0" BorderBrush="Silver" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" SnapsToDevicePixels="True">
                                        <ItemsPresenter/>
                                    </Border>
                                </Grid>
                            </ControlTemplate>
                        </ItemsControl.Template>
                    </ItemsControl>
                    <ItemsControl Grid.Row="3" Grid.Column="1" ItemsSource="{Binding Days}" ClipToBounds="True">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <Grid customControls:GridHelper.ColumnCount="{Binding DaysInYear}" customControls:GridHelper.RowCount="1"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Border Width="{Binding ElementName=ppTable, Path=DataContext.DayZoom}" SnapsToDevicePixels="True">
                                    <Border.Background>
                                        <SolidColorBrush Color="{Binding Data, Converter={StaticResource timeRollItemBackgroundConverter}, ConverterParameter=Day}"/>
                                    </Border.Background>
                                    <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center">
                                        <TextBlock Text="{Binding Text}" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="2,0">
                                            <TextBlock.Foreground>
                                                <SolidColorBrush Color="{Binding Data, Converter={StaticResource timeRollItemForegroundConverter}, ConverterParameter=Day}"/>
                                            </TextBlock.Foreground>
                                        </TextBlock>
                                        <TextBlock Text="{Binding DayOfWeek}" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="2,-4,2,2">
                                            <TextBlock.Foreground>
                                                <SolidColorBrush Color="{Binding Data, Converter={StaticResource timeRollItemForegroundConverter}, ConverterParameter=Day}"/>
                                            </TextBlock.Foreground>
                                        </TextBlock>
                                    </StackPanel>
                                </Border>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                        <ItemsControl.ItemContainerStyle>
                            <Style TargetType="ContentPresenter">
                                <Setter Property="Grid.Column" Value="{Binding ColumnIndex}"/>
                            </Style>
                        </ItemsControl.ItemContainerStyle>
                        <ItemsControl.Template>
                            <ControlTemplate>
                                <Grid>
                                    <Border BorderThickness="0,1,0,0" BorderBrush="Silver" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" SnapsToDevicePixels="True">
                                        <ItemsPresenter ClipToBounds="True"/>
                                    </Border>
                                    <Border Cursor="ScrollWE" BorderThickness="1" CornerRadius="2" HorizontalAlignment="Left" ClipToBounds="True"
									    Background="{StaticResource SlideWindowBackground}" BorderBrush="{StaticResource SlideWindowBorder}"
									    MouseDown="dayLittleWindowMouseDown" Name="daysLittleWindow" SnapsToDevicePixels="True">
                                        <Border.Width>
                                            <MultiBinding Converter="{StaticResource zoomMathDayLittleWindowWidth}">
                                                <Binding ElementName="ic_months" Path="ActualWidth"/>
                                                <Binding Path="DayZoom"/>
                                                <Binding Path="HourZoom"/>
                                            </MultiBinding>
                                        </Border.Width>
                                        <Border.Margin>
                                            <MultiBinding Converter="{StaticResource zoomMathDayLittleWindowMargin}">
                                                <Binding Path="HoursPassed"/>
                                                <Binding Path="DayZoom"/>
                                            </MultiBinding>
                                        </Border.Margin>
                                    </Border>
                                </Grid>
                            </ControlTemplate>
                        </ItemsControl.Template>
                    </ItemsControl>
                    <ItemsControl Grid.Row="4" Grid.Column="1" ItemsSource="{Binding Hours}" Name="ic_hours" ClipToBounds="True">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <Canvas ClipToBounds="True"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Border Height="40" Width="{Binding ElementName=ppTable, Path=DataContext.HourZoom}" ClipToBounds="True"
									    BorderThickness="1,0,0,0" BorderBrush="{StaticResource HeaderBorderBrush}" SnapsToDevicePixels="True">
                                    <Border.Margin>
                                        <MultiBinding Converter="{StaticResource gridColumnToMargin}">
                                            <Binding Path="ColumnIndex"/>
                                            <Binding ElementName="ppTable" Path="DataContext.HourZoom"/>
                                        </MultiBinding>
                                    </Border.Margin>
                                    <Border.Background>
                                        <SolidColorBrush Color="{Binding Data, Converter={StaticResource timeRollItemBackgroundConverter}, ConverterParameter=Hour}"/>
                                    </Border.Background>
                                    <StackPanel VerticalAlignment="Stretch" HorizontalAlignment="Left">
                                        <StackPanel.LayoutTransform>
                                            <RotateTransform Angle="270"/>
                                        </StackPanel.LayoutTransform>
                                        <TextBlock Text="{Binding Text}" TextAlignment="Left" Margin="2,0,0,0">
                                            <TextBlock.Foreground>
                                                <SolidColorBrush Color="{Binding Data, Converter={StaticResource timeRollItemForegroundConverter}, ConverterParameter=Hour}"/>
                                            </TextBlock.Foreground>
                                        </TextBlock>
                                        <TextBlock Text="{Binding DateText}" TextAlignment="Left" Foreground="Silver" Margin="5,0,0,0"/>
                                    </StackPanel>
                                </Border>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                        <ItemsControl.Template>
                            <ControlTemplate>
                                <Border BorderThickness="0,1,0,0" ClipToBounds="True" BorderBrush="Silver" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" SnapsToDevicePixels="True">
                                    <ItemsPresenter ClipToBounds="True" MouseDown="hoursBarMouseDown">
                                        <ItemsPresenter.Margin>
                                            <MultiBinding Converter="{StaticResource hoursPanelMarginConverter}">
                                                <Binding Path="HoursPassed"/>
                                                <Binding Path="HourZoom"/>
                                                <Binding Path="SelectedMonth.DaysFromStartOfYear"/>
                                            </MultiBinding>
                                        </ItemsPresenter.Margin>
                                    </ItemsPresenter>
                                </Border>
                            </ControlTemplate>
                        </ItemsControl.Template>
                    </ItemsControl>
                    <!-- Shifts and Break hours -->
                    <ItemsControl Grid.Row="4" Grid.RowSpan="2" Grid.Column="1" ItemsSource="{Binding ShiftsAndBreaks}" Name="ic_shiftsAndBreaks" ClipToBounds="True" IsHitTestVisible="False">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <Canvas ClipToBounds="True"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <DockPanel ClipToBounds="True" SnapsToDevicePixels="True">
                                    <DockPanel.Width>
										<MultiBinding Converter="{StaticResource StartEndToWidthConverter}">
                                            <Binding Path="StartSeconds"/>
                                            <Binding Path="EndSeconds"/>
                                            <Binding ElementName="ppTable" Path="DataContext.HourZoom"/>
                                        </MultiBinding>
                                    </DockPanel.Width>
                                    <DockPanel.Margin>
										<MultiBinding Converter="{StaticResource StartToMarginConverter}">
                                            <Binding Path="StartSeconds"/>
                                            <Binding ElementName="ppTable" Path="DataContext.HourZoom"/>
                                        </MultiBinding>
                                    </DockPanel.Margin>
                                    <Border DockPanel.Dock="Top" Height="40" Background="{Binding Color, Converter={StaticResource colorFixer}}"/>
                                    <Border Opacity="0.2" Background="{Binding Color, Converter={StaticResource colorFixer}}"
                                    BorderBrush="#3FFF" BorderThickness="1,0,0,0"/>
                                </DockPanel>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                        <ItemsControl.Template>
                            <ControlTemplate>
                                <Border ClipToBounds="True" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" SnapsToDevicePixels="True" IsHitTestVisible="False">
                                    <ItemsPresenter ClipToBounds="True">
                                        <ItemsPresenter.Margin>
                                            <MultiBinding Converter="{StaticResource hoursPanelMarginConverter}">
                                                <Binding Path="HoursPassed"/>
                                                <Binding Path="HourZoom"/>
                                                <Binding Path="SelectedMonth.DaysFromStartOfYear"/>
                                            </MultiBinding>
                                        </ItemsPresenter.Margin>
                                    </ItemsPresenter>
                                </Border>
                            </ControlTemplate>
                        </ItemsControl.Template>
                    </ItemsControl>


                    <!--Activities (first column of process report) -->
                    <DockPanel Grid.Row="5" Grid.ColumnSpan="2" Visibility="{Binding SelectedBlock, Converter={StaticResource nullToInvisibilityConverter}}">
                        <Border DockPanel.Dock="Top" Width="{StaticResource StationOrActivityHeaderWidth}" HorizontalAlignment="Left" Margin="0,2,0,0" Background="#023" Height="20">
                            <TextBlock Text="مدت زمان" Foreground="Silver" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <Border DockPanel.Dock="Top" Width="{StaticResource StationOrActivityHeaderWidth}" HorizontalAlignment="Left" Margin="0,2,0,0" Background="#023" Height="20">
                            <TextBlock Text="مقدار هدف ایستگاه" Foreground="Silver" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <Border DockPanel.Dock="Top" Width="{StaticResource StationOrActivityHeaderWidth}" HorizontalAlignment="Left" Margin="0,2,0,0" Background="#023" Height="20">
                            <TextBlock Text="خروجی سالم ایستگاه" Foreground="Silver" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>

                        <!-- Activities itemsControl -->
                        <ItemsControl ItemsSource="{Binding SelectedBlock.BlockReport.SSAList}" IsHitTestVisible="False">
                            <ItemsControl.ItemTemplate>
                                <!--first column (SSA List) ItemTemplate-->
                                <DataTemplate>
                                    <DockPanel VerticalAlignment="Stretch" Height="52">
                                        <Border Background="{StaticResource HeaderBackground}" DockPanel.Dock="Left" Width="{StaticResource StationOrActivityHeaderWidth}" BorderBrush="{StaticResource HeaderBorderBrush}" BorderThickness="1,0,1,1">
                                            <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                                                <TextBlock TextWrapping="NoWrap" Text="{Binding Activity.Name}"  Foreground="Silver" HorizontalAlignment="Center"/>
                                                <WrapPanel HorizontalAlignment="Center">
                                                    <Image Style="{StaticResource CycleTimeImage}"/>
                                                    <TextBlock TextWrapping="Wrap" Text="{Binding CycleTime, Converter={StaticResource cycleTimeToStringConverter}}" Foreground="Silver"/>
                                                </WrapPanel>
                                                <WrapPanel HorizontalAlignment="Center">
                                                    <Image Style="{StaticResource ManHourImage}"/>
                                                    <TextBlock TextWrapping="Wrap" Text="{Binding ManHour}" Foreground="Silver"/>
                                                </WrapPanel>
                                            </StackPanel>
                                        </Border>
                                        <Border BorderThickness="0,0,0,1">
                                            <Border.BorderBrush>
                                                <LinearGradientBrush SpreadMethod="Repeat" StartPoint="0,0" EndPoint="4,0" MappingMode="Absolute">
                                                    <GradientStop Color="Transparent" Offset="0"/>
                                                    <GradientStop Color="Transparent" Offset="0.39"/>
                                                    <GradientStop Color="{StaticResource HighlightColor}" Offset="0.4"/>
                                                    <GradientStop Color="{StaticResource HighlightColor}" Offset="1"/>
                                                </LinearGradientBrush>
                                            </Border.BorderBrush>
                                        </Border>
                                    </DockPanel>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>

                            <!--Activities Template-->
                            <ItemsControl.Template>
                                <ControlTemplate>
                                    <Border BorderThickness="0,2" BorderBrush="{StaticResource HeaderBorderBrush}">
                                        <ScrollViewer Focusable="False" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Hidden">
                                            <ItemsPresenter/>
                                        </ScrollViewer>
                                    </Border>
                                </ControlTemplate>
                            </ItemsControl.Template>
                        </ItemsControl>
                    </DockPanel>
                    <!--RowsOfActivity ItemsControl & Durations, TP, G1 (other columns of process report) -->
                    <DockPanel Grid.Row="5" Grid.Column="1" Visibility="{Binding SelectedBlock, Converter={StaticResource nullToInvisibilityConverter}}">
                        <!-- & Durations, TPs, G1s -->
                        <ItemsControl DockPanel.Dock="Top" Height="59" ItemsSource="{Binding SelectedBlock.BlockReport.TaskReports}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <!-- One Duration, TP, G1  -->
                                    <Canvas>
                                        <Canvas.Margin>
                                            <MultiBinding Converter="{StaticResource ppTaskBorderMarginConverter}">
                                                <Binding Path="StartDateTime"/>
                                                <Binding ElementName="ppTable" Path="DataContext.HourZoom"/>
                                            </MultiBinding>
                                        </Canvas.Margin>
                                        <Border Background="#023" Height="59" BorderBrush="{StaticResource HeaderBorderBrush}" BorderThickness="1,0,0,0">
                                            <Border.Width>
                                                <MultiBinding Converter="{StaticResource ppTaskBorderWidthConverter}">
                                                    <Binding Path="Duration"/>
                                                    <Binding ElementName="ppTable" Path="DataContext.HourZoom"/>
                                                </MultiBinding>
                                            </Border.Width>
                                            <StackPanel>
                                                <TextBlock FlowDirection="LeftToRight" Text="{Binding DurationSeconds,Converter={StaticResource secondsToStringConverter}}" Height="19" Foreground="Silver" TextAlignment="Center" HorizontalAlignment="Center"/>
                                                <TextBox Text="{Binding TargetPoint}" Margin="0,2,0,0" IsReadOnly="False" Height="19" Foreground="Silver" TextAlignment="Center" HorizontalAlignment="Stretch">
                                                    <!-- is readonly was {Binding CanUserEditTaskTPAndG1, Converter={StaticResource inverter}}-->
                                                    <TextBox.Background>
                                                        <SolidColorBrush Color="Transparent" x:Name="bkgtp"/>
                                                    </TextBox.Background>
                                                    <TextBox.Triggers>
                                                        <EventTrigger RoutedEvent="MouseEnter">
                                                            <BeginStoryboard>
                                                                <Storyboard Duration="0:0:0.2">
                                                                    <ColorAnimation Storyboard.TargetName="bkgtp" Storyboard.TargetProperty="Color" Duration="0:0:0.2" To="DimGray"/>
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </EventTrigger>
                                                        <EventTrigger RoutedEvent="MouseLeave">
                                                            <BeginStoryboard>
                                                                <Storyboard Duration="0:0:0.7">
                                                                    <ColorAnimation Storyboard.TargetName="bkgtp" Storyboard.TargetProperty="Color" Duration="0:0:0.7" To="Transparent"/>
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </EventTrigger>
                                                    </TextBox.Triggers>
                                                </TextBox>
                                                <TextBox Text="{Binding ProducedG1}" Margin="0,2,0,0" IsReadOnly="{Binding CanUserEditTaskTPAndG1, Converter={StaticResource inverter}}" Height="19" Foreground="Silver" TextAlignment="Center" HorizontalAlignment="Stretch">
                                                    <TextBox.Background>
                                                        <SolidColorBrush Color="Transparent" x:Name="bkgg1"/>
                                                    </TextBox.Background>
                                                    <TextBox.Triggers>
                                                        <EventTrigger RoutedEvent="MouseEnter">
                                                            <BeginStoryboard>
                                                                <Storyboard Duration="0:0:0.2">
                                                                    <ColorAnimation Storyboard.TargetName="bkgg1" Storyboard.TargetProperty="Color" Duration="0:0:0.2" To="DimGray"/>
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </EventTrigger>
                                                        <EventTrigger RoutedEvent="MouseLeave">
                                                            <BeginStoryboard>
                                                                <Storyboard Duration="0:0:0.7">
                                                                    <ColorAnimation Storyboard.TargetName="bkgg1" Storyboard.TargetProperty="Color" Duration="0:0:0.7" To="Transparent"/>
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </EventTrigger>
                                                    </TextBox.Triggers>
                                                </TextBox>
                                            </StackPanel>
                                        </Border>
                                    </Canvas>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                            <!-- Durations ItemsPanel -->
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <Canvas/>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <!-- Durations Template -->
                            <ItemsControl.Template>
                                <ControlTemplate>
									<Grid ClipToBounds="True">
										<ItemsPresenter>
											<ItemsPresenter.Margin>
												<MultiBinding Converter="{StaticResource hoursPanelMarginConverter}">
													<Binding Path="HoursPassed"/>
													<Binding Path="HourZoom"/>
													<Binding Path="SelectedMonth.DaysFromStartOfYear"/>
												</MultiBinding>
											</ItemsPresenter.Margin>
										</ItemsPresenter>
									</Grid>
								</ControlTemplate>
                            </ItemsControl.Template>
                        </ItemsControl>

                        <!--RowsOfActivity ItemsControl-->
                        <Grid>
                            <ItemsControl ItemsSource="{Binding SelectedBlock.BlockReport.ProcessReportRows}" x:Name="ic_activitiesRows">
								<ItemsControl.Effect>
									<DropShadowEffect Opacity="0.8" ShadowDepth="0"/>
								</ItemsControl.Effect>

								<!-- ==================================== OneRowOfActivity ========================================= -->
                                <ItemsControl.ItemTemplate>
									<DataTemplate DataType="{x:Type report:ProcessReportRowVm}">
                                        <ItemsControl ItemsSource="{Binding ProcessReportCells}" Height="52">
                                            <ItemsControl.ItemTemplate>
												<DataTemplate DataType="{x:Type report:ProcessReportCellVm}">
													<Canvas>
														<local:ProcessReportCell DataContext="{Binding}" PPTable="{Binding ElementName=ppTable, Path=DataContext}"/>
													</Canvas>
                                                </DataTemplate>
                                            </ItemsControl.ItemTemplate>
                                            <ItemsControl.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <Canvas/>
                                                </ItemsPanelTemplate>
                                            </ItemsControl.ItemsPanel>
                                        </ItemsControl>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>

                                <!--RowsOfActivity Template-->
                                <ItemsControl.Template>
                                    <ControlTemplate>
										<Grid ClipToBounds="True">
											<ItemsPresenter>
												<ItemsPresenter.Margin>
													<MultiBinding Converter="{StaticResource hoursPanelMarginConverter}" ConverterParameter="Top2">
														<Binding Path="HoursPassed"/>
														<Binding Path="HourZoom"/>
														<Binding Path="SelectedMonth.DaysFromStartOfYear"/>
													</MultiBinding>
												</ItemsPresenter.Margin>
											</ItemsPresenter>
										</Grid>
									</ControlTemplate>
                                </ItemsControl.Template>

                            </ItemsControl>
                            <!--RowsOfActivity ExceptionTooltips-->
                            <ItemsControl ItemsSource="{Binding SelectedBlock.ProcessReportRows}">

                                <!-- ==================================== OneRowOfActivity Balloons ========================================= -->
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate DataType="{x:Type report:ProcessReportRowVm}">
                                        <ItemsControl ItemsSource="{Binding ProcessReportCells}" Height="52" ItemTemplate="{StaticResource balloonTemplate}">
                                            <ItemsControl.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <Canvas/>
                                                </ItemsPanelTemplate>
                                            </ItemsControl.ItemsPanel>
                                        </ItemsControl>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>

                                <!--RowsOfActivity Template-->
                                <ItemsControl.Template>
                                    <ControlTemplate>
                                        <ItemsPresenter ClipToBounds="False">
                                            <ItemsPresenter.Margin>
                                                <MultiBinding Converter="{StaticResource mainPanelMarginConverter}" ConverterParameter="Top2">
                                                    <Binding Path="HoursPassed"/>
                                                    <Binding Path="HourZoom"/>
                                                    <Binding Path="SelectedMonth.DaysFromStartOfYear"/>
                                                    <Binding Path="VerticalScreenOffset"/>
                                                </MultiBinding>
                                            </ItemsPresenter.Margin>
                                        </ItemsPresenter>
                                    </ControlTemplate>
                                </ItemsControl.Template>
                            </ItemsControl>
                        </Grid>
                    </DockPanel>
                  
                    <!--Stations-->
                    <ItemsControl Grid.Row="6" Grid.ColumnSpan="2" ItemsSource="{Binding PPItems}" IsHitTestVisible="False">
						<ItemsControl.Effect>
							<DropShadowEffect Opacity="0.8" ShadowDepth="0" Color="White"/>
						</ItemsControl.Effect>
						<!--PPTable ItemTemplate-->
                        <ItemsControl.ItemTemplate>
                            <DataTemplate DataType="{x:Type vm:PPStationVm}">
                                <DockPanel VerticalAlignment="Stretch" Height="42">
                                    <Border Background="{StaticResource HeaderBackground}" DockPanel.Dock="Left" Width="{StaticResource StationOrActivityHeaderWidth}"
									    BorderBrush="{StaticResource HeaderBorderBrush}" BorderThickness="1,0,1,1">
                                        <TextBlock TextWrapping="Wrap" Text="{Binding Text}" Foreground="Silver" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Border>
                                    <Border BorderThickness="0,0,0,1">
                                        <Border.BorderBrush>
                                            <LinearGradientBrush SpreadMethod="Repeat" StartPoint="0,0" EndPoint="16,0" MappingMode="Absolute">
                                                <GradientStop Color="Transparent" Offset="0"/>
                                                <GradientStop Color="Transparent" Offset="0.39"/>
                                                <GradientStop Color="{StaticResource HighlightColor}" Offset="0.4"/>
                                                <GradientStop Color="{StaticResource HighlightColor}" Offset="1"/>
                                            </LinearGradientBrush>
                                        </Border.BorderBrush>
                                    </Border>
                                </DockPanel>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>

                        <!--Stations Template-->
                        <ItemsControl.Template>
                            <ControlTemplate>
                                <Border BorderThickness="0,2" BorderBrush="{StaticResource HeaderBorderBrush}">
									<ItemsPresenter/>
                                </Border>
                            </ControlTemplate>
                        </ItemsControl.Template>
                    </ItemsControl>
					<!-- ************************************************************************************** -->
					<!-- ***************************** tasks, blocks, setups here ***************************** -->
					<!-- ************************************************************************************** -->
					<!-- RowsOfItems(Blocks,NPTs) ItemsControl -->
					<ItemsControl Grid.Row="6" Grid.Column="1" ItemsSource="{Binding PPItems}">
						<ItemsControl.Effect>
							<DropShadowEffect Opacity="0.3" ShadowDepth="0" Color="White"/>
						</ItemsControl.Effect>
						<ItemsControl.ItemTemplate>
							<DataTemplate DataType="{x:Type vm:PPStationVm}">
								<Canvas Height="42">
									
									<!-- Blocks ItemsControl -->
									<ItemsControl ItemsSource="{Binding Blocks}" Height="42">
										<ItemsControl.ItemTemplate>
											<DataTemplate DataType="{x:Type vm:BlockVm}">
												<Canvas>
													<local:Block DataContext="{Binding}" PPTable="{Binding ElementName=ppTable, Path=DataContext}"/>
												</Canvas>
											</DataTemplate>
										</ItemsControl.ItemTemplate>
										<ItemsControl.ItemsPanel>
											<ItemsPanelTemplate>
												<Canvas/>
											</ItemsPanelTemplate>
										</ItemsControl.ItemsPanel>
									</ItemsControl>

									<!-- NPTs ItemsControl -->
									<ItemsControl ItemsSource="{Binding NPTs}" Height="42">
										<ItemsControl.ItemTemplate>
											<DataTemplate DataType="{x:Type vm:NPTVm}">
												<Canvas>
													<local:Setup DataContext="{Binding}" PPTable="{Binding ElementName=ppTable, Path=DataContext}"/>
												</Canvas>
											</DataTemplate>
										</ItemsControl.ItemTemplate>
										<ItemsControl.ItemsPanel>
											<ItemsPanelTemplate>
												<Canvas/>
											</ItemsPanelTemplate>
										</ItemsControl.ItemsPanel>
									</ItemsControl>
								</Canvas>
							</DataTemplate>
						</ItemsControl.ItemTemplate>
						
						<!-- RowsOfItems Template -->
                        <ItemsControl.Template>
                            <ControlTemplate>
								<Grid ClipToBounds="True">
									<ItemsPresenter>
										<ItemsPresenter.Margin>
											<MultiBinding Converter="{StaticResource hoursPanelMarginConverter}">
												<Binding Path="HoursPassed"/>
												<Binding Path="HourZoom"/>
												<Binding Path="SelectedMonth.DaysFromStartOfYear"/>
											</MultiBinding>
										</ItemsPresenter.Margin>
									</ItemsPresenter>
								</Grid>
							</ControlTemplate>
                        </ItemsControl.Template>
                    </ItemsControl>
					
                    <!-- ExceptionTooltips for Tasks,NPTs -->
                    <ItemsControl Grid.Row="6" Grid.Column="1" ItemsSource="{Binding PPItems}" ClipToBounds="False">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate DataType="{x:Type vm:PPStationVm}">
                                <Canvas>
									
                                    <!-- Tasks ItemsControl -->
                                    <ItemsControl ItemsSource="{Binding Blocks}" Height="42" ClipToBounds="False" ItemTemplate="{StaticResource balloonTemplate}">
                                        <ItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <Canvas/>
                                            </ItemsPanelTemplate>
                                        </ItemsControl.ItemsPanel>
                                    </ItemsControl>

                                    <!-- NPTs ItemsControl -->
                                    <ItemsControl ItemsSource="{Binding NPTs}" Height="42" ClipToBounds="False" ItemTemplate="{StaticResource balloonTemplate}">
                                        <ItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <Canvas/>
                                            </ItemsPanelTemplate>
                                        </ItemsControl.ItemsPanel>
                                    </ItemsControl>
                                </Canvas>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>

                        <!--RowsOfTasks Template-->
                        <ItemsControl.Template>
                            <ControlTemplate>
                                <ItemsPresenter ClipToBounds="False">
                                    <ItemsPresenter.Margin>
                                        <MultiBinding Converter="{StaticResource mainPanelMarginConverter}">
                                            <Binding Path="HoursPassed"/>
                                            <Binding Path="HourZoom"/>
                                            <Binding Path="SelectedMonth.DaysFromStartOfYear"/>
                                            <Binding Path="VerticalScreenOffset"/>
                                        </MultiBinding>
                                    </ItemsPresenter.Margin>
                                </ItemsPresenter>
                            </ControlTemplate>
                        </ItemsControl.Template>
                    </ItemsControl>
                </Grid>
            </ScrollViewer>
            
            
            <DataTemplate.Triggers>
				<!-- TaskEditor -->
                <DataTrigger Binding="{Binding TaskEditor.IsVisible}" Value="True">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard Duration="0:0:0.3" DecelerationRatio="1">
                                <DoubleAnimation Storyboard.TargetName="taskEditorPanel" Storyboard.TargetProperty="Height" Duration="0:0:0.3" To="600"/>
                                <DoubleAnimation Storyboard.TargetName="taskEditorToolbarButtons" Storyboard.TargetProperty="Width" Duration="0:0:0.3" To="128"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                    <DataTrigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard Duration="0:0:0.2" DecelerationRatio="1">
                                <DoubleAnimation Storyboard.TargetName="taskEditorPanel" Storyboard.TargetProperty="Height" Duration="0:0:0.2" To="0"/>
                                <DoubleAnimation Storyboard.TargetName="taskEditorToolbarButtons" Storyboard.TargetProperty="Width" Duration="0:0:0.2" To="0"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.ExitActions>
                </DataTrigger>

				<!-- JobEditor -->
				<DataTrigger Binding="{Binding JobEditor.IsVisible}" Value="True">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard Duration="0:0:0.3" DecelerationRatio="1">
                                <DoubleAnimation Storyboard.TargetName="jobEditorPanel" Storyboard.TargetProperty="Height" Duration="0:0:0.3" To="600"/>
                                <DoubleAnimation Storyboard.TargetName="jobEditorToolbarButtons" Storyboard.TargetProperty="Width" Duration="0:0:0.3" To="92"/>
							</Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                    <DataTrigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard Duration="0:0:0.2" DecelerationRatio="1">
                                <DoubleAnimation Storyboard.TargetName="jobEditorPanel" Storyboard.TargetProperty="Height" Duration="0:0:0.2" To="0"/>
                                <DoubleAnimation Storyboard.TargetName="jobEditorToolbarButtons" Storyboard.TargetProperty="Width" Duration="0:0:0.2" To="0"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.ExitActions>
                </DataTrigger>

				<!-- NPTEditor -->
				<DataTrigger Binding="{Binding SelectedNPT.IsEditMode}" Value="True">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard Duration="0:0:0.3" DecelerationRatio="1">
                                <DoubleAnimation Storyboard.TargetName="nptEditorPanel" Storyboard.TargetProperty="Height" Duration="0:0:0.3" To="100"/>
							</Storyboard>
						</BeginStoryboard>
                    </DataTrigger.EnterActions>
                    <DataTrigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard Duration="0:0:0.2" DecelerationRatio="1">
                                <DoubleAnimation Storyboard.TargetName="nptEditorPanel" Storyboard.TargetProperty="Height" Duration="0:0:0.2" To="0"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.ExitActions>
                </DataTrigger>
				
				<!-- JobList -->
                <DataTrigger Binding="{Binding JobList.IsVisible}" Value="True">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard Duration="0:0:0.3" DecelerationRatio="1">
                                <DoubleAnimation Storyboard.TargetName="jobListPanel" Storyboard.TargetProperty="Height" Duration="0:0:0.3" To="250"/>
							</Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                    <DataTrigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard Duration="0:0:0.2" DecelerationRatio="1">
                                <DoubleAnimation Storyboard.TargetName="jobListPanel" Storyboard.TargetProperty="Height" Duration="0:0:0.2" To="0"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.ExitActions>
                </DataTrigger>

				<!-- CurrentTaskReportBuilder -->
				<DataTrigger Binding="{Binding CurrentTaskReportBuilder.IsSelected}" Value="True">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard Duration="0:0:0.3" DecelerationRatio="1">
                                <DoubleAnimation Storyboard.TargetName="taskReportBuilderPanel" Storyboard.TargetProperty="Height" Duration="0:0:0.3" To="230"/>
							</Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                    <DataTrigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard Duration="0:0:0.2" DecelerationRatio="1">
                                <DoubleAnimation Storyboard.TargetName="taskReportBuilderPanel" Storyboard.TargetProperty="Height" Duration="0:0:0.2" To="0"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.ExitActions>
                </DataTrigger>

				<!-- CurrentProcessReportBuilder -->
				<DataTrigger Binding="{Binding CurrentProcessReportBuilder.IsSelected}" Value="True">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard Duration="0:0:0.3" DecelerationRatio="1">
                                <DoubleAnimation Storyboard.TargetName="processReportBuilderPanel" Storyboard.TargetProperty="Height" Duration="0:0:0.3" To="600"/>
							</Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                    <DataTrigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard Duration="0:0:0.2" DecelerationRatio="1">
                                <DoubleAnimation Storyboard.TargetName="processReportBuilderPanel" Storyboard.TargetProperty="Height" Duration="0:0:0.2" To="0"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.ExitActions>
                </DataTrigger>

				<!-- CurrentNPTReportBuilder -->
				<DataTrigger Binding="{Binding CurrentNPTReportBuilder.IsSelected}" Value="True">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard Duration="0:0:0.3" DecelerationRatio="1">
                                <DoubleAnimation Storyboard.TargetName="nptReportBuilderPanel" Storyboard.TargetProperty="Height" Duration="0:0:0.3" To="220"/>
							</Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                    <DataTrigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard Duration="0:0:0.2" DecelerationRatio="1">
                                <DoubleAnimation Storyboard.TargetName="nptReportBuilderPanel" Storyboard.TargetProperty="Height" Duration="0:0:0.2" To="0"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.ExitActions>
                </DataTrigger>
            </DataTemplate.Triggers>
		</DataTemplate>
        
        <!-- 3.2. Performance  -->

        <!-- 3.3. Indices  -->
        <DataTemplate x:Key="IndexTemplate" DataType="IndexViewModels:IndicesVm">
			<DataTemplate.Resources>
				<LinearGradientBrush x:Key="SlideWindowBackground" StartPoint="0,0" EndPoint="1,0.001">
					<GradientBrush.GradientStops>
						<GradientStopCollection>
							<GradientStop Color="White" Offset="0" />
							<GradientStop Color="#6FFF" Offset="0.5" />
							<GradientStop Color="#1FFF" Offset="0.6" />
							<GradientStop Color="Transparent" Offset="1"/>
						</GradientStopCollection>
					</GradientBrush.GradientStops>
				</LinearGradientBrush>
				<LinearGradientBrush x:Key="SlideWindowBorder" StartPoint="0,0" EndPoint="0,1">
					<GradientBrush.GradientStops>
						<GradientStopCollection>
							<GradientStop Color="#FFF" Offset="0.0"/>
							<GradientStop Color="#CCC" Offset="1.0"/>
						</GradientStopCollection>
					</GradientBrush.GradientStops>
				</LinearGradientBrush>
				<!-- Data Providers -->
				<ObjectDataProvider x:Key="IndexTypes"
                            MethodName="GetValues"
                            ObjectType="{x:Type System:Enum}">
					<ObjectDataProvider.MethodParameters>
						<x:Type TypeName="Common:IndexType" />
					</ObjectDataProvider.MethodParameters>
				</ObjectDataProvider>
				<ObjectDataProvider x:Key="IndexIntervals"
                            MethodName="GetValues"
                            ObjectType="{x:Type System:Enum}">
					<ObjectDataProvider.MethodParameters>
						<x:Type TypeName="Common:DateTimeIntervals" />
					</ObjectDataProvider.MethodParameters>
				</ObjectDataProvider>
				<!--Slider Repeat Button-->
				<Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
					<Setter Property="SnapsToDevicePixels" Value="True"/>
					<Setter Property="OverridesDefaultStyle" Value="true"/>
					<Setter Property="Focusable" Value="false"/>
					<Setter Property="Width" Value="40"/>
					<Setter Property="Delay" Value="0"/>
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="{x:Type RepeatButton}">
								<Rectangle Name="Border" Fill="Transparent"/>
								<ControlTemplate.Triggers>
									<Trigger Property="IsMouseOver" Value="true">
										<Setter TargetName="Border" Property="Fill" Value="{StaticResource ShadowTransparent}" />
									</Trigger>
									<Trigger Property="IsPressed" Value="true">
										<Setter TargetName="Border" Property="Fill" Value="{StaticResource ClickedTransparent}" />
									</Trigger>
								</ControlTemplate.Triggers>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
				<!--Slider Template-->
				<ControlTemplate x:Key="SliderTemplate" TargetType="{x:Type ScrollViewer}">
					<Grid Background="{TemplateBinding Background}" Height="600" >
						<ScrollContentPresenter  x:Name="PART_ScrollContentPresenter"  CanContentScroll="True" CanHorizontallyScroll="True"  ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Margin="{TemplateBinding Padding}"/>
						<ScrollBar x:Name="PART_HorizontalScrollBar"  VerticalAlignment="Bottom" AutomationProperties.AutomationId="HorizontalScrollBar"  Maximum="{TemplateBinding ScrollableWidth}"  Minimum="0"  Orientation="Horizontal" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"  Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}">
							<ScrollBar.Template>
								<ControlTemplate TargetType="ScrollBar">
									<Grid>
										<Grid.ColumnDefinitions>
											<ColumnDefinition MaxWidth="40"/>
											<ColumnDefinition Width="0.00001*"/>
											<ColumnDefinition MaxWidth="40"/>
										</Grid.ColumnDefinitions>
										<Border Grid.ColumnSpan="3" Background="#01000000" />
										<!--Little Window-->
										<Border Grid.Column="1" Cursor="ScrollWE" Background="{StaticResource SlideWindowBackground}" BorderBrush="{StaticResource SlideWindowBorder}" BorderThickness="2" CornerRadius="2" HorizontalAlignment="Center" Margin="0,-2" Width="{Binding RelativeSource={RelativeSource AncestorType=Virtualizing:DateTimeScrollViewer}, Path=LittleWindowWidth}">
										</Border>
										<!--Transparent Bar-->
										<Rectangle Grid.Column="1"  Margin="-1" Cursor="/Images/openhand.cur" Fill="Transparent" MouseMove="AreaMouseMove" MouseUp="AreaMouseUp" MouseDown="RectangleMouseDown"/>
										<!-- << | >> -->
										<RepeatButton Grid.Column="0" Cursor="ScrollW"  Style="{StaticResource ScrollBarLineButton}" Click="RepeatButtonLClick"/>
										<RepeatButton Grid.Column="3" Cursor="ScrollE"  Style="{StaticResource ScrollBarLineButton}" Click="RepeatButtonRClick"/>
									</Grid>
								</ControlTemplate>
							</ScrollBar.Template>
						</ScrollBar>
					</Grid>
				</ControlTemplate>
			</DataTemplate.Resources>
            <Border DataContext="{Binding RelativeSource={RelativeSource AncestorType=Views:SoheilSingularView}, Path=ViewModel}" Style="{StaticResource SoheilSingularViewBorder}">
                <I:Interaction.Behaviors>
                    <Behavior:ValidationExceptionBehavior />
                </I:Interaction.Behaviors>
                <DockPanel D:DataContext="{D:DesignInstance IndexViewModels:IndicesVm}">
                    <Border DockPanel.Dock="Top">
                        <WrapPanel>
                            <TextBlock Style="{StaticResource EntryBoxHeader}" Text="{Loc txtIndexType}" />
                            <ComboBox ItemsSource="{Binding Source={StaticResource IndexTypes}}" SelectedValue="{Binding Path=CurrentType}">
                                <I:Interaction.Triggers>
                                    <I:EventTrigger EventName="SelectionChanged">
                                        <I:InvokeCommandAction Command="{Binding InitializeProviderCommand}"/>
                                    </I:EventTrigger>
                                </I:Interaction.Triggers>
                            </ComboBox>
                            <TextBlock Style="{StaticResource EntryBoxHeader}" Text="{Loc txtIndexInterval}" />
                            <ComboBox ItemsSource="{Binding Source={StaticResource IndexIntervals}}" SelectedValue="{Binding Path=CurrentInterval}" >
                                <I:Interaction.Triggers>
                                    <I:EventTrigger EventName="SelectionChanged">
                                        <I:InvokeCommandAction Command="{Binding InitializeProviderCommand}"/>
                                    </I:EventTrigger>
                                </I:Interaction.Triggers>
                            </ComboBox>
                            <TextBox Text="{Binding HorizontalOffset, Mode=TwoWay}"></TextBox>
                        </WrapPanel>
                    </Border>
                    <DockPanel DockPanel.Dock="Bottom">
                        <DockPanel Width="50" DockPanel.Dock="Right">
                            <Button DockPanel.Dock="Bottom" Margin="2" Height="18" Command="{Binding NavigateBackCommand}" Content="←"></Button>
                            <ItemsControl x:Name="_ScaleNums" ItemsSource="{Binding Scales}">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Style="{StaticResource EntryBoxHeader}"  Height="100" Width="50" Text="{Binding}"/>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </DockPanel>
                        <Border>
                            <Grid x:Name="adornedControl" >
                                <Grid.Resources>
                                    <Common:BindingProxy x:Key="Proxy" Data="{Binding}" />
                                </Grid.Resources>
                                <ItemsControl x:Name="_ScaleLines" ItemsSource="{Binding ScaleLines}">
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <UniformGrid Height="100" Rows="2" Columns="1">
                                                <Canvas Background="{StaticResource ThemeDarkBrush}" />
                                                <Canvas Background="{StaticResource ThemeMediumBrush}" />
                                            </UniformGrid>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                                    <ItemsControl x:Name="_slider" ItemsSource="{Binding Bars}" MouseMove="AreaMouseMove" MouseUp="AreaMouseUp" FlowDirection="LeftToRight"               VerticalAlignment="Bottom" VirtualizingPanel.ScrollUnit="Pixel" VirtualizingPanel.IsVirtualizing="True" VirtualizingPanel.VirtualizationMode="Recycling" ScrollViewer.IsDeferredScrollingEnabled="True" ScrollViewer.CanContentScroll="True">
                                        <ItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <VirtualizingStackPanel Orientation="Horizontal"/>
                                            </ItemsPanelTemplate>
                                        </ItemsControl.ItemsPanel>
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate DataType="IndexViewModels:IndexBarVm">
                                                <Grid Width="80">
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="*"/>
                                                        <RowDefinition Height="30"/>
                                                        <RowDefinition Height="Auto"/>
                                                        <RowDefinition Height="20"/>
                                                    </Grid.RowDefinitions>
                                                <TextBlock HorizontalAlignment="Center" Text="{Binding Tip}" Foreground="{StaticResource TextBrush}" Grid.Row="1" Margin="1"/>
                                                <StackPanel Grid.Row="2"  >
                                                    <ItemsControl x:Name="indexBtns" Height="0" HorizontalAlignment="Center"
                                                                  ItemsSource="{Binding MenuItems}">
                                                        <ItemsControl.ItemTemplate>
                                                            <DataTemplate>
                                                                <Button Content="{Binding Text}"
                                                                        Background="{Binding Color}"
                                                                        Style="{StaticResource IndexButton}"
                                                                        Command= "{Binding Source={StaticResource Proxy}, Path=Data.NavigateInsideCommand}"
                                                                        CommandParameter="{Binding }" />
                                                            </DataTemplate>
                                                        </ItemsControl.ItemTemplate>
                                                        <ItemsControl.ItemsPanel>
                                                            <ItemsPanelTemplate>
                                                                <StackPanel Orientation="Horizontal"/>
                                                            </ItemsPanelTemplate>
                                                        </ItemsControl.ItemsPanel>
                                                    </ItemsControl>
                                                    <ToggleButton x:Name="_bar" 
                                                                  Foreground ="{Binding DetailsColor}"  
                                                                  Background="{Binding MainColor}" 
                                                                  Style="{StaticResource SimpleBar}" 
                                                                  Height="{Binding Value}" 
                                                                  Margin="5,0,5,0"
                                                                  Command="{Binding Source={StaticResource Proxy}, Path=Data.NavigateInsideCommand}"
                                                                  CommandParameter="{Binding }">
                                                    </ToggleButton>
                                                    <!--<I:Interaction.Triggers>
                                                        <I:EventTrigger EventName="MouseUp">
                                                            <I:InvokeCommandAction Command= "{Binding Source={StaticResource Proxy}, Path=Data.NavigateInsideCommand}"
                                                                                   CommandParameter="{Binding }"/>
                                                        </I:EventTrigger>
                                                    </I:Interaction.Triggers>-->
                                                    <StackPanel.Triggers>
                                                        <EventTrigger RoutedEvent="ToggleButton.Checked" SourceName="_bar">
                                                            <BeginStoryboard>
                                                                <Storyboard>
                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="indexBtns" 
                                                                            Storyboard.TargetProperty="Height">
                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="30" />
                                                                    </DoubleAnimationUsingKeyFrames>
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </EventTrigger>
                                                        <EventTrigger RoutedEvent="ToggleButton.Unchecked" SourceName="_bar">
                                                            <BeginStoryboard>
                                                                <Storyboard>
                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="indexBtns" 
                                                                            Storyboard.TargetProperty="Height">
                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0" />
                                                                    </DoubleAnimationUsingKeyFrames>
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </EventTrigger>
                                                    </StackPanel.Triggers>
                                                </StackPanel>    
                                                <Border Grid.Row="3" BorderBrush="{StaticResource ThemeLightBrush}" BorderThickness="1">
                                                    <TextBlock Text="{Binding Header}" HorizontalAlignment="Center"
                                                               Foreground="{StaticResource TextBrush}" 
                                                               Background="{StaticResource ThemeDarkBrush}" />
                                                </Border>
                                                <Canvas Grid.Row="0"/>
                                                </Grid>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                        <ItemsControl.Template>
                                            <ControlTemplate>
                                                <Border>
                                                    <Virtualizing:DateTimeScrollViewer 
							                    HorizontalScrollBarVisibility="Visible" 
                                                VerticalScrollBarVisibility="Disabled"
                                                Behaviors:ScrollViewerBinding.HorizontalOffset="{Binding HorizontalOffset, Mode=TwoWay}"
							                    
							                    Padding="{TemplateBinding Control.Padding}"
							                    Focusable="False"
							                    OverridesDefaultStyle="True"
							                    Template="{StaticResource SliderTemplate}">
                                                        <ItemsPresenter SnapsToDevicePixels="True"/>
                                                    </Virtualizing:DateTimeScrollViewer>
                                                </Border>
                                            </ControlTemplate>
                                        </ItemsControl.Template>
                                    </ItemsControl>
                            </Grid>
                        </Border>
                    </DockPanel>
                </DockPanel>
            </Border>
        </DataTemplate>

        <!--................................................ 5.Reports ...............................................-->

        <!-- 5.1. Cost Reports -->
        <DataTemplate x:Key="CostReportTemplate" DataType="Reports:CostReportsVm">
            <DataTemplate.Resources>
                <LinearGradientBrush x:Key="SlideWindowBackground" StartPoint="0,0" EndPoint="1,0.001">
                    <GradientBrush.GradientStops>
                        <GradientStopCollection>
                            <GradientStop Color="White" Offset="0" />
                            <GradientStop Color="#6FFF" Offset="0.5" />
                            <GradientStop Color="#1FFF" Offset="0.6" />
                            <GradientStop Color="Transparent" Offset="1"/>
                        </GradientStopCollection>
                    </GradientBrush.GradientStops>
                </LinearGradientBrush>
                <LinearGradientBrush x:Key="SlideWindowBorder" StartPoint="0,0" EndPoint="0,1">
                    <GradientBrush.GradientStops>
                        <GradientStopCollection>
                            <GradientStop Color="#FFF" Offset="0.0"/>
                            <GradientStop Color="#CCC" Offset="1.0"/>
                        </GradientStopCollection>
                    </GradientBrush.GradientStops>
                </LinearGradientBrush>
                <ObjectDataProvider x:Key="CostTypes"
                                    MethodName="GetValues"
                                    ObjectType="{x:Type System:Enum}">
                    <ObjectDataProvider.MethodParameters>
                        <x:Type TypeName="Common:CostType" />
                    </ObjectDataProvider.MethodParameters>
                </ObjectDataProvider>
                <ObjectDataProvider x:Key="IndexIntervals"
                            MethodName="GetValues"
                            ObjectType="{x:Type System:Enum}">
                    <ObjectDataProvider.MethodParameters>
                        <x:Type TypeName="Common:DateTimeIntervals" />
                    </ObjectDataProvider.MethodParameters>
                </ObjectDataProvider>
                <!--Slider Repeat Button-->
                <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
                    <Setter Property="SnapsToDevicePixels" Value="True"/>
                    <Setter Property="OverridesDefaultStyle" Value="true"/>
                    <Setter Property="Focusable" Value="false"/>
                    <Setter Property="Width" Value="40"/>
                    <Setter Property="Delay" Value="0"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type RepeatButton}">
                                <Rectangle Name="Border" Fill="Transparent"/>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="true">
                                        <Setter TargetName="Border" Property="Fill" Value="{StaticResource ShadowTransparent}" />
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="true">
                                        <Setter TargetName="Border" Property="Fill" Value="{StaticResource ClickedTransparent}" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
                <!--Slider Template-->
                <ControlTemplate x:Key="SliderTemplate" TargetType="{x:Type ScrollViewer}">
                    <Grid Background="{TemplateBinding Background}" Height="600" >
                        <ScrollContentPresenter 
					x:Name="PART_ScrollContentPresenter" 
					CanContentScroll="True"
					CanHorizontallyScroll="True" 
					ContentTemplate="{TemplateBinding ContentTemplate}"
					Content="{TemplateBinding Content}"
					Margin="{TemplateBinding Padding}"/>
                        <ScrollBar
					x:Name="PART_HorizontalScrollBar" 
                    VerticalAlignment="Bottom"
					AutomationProperties.AutomationId="HorizontalScrollBar" 
					Maximum="{TemplateBinding ScrollableWidth}" 
					Minimum="0" 
					Orientation="Horizontal"
					Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" 
					Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
					ViewportSize="{TemplateBinding ViewportWidth}">
                            <ScrollBar.Template>
                                <ControlTemplate TargetType="ScrollBar">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition MaxWidth="40"/>
                                            <ColumnDefinition Width="0.00001*"/>
                                            <ColumnDefinition MaxWidth="40"/>
                                        </Grid.ColumnDefinitions>
                                        <Border Grid.ColumnSpan="3" Background="#01000000" />
                                        <!--Little Window-->
                                        <Border
									Grid.Column="1"
									Cursor="ScrollWE"
									Background="{StaticResource SlideWindowBackground}"
									BorderBrush="{StaticResource SlideWindowBorder}"
									BorderThickness="2"
									CornerRadius="2"
									HorizontalAlignment="Center"
									Margin="0,-2"
									Width="{Binding RelativeSource={RelativeSource AncestorType=Virtualizing:DateTimeScrollViewer}, Path=LittleWindowWidth}">
                                        </Border>
                                        <!--Transparent Bar-->
                                        <Rectangle
									Grid.Column="1" 
									Margin="-1"
									Cursor="/Images/openhand.cur"
									Fill="Transparent"
									MouseMove="AreaMouseMove" MouseUp="AreaMouseUp"
									MouseDown="RectangleMouseDown"/>
                                        <!-- << | >> -->
                                        <RepeatButton
									Grid.Column="0"
									Cursor="ScrollW" 
									Style="{StaticResource ScrollBarLineButton}"
									Click="RepeatButtonLClick"/>
                                        <RepeatButton
									Grid.Column="3"
									Cursor="ScrollE" 
									Style="{StaticResource ScrollBarLineButton}"
									Click="RepeatButtonRClick"/>
                                    </Grid>
                                </ControlTemplate>
                            </ScrollBar.Template>
                        </ScrollBar>
                    </Grid>
                </ControlTemplate>
            </DataTemplate.Resources>
            <Border DataContext="{Binding RelativeSource={RelativeSource AncestorType=Views:SoheilSingularView}, Path=ViewModel}" Style="{StaticResource SoheilSingularViewBorder}">
                <I:Interaction.Behaviors>
                    <Behavior:ValidationExceptionBehavior />
                </I:Interaction.Behaviors>
                <DockPanel D:DataContext="{D:DesignInstance Reports:CostReportsVm}">
                    <Border DockPanel.Dock="Top">
                        <WrapPanel>
                            <TextBlock Style="{StaticResource EntryBoxHeader}" Text="{Loc txtIndexType}" />
                            <ComboBox ItemsSource="{Binding Source={StaticResource CostTypes}}" SelectedValue="{Binding Path=CurrentType}">
                                <I:Interaction.Triggers>
                                    <I:EventTrigger EventName="SelectionChanged">
                                        <I:InvokeCommandAction Command="{Binding InitializeProviderCommand}"/>
                                    </I:EventTrigger>
                                </I:Interaction.Triggers>
                            </ComboBox>
                            <TextBlock Style="{StaticResource EntryBoxHeader}" Text="{Loc txtIndexInterval}" />
                            <ComboBox ItemsSource="{Binding Source={StaticResource IndexIntervals}}" SelectedValue="{Binding Path=CurrentInterval}" >
                                <I:Interaction.Triggers>
                                    <I:EventTrigger EventName="SelectionChanged">
                                        <I:InvokeCommandAction Command="{Binding InitializeProviderCommand}"/>
                                    </I:EventTrigger>
                                </I:Interaction.Triggers>
                            </ComboBox>
                            <TextBox Text="{Binding HorizontalOffset, Mode=TwoWay}"></TextBox>
                        </WrapPanel>
                    </Border>
                    <DockPanel DockPanel.Dock="Bottom">
                        <DockPanel.Resources>
                            <Common:BindingProxy x:Key="Proxy" Data="{Binding ScaleHeight}" />
                        </DockPanel.Resources>
                        <DockPanel Width="50" DockPanel.Dock="Right">
                            <Button DockPanel.Dock="Bottom" Margin="2" Height="18" Command="{Binding NavigateBackCommand}" Content="←"></Button>
                            <ItemsControl x:Name="_ScaleNums" ItemsSource="{Binding Scales}">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Style="{StaticResource EntryBoxHeader}" 
                                                   Height="{Binding Source={StaticResource Proxy}, Path=Data}" Width="50" Text="{Binding}"/>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </DockPanel>
                        <Border>
                            <Grid x:Name="adornedControl" >
                                <Grid.Resources>
                                    <Common:BindingProxy x:Key="Proxy" Data="{Binding}" />
                                </Grid.Resources>
                                <ItemsControl x:Name="_ScaleLines"
                                                    ItemsSource="{Binding ScaleLines}">
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <UniformGrid Rows="2" Columns="1" Height="{Binding Source={StaticResource Proxy}, Path=Data.ScaleHeight}">
                                                <Canvas Background="{StaticResource ThemeDarkBrush}" />
                                                <Canvas Background="{StaticResource ThemeMediumBrush}" />
                                            </UniformGrid>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                                <ItemsControl x:Name="_slider"
					                ItemsSource="{Binding Bars}"
                                    MouseMove="AreaMouseMove" MouseUp="AreaMouseUp"
                                    FlowDirection="LeftToRight"              
                                    VerticalAlignment="Bottom"
					                VirtualizingPanel.ScrollUnit="Pixel"
					                VirtualizingPanel.IsVirtualizing="True"
                                    VirtualizingPanel.VirtualizationMode="Recycling"
                                    ScrollViewer.IsDeferredScrollingEnabled="True"
					                ScrollViewer.CanContentScroll="True">
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <VirtualizingStackPanel Orientation="Horizontal"/>
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate DataType="Reports:CostBarVm">
                                            <Grid Width="80">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="*"/>
                                                    <RowDefinition Height="30"/>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="20"/>
                                                </Grid.RowDefinitions>
                                                <TextBlock HorizontalAlignment="Center" Text="{Binding Tip}" Foreground="{StaticResource TextBrush}" Grid.Row="1" Margin="1"/>
                                                <StackPanel Grid.Row="2"  >
                                                    <ItemsControl x:Name="indexBtns" Height="0" HorizontalAlignment="Center"
                                                                  ItemsSource="{Binding MenuItems}">
                                                        <ItemsControl.ItemTemplate>
                                                            <DataTemplate>
                                                                <Button Content="{Binding Text}"
                                                                        Background="{Binding Color}"
                                                                        Style="{StaticResource IndexButton}"
                                                                        Command= "{Binding Source={StaticResource Proxy}, Path=Data.NavigateInsideCommand}"
                                                                        CommandParameter="{Binding }" />
                                                            </DataTemplate>
                                                        </ItemsControl.ItemTemplate>
                                                        <ItemsControl.ItemsPanel>
                                                            <ItemsPanelTemplate>
                                                                <StackPanel Orientation="Horizontal"/>
                                                            </ItemsPanelTemplate>
                                                        </ItemsControl.ItemsPanel>
                                                    </ItemsControl>
                                                    <ToggleButton x:Name="_bar" 
                                                                  Foreground ="{Binding DetailsColor}"  
                                                                  Background="{Binding MainColor}" 
                                                                  Style="{StaticResource SimpleBar}" 
                                                                  Height="{Binding Value}" 
                                                                  Margin="5,0,5,0"
                                                                  Command="{Binding Source={StaticResource Proxy}, Path=Data.NavigateInsideCommand}"
                                                                  CommandParameter="{Binding }">
                                                    </ToggleButton>
                                                    <StackPanel.Triggers>
                                                        <EventTrigger RoutedEvent="ToggleButton.Checked" SourceName="_bar">
                                                            <BeginStoryboard>
                                                                <Storyboard>
                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="indexBtns" 
                                                                            Storyboard.TargetProperty="Height">
                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="30" />
                                                                    </DoubleAnimationUsingKeyFrames>
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </EventTrigger>
                                                        <EventTrigger RoutedEvent="ToggleButton.Unchecked" SourceName="_bar">
                                                            <BeginStoryboard>
                                                                <Storyboard>
                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="indexBtns" 
                                                                            Storyboard.TargetProperty="Height">
                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0" />
                                                                    </DoubleAnimationUsingKeyFrames>
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </EventTrigger>
                                                    </StackPanel.Triggers>
                                                </StackPanel>
                                                <Border Grid.Row="3" BorderBrush="{StaticResource ThemeLightBrush}" BorderThickness="1">
                                                    <TextBlock Text="{Binding Header}" HorizontalAlignment="Center"
                                                               Foreground="{StaticResource TextBrush}" 
                                                               Background="{StaticResource ThemeDarkBrush}" />
                                                </Border>
                                                <Canvas Grid.Row="0"/>
                                            </Grid>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                    <ItemsControl.Template>
                                        <ControlTemplate>
                                            <Border>
                                                <Virtualizing:DateTimeScrollViewer 
							                    HorizontalScrollBarVisibility="Visible" 
                                                VerticalScrollBarVisibility="Disabled"
                                                Behaviors:ScrollViewerBinding.HorizontalOffset="{Binding HorizontalOffset, Mode=TwoWay}"
							                    
							                    Padding="{TemplateBinding Control.Padding}"
							                    Focusable="False"
							                    OverridesDefaultStyle="True"
							                    Template="{StaticResource SliderTemplate}">
                                                    <ItemsPresenter SnapsToDevicePixels="True"/>
                                                </Virtualizing:DateTimeScrollViewer>
                                            </Border>
                                        </ControlTemplate>
                                    </ItemsControl.Template>
                                </ItemsControl>
                            </Grid>
                        </Border>
                    </DockPanel>
                </DockPanel>
            </Border>
        </DataTemplate>

        <!-- 5.2. Actual Cost Reports -->
        <DataTemplate x:Key="ActualCostReportTemplate" DataType="Reports:ActualCostReportsVm">
            <DataTemplate.Resources>
                <LinearGradientBrush x:Key="SlideWindowBackground" StartPoint="0,0" EndPoint="1,0.001">
                    <GradientBrush.GradientStops>
                        <GradientStopCollection>
                            <GradientStop Color="White" Offset="0" />
                            <GradientStop Color="#6FFF" Offset="0.5" />
                            <GradientStop Color="#1FFF" Offset="0.6" />
                            <GradientStop Color="Transparent" Offset="1"/>
                        </GradientStopCollection>
                    </GradientBrush.GradientStops>
                </LinearGradientBrush>
                <LinearGradientBrush x:Key="SlideWindowBorder" StartPoint="0,0" EndPoint="0,1">
                    <GradientBrush.GradientStops>
                        <GradientStopCollection>
                            <GradientStop Color="#FFF" Offset="0.0"/>
                            <GradientStop Color="#CCC" Offset="1.0"/>
                        </GradientStopCollection>
                    </GradientBrush.GradientStops>
                </LinearGradientBrush>
                <ObjectDataProvider x:Key="CostTypes"
                                    MethodName="GetValues"
                                    ObjectType="{x:Type System:Enum}">
                    <ObjectDataProvider.MethodParameters>
                        <x:Type TypeName="Common:CostType" />
                    </ObjectDataProvider.MethodParameters>
                </ObjectDataProvider>
                <ObjectDataProvider x:Key="IndexIntervals"
                            MethodName="GetValues"
                            ObjectType="{x:Type System:Enum}">
                    <ObjectDataProvider.MethodParameters>
                        <x:Type TypeName="Common:DateTimeIntervals" />
                    </ObjectDataProvider.MethodParameters>
                </ObjectDataProvider>
                <!--Slider Repeat Button-->
                <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
                    <Setter Property="SnapsToDevicePixels" Value="True"/>
                    <Setter Property="OverridesDefaultStyle" Value="true"/>
                    <Setter Property="Focusable" Value="false"/>
                    <Setter Property="Width" Value="40"/>
                    <Setter Property="Delay" Value="0"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type RepeatButton}">
                                <Rectangle Name="Border" Fill="Transparent"/>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="true">
                                        <Setter TargetName="Border" Property="Fill" Value="{StaticResource ShadowTransparent}" />
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="true">
                                        <Setter TargetName="Border" Property="Fill" Value="{StaticResource ClickedTransparent}" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
                <!--Slider Template-->
                <ControlTemplate x:Key="SliderTemplate" TargetType="{x:Type ScrollViewer}">
                    <Grid Background="{TemplateBinding Background}" Height="600" >
                        <ScrollContentPresenter 
					x:Name="PART_ScrollContentPresenter" 
					CanContentScroll="True"
					CanHorizontallyScroll="True" 
					ContentTemplate="{TemplateBinding ContentTemplate}"
					Content="{TemplateBinding Content}"
					Margin="{TemplateBinding Padding}"/>
                        <ScrollBar
					x:Name="PART_HorizontalScrollBar" 
                    VerticalAlignment="Bottom"
					AutomationProperties.AutomationId="HorizontalScrollBar" 
					Maximum="{TemplateBinding ScrollableWidth}" 
					Minimum="0" 
					Orientation="Horizontal"
					Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" 
					Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
					ViewportSize="{TemplateBinding ViewportWidth}">
                            <ScrollBar.Template>
                                <ControlTemplate TargetType="ScrollBar">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition MaxWidth="40"/>
                                            <ColumnDefinition Width="0.00001*"/>
                                            <ColumnDefinition MaxWidth="40"/>
                                        </Grid.ColumnDefinitions>
                                        <Border Grid.ColumnSpan="3" Background="#01000000" />
                                        <!--Little Window-->
                                        <Border
									Grid.Column="1"
									Cursor="ScrollWE"
									Background="{StaticResource SlideWindowBackground}"
									BorderBrush="{StaticResource SlideWindowBorder}"
									BorderThickness="2"
									CornerRadius="2"
									HorizontalAlignment="Center"
									Margin="0,-2"
									Width="{Binding RelativeSource={RelativeSource AncestorType=Virtualizing:DateTimeScrollViewer}, Path=LittleWindowWidth}">
                                        </Border>
                                        <!--Transparent Bar-->
                                        <Rectangle
									Grid.Column="1" 
									Margin="-1"
									Cursor="/Images/openhand.cur"
									Fill="Transparent"
									MouseMove="AreaMouseMove" MouseUp="AreaMouseUp"
									MouseDown="RectangleMouseDown"/>
                                        <!-- << | >> -->
                                        <RepeatButton
									Grid.Column="0"
									Cursor="ScrollW" 
									Style="{StaticResource ScrollBarLineButton}"
									Click="RepeatButtonLClick"/>
                                        <RepeatButton
									Grid.Column="3"
									Cursor="ScrollE" 
									Style="{StaticResource ScrollBarLineButton}"
									Click="RepeatButtonRClick"/>
                                    </Grid>
                                </ControlTemplate>
                            </ScrollBar.Template>
                        </ScrollBar>
                    </Grid>
                </ControlTemplate>
            </DataTemplate.Resources>
            <Border DataContext="{Binding RelativeSource={RelativeSource AncestorType=Views:SoheilSingularView}, Path=ViewModel}" Style="{StaticResource SoheilSingularViewBorder}">
                <I:Interaction.Behaviors>
                    <Behavior:ValidationExceptionBehavior />
                </I:Interaction.Behaviors>
                <DockPanel D:DataContext="{D:DesignInstance Reports:ActualCostReportsVm}">
                    <Border DockPanel.Dock="Top">
                        <WrapPanel>
                            <TextBlock Style="{StaticResource EntryBoxHeader}" Text="{Loc txtIndexType}" />
                            <ComboBox ItemsSource="{Binding Source={StaticResource CostTypes}}" SelectedValue="{Binding Path=CurrentType}">
                                <I:Interaction.Triggers>
                                    <I:EventTrigger EventName="SelectionChanged">
                                        <I:InvokeCommandAction Command="{Binding InitializeProviderCommand}"/>
                                    </I:EventTrigger>
                                </I:Interaction.Triggers>
                            </ComboBox>
                            <TextBlock Style="{StaticResource EntryBoxHeader}" Text="{Loc txtIndexInterval}" />
                            <ComboBox ItemsSource="{Binding Source={StaticResource IndexIntervals}}" SelectedValue="{Binding Path=CurrentInterval}" >
                                <I:Interaction.Triggers>
                                    <I:EventTrigger EventName="SelectionChanged">
                                        <I:InvokeCommandAction Command="{Binding InitializeProviderCommand}"/>
                                    </I:EventTrigger>
                                </I:Interaction.Triggers>
                            </ComboBox>
                            <TextBox Text="{Binding HorizontalOffset, Mode=TwoWay}"></TextBox>
                        </WrapPanel>
                    </Border>
                    <DockPanel DockPanel.Dock="Bottom">
                        <DockPanel.Resources>
                            <Common:BindingProxy x:Key="Proxy" Data="{Binding ScaleHeight}" />
                        </DockPanel.Resources>
                        <DockPanel Width="50" DockPanel.Dock="Right">
                            <Button DockPanel.Dock="Bottom" Margin="2" Height="18" Command="{Binding NavigateBackCommand}" Content="←"></Button>
                            <ItemsControl x:Name="_ScaleNums" ItemsSource="{Binding Scales}">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Style="{StaticResource EntryBoxHeader}" 
                                                   Height="{Binding Source={StaticResource Proxy}, Path=Data}" Width="50" Text="{Binding}"/>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </DockPanel>
                        <Border>
                            <Grid x:Name="adornedControl" >
                                <Grid.Resources>
                                    <Common:BindingProxy x:Key="Proxy" Data="{Binding}" />
                                </Grid.Resources>
                                <ItemsControl x:Name="_ScaleLines"
                                                    ItemsSource="{Binding ScaleLines}">
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <UniformGrid Rows="2" Columns="1" Height="{Binding Source={StaticResource Proxy}, Path=Data.ScaleHeight}">
                                                <Canvas Background="{StaticResource ThemeDarkBrush}" />
                                                <Canvas Background="{StaticResource ThemeMediumBrush}" />
                                            </UniformGrid>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                                <ItemsControl x:Name="_slider"
					                ItemsSource="{Binding Bars}"
                                    MouseMove="AreaMouseMove" MouseUp="AreaMouseUp"
                                    FlowDirection="LeftToRight"              
                                    VerticalAlignment="Bottom"
					                VirtualizingPanel.ScrollUnit="Pixel"
					                VirtualizingPanel.IsVirtualizing="True"
                                    VirtualizingPanel.VirtualizationMode="Recycling"
                                    ScrollViewer.IsDeferredScrollingEnabled="True"
					                ScrollViewer.CanContentScroll="True">
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <VirtualizingStackPanel Orientation="Horizontal"/>
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate DataType="Reports:CostBarVm">
                                            <Grid Width="80">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="*"/>
                                                    <RowDefinition Height="30"/>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="20"/>
                                                </Grid.RowDefinitions>
                                                <TextBlock HorizontalAlignment="Center" Text="{Binding Tip}" Foreground="{StaticResource TextBrush}" Grid.Row="1" Margin="1"/>
                                                <StackPanel Grid.Row="2"  >
                                                    <ItemsControl x:Name="indexBtns" Height="0" HorizontalAlignment="Center"
                                                                  ItemsSource="{Binding MenuItems}">
                                                        <ItemsControl.ItemTemplate>
                                                            <DataTemplate>
                                                                <Button Content="{Binding Text}"
                                                                        Background="{Binding Color}"
                                                                        Style="{StaticResource IndexButton}"
                                                                        Command= "{Binding Source={StaticResource Proxy}, Path=Data.NavigateInsideCommand}"
                                                                        CommandParameter="{Binding }" />
                                                            </DataTemplate>
                                                        </ItemsControl.ItemTemplate>
                                                        <ItemsControl.ItemsPanel>
                                                            <ItemsPanelTemplate>
                                                                <StackPanel Orientation="Horizontal"/>
                                                            </ItemsPanelTemplate>
                                                        </ItemsControl.ItemsPanel>
                                                    </ItemsControl>
                                                    <ToggleButton x:Name="_bar" 
                                                                  Foreground ="{Binding DetailsColor}"  
                                                                  Background="{Binding MainColor}" 
                                                                  Style="{StaticResource SimpleBar}" 
                                                                  Height="{Binding Value}" 
                                                                  Margin="5,0,5,0"
                                                                  Command="{Binding Source={StaticResource Proxy}, Path=Data.NavigateInsideCommand}"
                                                                  CommandParameter="{Binding }">
                                                    </ToggleButton>
                                                    <StackPanel.Triggers>
                                                        <EventTrigger RoutedEvent="ToggleButton.Checked" SourceName="_bar">
                                                            <BeginStoryboard>
                                                                <Storyboard>
                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="indexBtns" 
                                                                            Storyboard.TargetProperty="Height">
                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="30" />
                                                                    </DoubleAnimationUsingKeyFrames>
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </EventTrigger>
                                                        <EventTrigger RoutedEvent="ToggleButton.Unchecked" SourceName="_bar">
                                                            <BeginStoryboard>
                                                                <Storyboard>
                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="indexBtns" 
                                                                            Storyboard.TargetProperty="Height">
                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0" />
                                                                    </DoubleAnimationUsingKeyFrames>
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </EventTrigger>
                                                    </StackPanel.Triggers>
                                                </StackPanel>
                                                <Border Grid.Row="3" BorderBrush="{StaticResource ThemeLightBrush}" BorderThickness="1">
                                                    <TextBlock Text="{Binding Header}" HorizontalAlignment="Center"
                                                               Foreground="{StaticResource TextBrush}" 
                                                               Background="{StaticResource ThemeDarkBrush}" />
                                                </Border>
                                                <Canvas Grid.Row="0"/>
                                            </Grid>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                    <ItemsControl.Template>
                                        <ControlTemplate>
                                            <Border>
                                                <Virtualizing:DateTimeScrollViewer 
							                    HorizontalScrollBarVisibility="Visible" 
                                                VerticalScrollBarVisibility="Disabled"
                                                Behaviors:ScrollViewerBinding.HorizontalOffset="{Binding HorizontalOffset, Mode=TwoWay}"
							                    
							                    Padding="{TemplateBinding Control.Padding}"
							                    Focusable="False"
							                    OverridesDefaultStyle="True"
							                    Template="{StaticResource SliderTemplate}">
                                                        <ItemsPresenter SnapsToDevicePixels="True"/>
                                                </Virtualizing:DateTimeScrollViewer>
                                                </Border>
                                            </ControlTemplate>
                                        </ItemsControl.Template>
                                    </ItemsControl>
                            </Grid>
                        </Border>
                    </DockPanel>
                </DockPanel>
            </Border>
        </DataTemplate>


		
        <!--................................................ 4.Options ...............................................-->

        <!-- 5.1. Settings and Configurations -->

		
        <!-- 5.2. Help and Support  -->

        <!-- 5.3. About  -->

        <!--..........................................................................................................-->
		
		<TemplateSelectors:SingularViewListSelector x:Key="ListTemplateSelector"
													IndicesVmTemplate="{StaticResource IndexTemplate}"
													PPTableVmTemplate="{StaticResource PPTableTemplate}"
													SetupTimesVmTemplate="{StaticResource SetupTimesTemplate}"
													SkillCenterVmTemplate="{StaticResource SkillCenterTemplate}"
													CostReportsVmTemplate="{StaticResource CostReportTemplate}"
													ActualCostReportsVmTemplate="{StaticResource ActualCostReportTemplate}"/>
	</UserControl.Resources>
    <Grid>
        <Border Height="{Binding RelativeSource={RelativeSource AncestorType=Grid}, Path=ActualHeight}"
                HorizontalAlignment="Stretch"
                BorderThickness="0">
            <Border BorderBrush="{StaticResource ThemeDarkBrush}" BorderThickness="1">
                <ContentControl x:Name="_itemContentView" 
                                Content="{Binding RelativeSource={RelativeSource AncestorType=Views:SoheilSingularView}, 
                                Path=ViewModel, Mode=TwoWay }"
                                ContentTemplateSelector="{StaticResource ListTemplateSelector}"/>
            </Border>
        </Border>
    </Grid>
</UserControl>
