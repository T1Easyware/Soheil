<UserControl x:Class="Soheil.Views.SoheilSingularView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:Mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:D="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:Views="clr-namespace:Soheil.Views"
             xmlns:I="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:Behavior="clr-namespace:Soheil.Core.DataValidation.Behavior;assembly=Soheil.Core"
             xmlns:TemplateSelectors="clr-namespace:Soheil.TemplateSelectors"
             xmlns:IndexViewModels="clr-namespace:Soheil.Core.ViewModels.Index;assembly=Soheil.Core"
             xmlns:Common="clr-namespace:Soheil.Common;assembly=Soheil.Common"
             xmlns:SoheilException="clr-namespace:Soheil.Common.SoheilException;assembly=Soheil.Common"
             xmlns:customControls="clr-namespace:Soheil.Controls.CustomControls;assembly=Soheil.Controls"
             xmlns:System="clr-namespace:System;assembly=mscorlib"
             xmlns:Indices="clr-namespace:Soheil.Core.Index;assembly=Soheil.Core"
             xmlns:Behaviors="clr-namespace:Soheil.Controls.Behaviors;assembly=Soheil.Controls"
             xmlns:MultipleCommands="clr-namespace:Soheil.Core.Commands.MultipleCommands;assembly=Soheil.Core"
             xmlns:Virtualizing="clr-namespace:Soheil.Core.Virtualizing;assembly=Soheil.Core"
             xmlns:Reports="clr-namespace:Soheil.Core.ViewModels.Reports;assembly=Soheil.Core"
             Mc:Ignorable="D">
    <UserControl.Resources>
        <SolidColorBrush x:Key="ClickedTransparent" Color="#3000" />
		<SolidColorBrush x:Key="ShadowTransparent" Color="#3FFF" />
		<SolidColorBrush x:Key="SingularViewBackground" Color="#1000" />

		<!--................................................ 2.Basic .................................................-->

		<!-- 2.6. SetupTime Table -->
		<DataTemplate x:Key="SetupTimesTemplate" DataType="{x:Type vm:SetupTimeTableVm}"
				xmlns:vm="clr-namespace:Soheil.Core.ViewModels.SetupTime;assembly=Soheil.Core"
				xmlns:cc="clr-namespace:Soheil.Controls.CustomControls;assembly=Soheil.Controls"
				xmlns:localstt="clr-namespace:Soheil.Views.SetupTime">
			<DataTemplate.Resources>
				<BooleanToVisibilityConverter x:Key="booleanToVisibilityConverter"/>

				<ControlTemplate x:Key="ScrollViewerHorizontalOnTopTemplate" TargetType="{x:Type ScrollViewer}">
					<Grid x:Name="Grid" Background="{TemplateBinding Background}">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*"/>
							<ColumnDefinition Width="Auto"/>
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" MinHeight="17"/>
							<RowDefinition Height="*"/>
						</Grid.RowDefinitions>
						<Rectangle x:Name="Corner" 
                    Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" 
                    Grid.Column="1" Grid.Row="0"/>
						<ScrollContentPresenter x:Name="PART_ScrollContentPresenter" Margin="{TemplateBinding Padding}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Grid.Column="0" Grid.Row="1" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False"/>
						<ScrollBar x:Name="PART_VerticalScrollBar" 
                    Cursor="Arrow" 
                    Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" 
                    Grid.Column="1" Grid.Row="1" 
                    AutomationProperties.AutomationId="VerticalScrollBar" 
                    Maximum="{TemplateBinding ScrollableHeight}" 
                    Minimum="0" 
                    Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" 
                    ViewportSize="{TemplateBinding ViewportHeight}"/>
						<ScrollBar x:Name="PART_HorizontalScrollBar" 
                    Cursor="Arrow" 
                    Grid.Column="0" 
                    AutomationProperties.AutomationId="HorizontalScrollBar" 
                    Maximum="{TemplateBinding ScrollableWidth}" 
                    Minimum="0" 
                    Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" 
                    Orientation="Horizontal" 
                    ViewportSize="{TemplateBinding ViewportWidth}"/>
					</Grid>
				</ControlTemplate>

				<!--DataTemplate x:Key="templateTextCell" DataType="{x:Type vm:TextCell}">
					<Border Background="Silver">
						<TextBlock Text="{Binding Text}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
					</Border>
				</DataTemplate-->
				
				<DataTemplate x:Key="templateProductGroupColumnHeaderCell" DataType="{x:Type vm:ProductGroup}">
					<ToggleButton IsChecked="{Binding IsExpanded}" Padding="0" Margin="0">
						<TextBlock Text="{Binding Name}" Margin="-1">
							<TextBlock.LayoutTransform>
								<RotateTransform Angle="270"/>
							</TextBlock.LayoutTransform>
						</TextBlock>
					</ToggleButton>
				</DataTemplate>
				<DataTemplate x:Key="templateProductGroupRowHeaderCell" DataType="{x:Type vm:ProductGroup}">
					<ToggleButton IsChecked="{Binding IsExpanded}" Padding="0" Margin="0">
						<TextBlock Text="{Binding Name}"/>
					</ToggleButton>
				</DataTemplate>

				<DataTemplate x:Key="templateProductColumnHeaderCell" DataType="{x:Type vm:Rework}">
					<ToggleButton IsChecked="{Binding Product.IsExpanded}">
						<ToggleButton.ContextMenu>
							<ContextMenu>
								<MenuItem Header="Copy" Command="{Binding CopyCommand}"/>
								<MenuItem Header="Paste" Command="{Binding PasteCommand}"/>
							</ContextMenu>
						</ToggleButton.ContextMenu>
						<TextBlock Text="{Binding Name}" HorizontalAlignment="Center" VerticalAlignment="Center" TextAlignment="Center" TextWrapping="WrapWithOverflow"/>
					</ToggleButton>
				</DataTemplate>
				<DataTemplate x:Key="templateProductRowHeaderCell" DataType="{x:Type vm:Rework}">
					<ToggleButton IsChecked="{Binding Product.IsExpanded}">
						<ToggleButton.ContextMenu>
							<ContextMenu>
								<MenuItem Header="Copy" Command="{Binding CopyCommand}"/>
								<MenuItem Header="Paste" Command="{Binding PasteCommand}"/>
							</ContextMenu>
						</ToggleButton.ContextMenu>
						<TextBlock Text="{Binding Name}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
					</ToggleButton>
				</DataTemplate>

				<DataTemplate x:Key="templateReworkColumnHeaderCell" DataType="{x:Type vm:Rework}">
					<Border Background="{Binding Product.Color}">
						<Border.ContextMenu>
							<ContextMenu>
								<MenuItem Header="Copy" Command="{Binding CopyCommand}"/>
								<MenuItem Header="Paste" Command="{Binding PasteCommand}"/>
							</ContextMenu>
						</Border.ContextMenu>
						<TextBlock Text="{Binding Name}" HorizontalAlignment="Center" VerticalAlignment="Center" TextAlignment="Center" TextWrapping="WrapWithOverflow"/>
					</Border>
				</DataTemplate>
				<DataTemplate x:Key="templateReworkRowHeaderCell" DataType="{x:Type vm:Rework}">
					<Border Background="{Binding Product.Color}">
						<Border.ContextMenu>
							<ContextMenu>
								<MenuItem Header="Copy" Command="{Binding CopyCommand}"/>
								<MenuItem Header="Paste" Command="{Binding PasteCommand}"/>
							</ContextMenu>
						</Border.ContextMenu>
						<TextBlock Text="{Binding Name}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
					</Border>
				</DataTemplate>

				
				<DataTemplate x:Key="templateCheckboxCell" DataType="{x:Type vm:CheckboxCell}">
					<Border Background="{Binding Row.Product.Color}">
						<CheckBox IsChecked="{Binding IsChecked}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
					</Border>
				</DataTemplate>
				<DataTemplate x:Key="templateWarmupCell" DataType="{x:Type vm:WarmupCell}">
					<Border Background="{Binding Row.Product.Color}" MinWidth="60">
						<TextBox Text="{Binding DurationText}" Margin="2" Opacity="0.7"
						 Visibility="{Binding Row.IsDurationsVisible, Converter={StaticResource booleanToVisibilityConverter}}">
							<TextBox.Triggers>
								<EventTrigger RoutedEvent="MouseEnter">
									<BeginStoryboard>
										<Storyboard Duration="0:0:0.2">
											<DoubleAnimation Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.2"/>
										</Storyboard>
									</BeginStoryboard>
								</EventTrigger>
								<EventTrigger RoutedEvent="MouseLeave">
									<BeginStoryboard>
										<Storyboard Duration="0:0:0.4">
											<DoubleAnimation Storyboard.TargetProperty="Opacity" To="0.75" Duration="0:0:0.4"/>
										</Storyboard>
									</BeginStoryboard>
								</EventTrigger>
								<EventTrigger RoutedEvent="GotFocus">
									<BeginStoryboard>
										<Storyboard Duration="0:0:0.2">
											<DoubleAnimation Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.2"/>
										</Storyboard>
									</BeginStoryboard>
								</EventTrigger>
								<EventTrigger RoutedEvent="LostFocus">
									<BeginStoryboard>
										<Storyboard Duration="0:0:0.4">
											<DoubleAnimation Storyboard.TargetProperty="Opacity" To="0.75" Duration="0:0:0.4"/>
										</Storyboard>
									</BeginStoryboard>
								</EventTrigger>
							</TextBox.Triggers>
						</TextBox>
					</Border>
				</DataTemplate>
				<DataTemplate x:Key="templateChangeoverCell" DataType="{x:Type vm:ChangeoverCell}">
					<Border>
						<Grid>
							<Border Background="{Binding CrossColors.HorColor}" Height="2" VerticalAlignment="Center" HorizontalAlignment="Stretch"/>
							<Border Background="{Binding CrossColors.VertColor}" Width="2" VerticalAlignment="Stretch" HorizontalAlignment="Center"/>
							<TextBox Text="{Binding DurationText}" Margin="2" Opacity="0.7" x:Name="txt"
								Visibility="{Binding Path=Row.IsDurationsVisible, Converter={StaticResource booleanToVisibilityConverter}}">
								<TextBox.Triggers>
									<EventTrigger RoutedEvent="MouseEnter">
										<BeginStoryboard>
											<Storyboard Duration="0:0:0.2">
												<DoubleAnimation Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.2"/>
											</Storyboard>
										</BeginStoryboard>
									</EventTrigger>
									<EventTrigger RoutedEvent="MouseLeave">
										<BeginStoryboard>
											<Storyboard Duration="0:0:0.4">
												<DoubleAnimation Storyboard.TargetProperty="Opacity" To="0.75" Duration="0:0:0.4"/>
											</Storyboard>
										</BeginStoryboard>
									</EventTrigger>
									<EventTrigger RoutedEvent="GotFocus">
										<BeginStoryboard>
											<Storyboard Duration="0:0:0.2">
												<DoubleAnimation Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.2"/>
											</Storyboard>
										</BeginStoryboard>
									</EventTrigger>
									<EventTrigger RoutedEvent="LostFocus">
										<BeginStoryboard>
											<Storyboard Duration="0:0:0.4">
												<DoubleAnimation Storyboard.TargetProperty="Opacity" To="0.75" Duration="0:0:0.4"/>
											</Storyboard>
										</BeginStoryboard>
									</EventTrigger>
								</TextBox.Triggers>
							</TextBox>
						</Grid>
					</Border>
				</DataTemplate>
				<DataTemplate x:Key="templateBlankCell" DataType="{x:Type vm:ChangeoverCell}">
					<Border>
						<Grid>
							<Border Background="{Binding CrossColors.HorColor}" Height="2" VerticalAlignment="Center" HorizontalAlignment="Stretch"/>
							<Border Background="{Binding CrossColors.VertColor}" Width="2" VerticalAlignment="Stretch" HorizontalAlignment="Center"/>
						</Grid>
					</Border>
				</DataTemplate>
			</DataTemplate.Resources>

			<Grid
				Background="{StaticResource SingularViewBackground}"
				x:Name="setupTimeTableRoot"
				Loaded="setupTimeTableRootLoaded">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition Width="*"/>
					<ColumnDefinition Width="Auto"/>
				</Grid.ColumnDefinitions>
				<Grid.RowDefinitions>
					<RowDefinition Height="Auto"/>
					<RowDefinition Height="Auto"/>
					<RowDefinition Height="*"/>
				</Grid.RowDefinitions>

				<ToolBar Grid.ColumnSpan="3">
					<Menu>
						<MenuItem Command="{Binding RefreshAllCommand}">
							<Image Source="/Images/Fpc/Undo16.png" Width="16"/>
						</MenuItem>
					</Menu>
				</ToolBar>
				
				<!--Stations-->
				<DockPanel Grid.RowSpan="2" Grid.Column="2" Grid.Row="1" FlowDirection="RightToLeft">
					<TextBlock Text="ایستگاه را انتخاب کنید" DockPanel.Dock="Top" Foreground="Silver"/>
					<ListBox ItemsSource="{Binding Stations}" SelectedItem="{Binding SelectedStation}" 
							 Focusable="False" DisplayMemberPath="Name"/>
				</DockPanel>

				<!--SelectedStation.ColumnHeaders-->
				<DockPanel Grid.Column="1" Grid.Row="1">
					<Border DockPanel.Dock="Top" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
						<TextBlock Text="زمانهای تعویض Changeover" DockPanel.Dock="Top" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="Silver"/>
					</Border>
					<ScrollViewer VerticalScrollBarVisibility="Disabled" HorizontalScrollBarVisibility="Auto" Background="Transparent"
						  ScrollChanged="columnHeaderScrollViewer_ScrollChanged" Template="{StaticResource ScrollViewerHorizontalOnTopTemplate}">
						<ItemsControl ItemsSource="{Binding SelectedStation.ColumnHeaders}">
							<ItemsControl.ItemsPanel>
								<ItemsPanelTemplate>
									<Grid localstt:GridHelper.AllColumns="{Binding SelectedStation.ColumnPGList}"
								  cc:GridHelper.RowCount="1"/>
								</ItemsPanelTemplate>
							</ItemsControl.ItemsPanel>
							<ItemsControl.ItemContainerStyle>
								<Style TargetType="ContentPresenter">
									<Setter Property="Grid.Row" Value="{Binding Path=RowIndex}"/>
									<Setter Property="Grid.Column" Value="{Binding Path=ColumnIndex}"/>
									<Style.Triggers>
										<!--DataTrigger Binding="{Binding Path=CellType}" Value="TextCell">
											<Setter Property="ContentTemplate" Value="{StaticResource templateTextCell}"/>
											<Setter Property="Grid.ColumnSpan" Value="{Binding ElementName=setupTimeTableRoot, Path=DataContext.TotalVisualColumns}"/>
										</DataTrigger-->
										<DataTrigger Binding="{Binding Path=CellType}" Value="ProductGroupColumnHeaderCell">
											<Setter Property="ContentTemplate" Value="{StaticResource templateProductGroupColumnHeaderCell}"/>
										</DataTrigger>
										<DataTrigger Binding="{Binding Path=CellType}" Value="ProductColumnHeaderCell">
											<Setter Property="ContentTemplate" Value="{StaticResource templateProductColumnHeaderCell}"/>
										</DataTrigger>
										<DataTrigger Binding="{Binding Path=CellType}" Value="ReworkColumnHeaderCell">
											<Setter Property="ContentTemplate" Value="{StaticResource templateReworkColumnHeaderCell}"/>
										</DataTrigger>
									</Style.Triggers>
								</Style>
							</ItemsControl.ItemContainerStyle>
						</ItemsControl>
					</ScrollViewer>
				</DockPanel>

				<!--SelectedStation.RowHeaders-->
				<ScrollViewer VerticalScrollBarVisibility="Visible" HorizontalScrollBarVisibility="Disabled" Grid.Row="2"
					  ScrollChanged="rowHeaderScrollViewer_ScrollChanged" FlowDirection="RightToLeft" Background="Transparent">
					<ItemsControl ItemsSource="{Binding SelectedStation.RowHeaders}" FlowDirection="LeftToRight">
						<ItemsControl.ItemsPanel>
							<ItemsPanelTemplate>
								<Grid localstt:GridHelper.AllRows="{Binding SelectedStation.RowPGList}"
							  cc:GridHelper.ColumnCount="3"/>
							</ItemsPanelTemplate>
						</ItemsControl.ItemsPanel>
						<ItemsControl.ItemContainerStyle>
							<Style TargetType="ContentPresenter">
								<Setter Property="Grid.Row" Value="{Binding Path=RowIndex}"/>
								<Setter Property="Grid.Column" Value="{Binding Path=ColumnIndex}"/>
								<Style.Triggers>
									<DataTrigger Binding="{Binding Path=CellType}" Value="ProductGroupRowHeaderCell">
										<Setter Property="ContentTemplate" Value="{StaticResource templateProductGroupRowHeaderCell}"/>
										<Setter Property="Grid.ColumnSpan" Value="3"/>
									</DataTrigger>
									<DataTrigger Binding="{Binding Path=CellType}" Value="ReworkRowHeaderCell">
										<Setter Property="ContentTemplate" Value="{StaticResource templateReworkRowHeaderCell}"/>
									</DataTrigger>
									<DataTrigger Binding="{Binding Path=CellType}" Value="ProductRowHeaderCell">
										<Setter Property="ContentTemplate" Value="{StaticResource templateProductRowHeaderCell}"/>
									</DataTrigger>
									<DataTrigger Binding="{Binding Path=CellType}" Value="CheckboxCell">
										<Setter Property="ContentTemplate" Value="{StaticResource templateCheckboxCell}"/>
									</DataTrigger>
									<DataTrigger Binding="{Binding Path=CellType}" Value="WarmupCell">
										<Setter Property="ContentTemplate" Value="{StaticResource templateWarmupCell}"/>
									</DataTrigger>
								</Style.Triggers>
							</Style>
						</ItemsControl.ItemContainerStyle>
					</ItemsControl>
				</ScrollViewer>


				<!--SelectedStation.ChangeoverCells-->
				<ScrollViewer HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" Grid.Row="2" Grid.Column="1" x:Name="changeoverScrollbar">
					<ItemsControl ItemsSource="{Binding SelectedStation.ChangeoverCells}">
						<ItemsControl.ItemsPanel>
							<ItemsPanelTemplate>
								<Grid 
							localstt:GridHelper.AllColumns="{Binding SelectedStation.ColumnPGList}"
							localstt:GridHelper.AllRows="{Binding SelectedStation.RowPGList}">
								</Grid>
							</ItemsPanelTemplate>
						</ItemsControl.ItemsPanel>
						<ItemsControl.ItemContainerStyle>
							<Style TargetType="ContentPresenter">
								<Setter Property="Grid.Row" Value="{Binding Path=RowIndex}"/>
								<Setter Property="Grid.Column" Value="{Binding Path=ColumnIndex}"/>
								<Style.Triggers>
									<DataTrigger Binding="{Binding Path=CellType}" Value="ChangeoverCell">
										<Setter Property="ContentTemplate" Value="{StaticResource templateChangeoverCell}"/>
									</DataTrigger>
									<DataTrigger Binding="{Binding Path=CellType}" Value="None">
										<Setter Property="ContentTemplate" Value="{StaticResource templateBlankCell}"/>
									</DataTrigger>
								</Style.Triggers>
							</Style>
						</ItemsControl.ItemContainerStyle>
					</ItemsControl>
				</ScrollViewer>

				<!--Texts-->
				<DockPanel TextBlock.Foreground="Silver" Grid.Row="1">
					<Border DockPanel.Dock="Right" Width="50">
						<TextBlock Text="زمان آغاز به کار Warmup" TextWrapping="Wrap" HorizontalAlignment="Center" VerticalAlignment="Bottom" TextAlignment="Center"/>
					</Border>
					<Border DockPanel.Dock="Right" Width="50">
						<TextBlock Text="تولید اصلی لحاظ شود" TextWrapping="Wrap" HorizontalAlignment="Center" VerticalAlignment="Bottom" TextAlignment="Center"/>
					</Border>
					<Border DockPanel.Dock="Left" Width="50">
						<TextBlock Text="از محصول" TextWrapping="Wrap" HorizontalAlignment="Center" VerticalAlignment="Bottom" TextAlignment="Center"/>
					</Border>
				</DockPanel>
			</Grid>
		</DataTemplate>

		<!--................................................ 3.Control ...............................................-->

        <!-- 3.1. Product Plan (PP) -->
		<DataTemplate x:Key="PPTableTemplate" DataType="{x:Type vm:PPTableVm}"
			xmlns:local="clr-namespace:Soheil.Views.PP"
			xmlns:vm="clr-namespace:Soheil.Core.ViewModels.PP;assembly=Soheil.Core"
			xmlns:cal="clr-namespace:Arash.PersianDateControls;assembly=PersianDateControls">
			<DataTemplate.Resources>
				<System:Double x:Key="StationOrActivityHeaderWidth">100.0</System:Double>
				<GridLength x:Key="StationOrActivityHeaderGridLength">100.0</GridLength>
				<Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
					<Setter Property="Margin" Value="1"/>
				</Style>
				<ControlTemplate x:Key="ButtonTemplate" TargetType="{x:Type Button}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="HoverOn">
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverShineBorder"
                                       Storyboard.TargetProperty="(UIElement.Opacity)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder"
                                       Storyboard.TargetProperty="(UIElement.Opacity)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
							</DoubleAnimationUsingKeyFrames>

						</Storyboard>
						<Storyboard x:Key="HoverOff">
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverShineBorder"
                                       Storyboard.TargetProperty="(UIElement.Opacity)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder"
                                       Storyboard.TargetProperty="(UIElement.Opacity)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
							</DoubleAnimationUsingKeyFrames>

						</Storyboard>
						<Storyboard x:Key="PressedOn">

							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PressedBorder"
                                       Storyboard.TargetProperty="(UIElement.Opacity)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
							</DoubleAnimationUsingKeyFrames>

						</Storyboard>
						<Storyboard x:Key="PressedOff">

							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PressedBorder"
                                       Storyboard.TargetProperty="(UIElement.Opacity)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
							</DoubleAnimationUsingKeyFrames>

						</Storyboard>
						<Storyboard x:Key="FocusedOn">
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement"
                                       Storyboard.TargetProperty="(UIElement.Opacity)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="FocussedOff">
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement"
                                       Storyboard.TargetProperty="(UIElement.Opacity)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>

					</ControlTemplate.Resources>
					<Grid x:Name="Grid" TextBlock.Foreground="Black">
						<Border x:Name="Background" Background="{StaticResource NormalBrush}"
              BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3" />
						<Border x:Name="HoverBorder" Background="{StaticResource HoverBrush}"
              BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3"
              Opacity="0" />
						<Border x:Name="HoverShineBorder" Background="{StaticResource HoverShineBrush}"
              BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3"
              Opacity="0" />
						<Border x:Name="PressedBorder" Background="{StaticResource PressedBrush}"
              BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3"
              Opacity="0" />
						<Border x:Name="ShineBorder" Background="{StaticResource ShineBrush}"
              BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3"
              Opacity="1" />
						<ContentPresenter Margin="{TemplateBinding Padding}"
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" />
						<Border x:Name="FocusVisualElement" Margin="1,1,1,1" BorderBrush="{StaticResource HoverShineBrush}"
              BorderThickness="1" CornerRadius="3,3,3,3" IsHitTestVisible="false" Opacity="0" />
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsDefault" Value="True">
							<Setter TargetName="ShineBorder" Property="BorderBrush" Value="{DynamicResource DefaultedBorderBrush}" />
						</Trigger>
						<Trigger Property="IsKeyboardFocused" Value="true">
							<Trigger.ExitActions>
								<BeginStoryboard x:Name="FocussedOff_BeginStoryboard" Storyboard="{StaticResource FocussedOff}" />
							</Trigger.ExitActions>
							<Trigger.EnterActions>
								<BeginStoryboard x:Name="FocusedOn_BeginStoryboard" Storyboard="{StaticResource FocusedOn}" />
							</Trigger.EnterActions>

						</Trigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Trigger.ExitActions>
								<BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}" />
							</Trigger.ExitActions>
							<Trigger.EnterActions>
								<BeginStoryboard Storyboard="{StaticResource HoverOn}" />
							</Trigger.EnterActions>

						</Trigger>
						<Trigger Property="IsPressed" Value="true">
							<Trigger.ExitActions>
								<BeginStoryboard Storyboard="{StaticResource PressedOff}" />
							</Trigger.ExitActions>
							<Trigger.EnterActions>
								<BeginStoryboard Storyboard="{StaticResource PressedOn}" />
							</Trigger.EnterActions>
						</Trigger>
						<Trigger Property="IsEnabled" Value="true" />
						<Trigger Property="IsEnabled" Value="false">
							<Setter TargetName="Background" Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" />
							<Setter TargetName="ShineBorder" Property="BorderBrush" Value="{DynamicResource DisabledBorderBrush}" />
							<Setter TargetName="Grid" Property="Opacity" Value="0.5" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
				<Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
					<Setter Property="Background" Value="Black"/>
					<Setter Property="Template" Value="{StaticResource ButtonTemplate}"/>
				</Style>
				<ControlTemplate TargetType="ContentControl" x:Key="hoverStyle">
					<Border BorderBrush="#4FFF" BorderThickness="0,1,1,0" Padding="0" Margin="0">
						<Border.Background>
							<SolidColorBrush Color="White" Opacity="0" x:Name="bkg"/>
						</Border.Background>
						<ContentPresenter Content="{TemplateBinding Content}" Margin="0" VerticalAlignment="Center"/>
					</Border>
					<ControlTemplate.Triggers>
						<EventTrigger RoutedEvent="MouseEnter">
							<BeginStoryboard>
								<Storyboard Duration="0:0:0.2">
									<DoubleAnimation Storyboard.TargetName="bkg"
		Storyboard.TargetProperty="Opacity"
		Duration="0:0:0.1"
		To="0.1"/>
								</Storyboard>
							</BeginStoryboard>
						</EventTrigger>
						<EventTrigger RoutedEvent="MouseLeave">
							<BeginStoryboard>
								<Storyboard Duration="0:0:0.7">
									<DoubleAnimation Storyboard.TargetName="bkg"
		Storyboard.TargetProperty="Opacity"
		Duration="0:0:0.4"
		To="0"/>
								</Storyboard>
							</BeginStoryboard>
						</EventTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
				<DataTemplate x:Key="balloonTemplate">
					<Canvas>
						<Canvas.Margin>
							<MultiBinding Converter="{StaticResource ppTaskBorderMarginConverter}">
								<Binding Path="StartDateTime"/>
								<Binding ElementName="ppTable" Path="DataContext.HourZoom"/>
							</MultiBinding>
						</Canvas.Margin>
						<Canvas DataContext="{Binding Message}" Width="0" Height="0" Margin="-20,-150,0,0" ClipToBounds="False" MouseDown="balloonClicked"
							Visibility="{Binding HasException, Converter={StaticResource booleanToVisibilityConverter}}">
                            <Path x:Name="balloon" Width="183.667" Height="90.7315" Canvas.Left="1.49997" Canvas.Top="1.8334" Stretch="Fill"  MouseDown="balloonClicked"
								Stroke="#4000" Fill="#FFB" Opacity="0.75" ClipToBounds="False"
								Data="F1 M 6.99997,2.3334L 179.667,2.3334C 182.428,2.3334 184.667,4.57199 184.667,7.3334L 184.667,64.6667C 184.667,67.4282 182.428,69.6667 179.667,69.6667L 36.6112,69.6669L 44.5225,92.0649L 17.6166,69.6668L 6.99997,69.6667C 4.23854,69.6667 1.99997,67.4282 1.99997,64.6667L 1.99997,7.3334C 1.99997,4.57199 4.23854,2.3334 6.99997,2.3334 Z ">
								<Path.Effect>
									<DropShadowEffect BlurRadius="8" ShadowDepth="1" Opacity="0.6" Direction="315"/>
								</Path.Effect>
							</Path>
                            <ScrollViewer Width="177" Height="70" MouseDown="balloonClicked"
										  HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
                                <TextBlock Text="{Binding MainExceptionText}" TextWrapping="Wrap" Margin="2" FlowDirection="RightToLeft" MouseDown="balloonClicked"/>
							</ScrollViewer>
                            <Canvas.ToolTip>
                                <TextBlock TextWrapping="Wrap" Text="{Binding FullExceptionText}"/>
                            </Canvas.ToolTip>
						</Canvas>
						<Canvas.Triggers>
							<EventTrigger RoutedEvent="MouseEnter">
								<BeginStoryboard>
									<Storyboard Duration="0:0:0.2">
										<DoubleAnimation Storyboard.TargetName="balloon"
				Storyboard.TargetProperty="Opacity"
				Duration="0:0:0.1"
				To="1"/>
									</Storyboard>
								</BeginStoryboard>
							</EventTrigger>
							<EventTrigger RoutedEvent="MouseLeave">
								<BeginStoryboard>
									<Storyboard Duration="0:0:0.7">
										<DoubleAnimation Storyboard.TargetName="balloon"
				Storyboard.TargetProperty="Opacity"
				Duration="0:0:0.4"
				To="0.75"/>
									</Storyboard>
								</BeginStoryboard>
							</EventTrigger>

						</Canvas.Triggers>
					</Canvas>
				</DataTemplate>


				<LinearGradientBrush x:Key="SlideWindowBackground" StartPoint="0,0" EndPoint="1,0.001">
					<GradientBrush.GradientStops>
						<GradientStopCollection>
							<GradientStop Color="#2BFF" Offset="0" />
							<GradientStop Color="#8CFF" Offset="0.5" />
							<GradientStop Color="#48CC" Offset="0.6" />
							<GradientStop Color="#8AFF" Offset="1"/>
						</GradientStopCollection>
					</GradientBrush.GradientStops>
				</LinearGradientBrush>
				<LinearGradientBrush x:Key="SlideWindowBorder" StartPoint="0,0" EndPoint="0,1">
					<GradientBrush.GradientStops>
						<GradientStopCollection>
							<GradientStop Color="#CFF" Offset="0.0"/>
							<GradientStop Color="#9DC" Offset="1.0"/>
						</GradientStopCollection>
					</GradientBrush.GradientStops>
				</LinearGradientBrush>

				<!--ScrollBars-->
				<Style x:Key="VerticalThumb" D:IsControlPart="True" TargetType="{x:Type Thumb}" BasedOn="{x:Null}">
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="{x:Type Thumb}">
								<Grid Margin="0,0,0,0" x:Name="Grid">
									<Rectangle HorizontalAlignment="Stretch" x:Name="Rectangle" VerticalAlignment="Stretch" Width="Auto" Height="Auto" RadiusX="3" RadiusY="3" Fill="{TemplateBinding Background}" Stroke="{x:Null}" />
									<!--Opacity="0.6"-->
								</Grid>
								<ControlTemplate.Triggers>
									<Trigger Property="IsFocused" Value="True"/>
									<Trigger Property="IsMouseOver" Value="True">
										<Setter Property="Fill" TargetName="Rectangle" Value="#FFCCCCCC"/>
										<!---->
										<Setter Property="Opacity" TargetName="Rectangle" Value="1"/>
									</Trigger>
									<Trigger Property="IsEnabled" Value="False"/>
									<Trigger Property="IsDragging" Value="True"/>
								</ControlTemplate.Triggers>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
				<Style x:Key="ScrollRepeatButtonStyle" D:IsControlPart="True" TargetType="{x:Type RepeatButton}">
				  <Setter Property="Background" Value="Transparent"/>
				  <Setter Property="BorderBrush" Value="Transparent"/>
				  <Setter Property="IsTabStop" Value="false"/>
				  <Setter Property="Focusable" Value="false"/>
				  <Setter Property="Template">
					<Setter.Value>
					  <ControlTemplate TargetType="{x:Type RepeatButton}">
						<Grid>
						  <Rectangle Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}"/>
						</Grid>
					  </ControlTemplate>
					</Setter.Value>
				  </Setter>
				</Style>
				<Style x:Key="MenuScrollBar" TargetType="{x:Type ScrollBar}">
					<Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
					<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="{x:Type ScrollBar}">
								<Grid x:Name="GridRoot" Background="{x:Null}" Width="15">
									<Grid.RowDefinitions>
										<RowDefinition MaxHeight="18" Height="16"/>
										<RowDefinition Height="*"/>
										<RowDefinition MaxHeight="18" Height="16"/>
									</Grid.RowDefinitions>

									<Rectangle Stroke="{x:Null}" RadiusX="0" RadiusY="0" VerticalAlignment="Stretch" Height="Auto" Grid.RowSpan="3" Fill="#D81B171E"/>

									<RepeatButton x:Name="DecreaseRepeat" Style="{DynamicResource SimpleRepeatButton}" Command="ScrollBar.LineUpCommand" Background="Transparent" BorderBrush="{x:Null}" Margin="0,0,0,0" Focusable="False" VerticalAlignment="Stretch" Height="Auto" Grid.RowSpan="1">
										<Grid>
											<Path x:Name="DecreaseArrow" StrokeThickness="1" Data="M 0 4 L 8 4 L 4 0 Z" HorizontalAlignment="Center" VerticalAlignment="Center" Width="7" Height="5" Fill="#FFCCCCCC" Stretch="Fill"/>
										</Grid>
									</RepeatButton>

									<!-- Track is a special layout container which sizes the thumb and the repeat button which do jump scrolling either side of it -->
											<Track Grid.Row="1" x:Name="PART_Track" Orientation="Vertical" IsDirectionReversed="true">
												<Track.Thumb>
													<Thumb Style="{DynamicResource VerticalThumb}" Background="#FFCCCCCC" Foreground="{x:Null}" HorizontalAlignment="Center" VerticalAlignment="Stretch" Width="7"/>
												</Track.Thumb>
												<Track.IncreaseRepeatButton>
													<RepeatButton x:Name="PageUp" Style="{DynamicResource ScrollRepeatButtonStyle}" Command="ScrollBar.PageDownCommand"/>
												</Track.IncreaseRepeatButton>
												<Track.DecreaseRepeatButton>
													<RepeatButton x:Name="PageDown" Style="{DynamicResource ScrollRepeatButtonStyle}" Command="ScrollBar.PageUpCommand"/>
												</Track.DecreaseRepeatButton>
											</Track>

											<RepeatButton x:Name="IncreaseRepeat" Style="{DynamicResource SimpleRepeatButton}" Command="ScrollBar.LineDownCommand" Background="Transparent" BorderBrush="{x:Null}" Margin="0,0,0,0" Focusable="False" VerticalAlignment="Stretch" Height="Auto" Grid.Row="2" Grid.RowSpan="1">
												<Grid>
													<Path x:Name="IncreaseArrow" StrokeThickness="1" Data="M 0 0 L 4 4 L 8 0 Z" Width="7" Height="5" Fill="#FFCCCCCC" Stretch="Fill"/>
												</Grid>
											</RepeatButton>

											</Grid>

											<!-- This uses a single template for ScrollBar and rotate it to be Horizontal
			It also changes the commands so that the it does Left and Right instead of Up and Down Commands -->
											<ControlTemplate.Triggers>
												<Trigger Property="IsEnabled" Value="False">
													<Setter Property="Visibility" TargetName="GridRoot" Value="Collapsed"/>
												</Trigger>
												<Trigger Property="Orientation" Value="Horizontal">
													<!-- Rotate the ScrollBar from Vertical to Horizontal -->
													<Setter Property="LayoutTransform" TargetName="GridRoot">
														<Setter.Value>
															<RotateTransform Angle="-90"/>
														</Setter.Value>
													</Setter>
													<!-- Track is bound to Orientation internally, so we need to rotate it back to Vertical -->
													<Setter TargetName="PART_Track" Property="Orientation" Value="Vertical"/>

													<!-- Change the commands to do Horizontal commands -->
													<Setter Property="Command" Value="ScrollBar.PageLeftCommand" TargetName="PageDown"/>
													<Setter Property="Command" Value="ScrollBar.PageRightCommand" TargetName="PageUp"/>
												</Trigger>
											</ControlTemplate.Triggers>
								</ControlTemplate>
							</Setter.Value>
						</Setter>
					</Style>
				<Style TargetType="{x:Type ScrollViewer}" BasedOn="{x:Null}">
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="{x:Type ScrollViewer}">
								<ControlTemplate.Resources>
									<Storyboard x:Key="MouseOver">
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PART_HorizontalScrollBar" Storyboard.TargetProperty="(UIElement.Opacity)">
											<SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PART_VerticalScrollBar" Storyboard.TargetProperty="(UIElement.Opacity)">
											<SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
									<Storyboard x:Key="MouseOut">
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PART_HorizontalScrollBar" Storyboard.TargetProperty="(UIElement.Opacity)">
											<SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.2"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PART_VerticalScrollBar" Storyboard.TargetProperty="(UIElement.Opacity)">
											<SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.2"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</ControlTemplate.Resources>
								<Grid>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="*"/>
										<ColumnDefinition Width="Auto"/>
									</Grid.ColumnDefinitions>
									<Grid.RowDefinitions>
										<RowDefinition Height="*"/>
										<RowDefinition Height="Auto"/>
									</Grid.RowDefinitions>
									<ScrollContentPresenter Grid.Column="0" Grid.Row="0" Margin="{TemplateBinding Padding}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" CanContentScroll="{TemplateBinding CanContentScroll}" Grid.ColumnSpan="1" x:Name="scrollContentPresenter"/>

									<!-- The visibility of the ScrollBars is controlled by the implementation fo the control -->
									<ScrollBar Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Grid.Column="0" Grid.Row="1" x:Name="PART_HorizontalScrollBar" Style="{DynamicResource MenuScrollBar}" Orientation="Horizontal" Value="{Binding Path=HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}" Minimum="0" Maximum="{TemplateBinding ScrollableWidth}" AutomationProperties.AutomationId="HorizontalScrollBar" Opacity="0.2"/>
									<ScrollBar Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Grid.Column="1" Grid.Row="0" x:Name="PART_VerticalScrollBar" Style="{DynamicResource MenuScrollBar}" Orientation="Vertical" Value="{Binding Path=VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" Minimum="0" Maximum="{TemplateBinding ScrollableHeight}" AutomationProperties.AutomationId="VerticalScrollBar" Opacity="0.2"/>
								</Grid>
								<ControlTemplate.Triggers>
									<Trigger Property="IsMouseOver" Value="True">
										<Trigger.ExitActions>
											<BeginStoryboard x:Name="MouseOut_BeginStoryboard1" Storyboard="{StaticResource MouseOut}"/>
										</Trigger.ExitActions>
										<Trigger.EnterActions>
											<BeginStoryboard Storyboard="{StaticResource MouseOver}" x:Name="MouseOver_BeginStoryboard"/>
										</Trigger.EnterActions>
									</Trigger>
								</ControlTemplate.Triggers>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
					<Setter Property="Foreground" Value="#FFFFFFFF"/>
					<Setter Property="Background" Value="{x:Null}"/>
					<Setter Property="BorderThickness" Value="1,0,0,1"/>
					<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
					<Setter Property="VerticalContentAlignment" Value="Stretch"/>
				</Style>
				<Style x:Key="SimpleRepeatButton" D:IsControlPart="True" TargetType="{x:Type RepeatButton}" BasedOn="{x:Null}">
					<Setter Property="Background" Value="{DynamicResource NormalBrush}"/>
					<Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}"/>
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="{x:Type RepeatButton}">
								<Grid>
									<Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"/>
									<ContentPresenter HorizontalAlignment="Stretch" x:Name="ContentPresenter" VerticalAlignment="Stretch" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" Opacity="1"/>
									<!--Opacity="0.6"-->
								</Grid>
								<ControlTemplate.Triggers>
									<Trigger Property="IsKeyboardFocused" Value="true"/>
									<Trigger Property="IsMouseOver" Value="true">
										<Setter Property="Opacity" TargetName="ContentPresenter" Value="1"/>
									</Trigger>
									<Trigger Property="IsPressed" Value="true"/>
									<Trigger Property="IsEnabled" Value="false"/>
								</ControlTemplate.Triggers>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</DataTemplate.Resources>
            <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">

                <Grid Margin="5" Background="{StaticResource SingularViewBackground}" 
				      x:Name="ppTable" MouseMove="Area_MouseMove" MouseUp="Area_MouseUp" Loaded="ppTable_Loaded_1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="40"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Name="cd_stations" Width="{StaticResource StationOrActivityHeaderGridLength}"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <ToolBarTray Background="Transparent" Grid.ColumnSpan="2" FlowDirection="RightToLeft">
                        <ToolBar Background="Transparent">
                            <Button Margin="1" Command="{Binding ToggleTaskEditorCommand}">
                                <Image Source="/Images/PP/Task.png" Width="16"/>
                                <Button.ToolTip>
                                    <StackPanel>
                                        <TextBlock Text="ویرایشگر Task"/>
                                        <TextBlock Foreground="DarkGray" FontSize="10" Text="ویرایشگر Task با محتویات اخیر نمایش داده می شود"/>
                                    </StackPanel>
                                </Button.ToolTip>
                            </Button>
                            <UniformGrid Rows="1" Background="#80FF" x:Name="taskEditorToolbarButtons" Width="0">
                                <Button Margin="1" Command="{Binding TaskEditor.ResetCurrentBlockCommand}">
                                    <Image Source="/Images/Fpc/Undo16.png" Width="16"/>
                                    <Button.ToolTip>
                                        <StackPanel>
                                            <TextBlock Text="خالی کردن برنامه"/>
                                            <TextBlock Foreground="DarkGray" FontSize="10" Text="تمام اطلاعات مربوط به برنامه فعلی از صفحه پاک می شود"/>
                                        </StackPanel>
                                    </Button.ToolTip>
                                </Button>
                                <Button Margin="1" Command="{Binding TaskEditor.ClearAllCommand}">
                                    <Image Source="/Images/PP/TaskNew.png" Width="16"/>
                                    <Button.ToolTip>
                                        <StackPanel>
                                            <TextBlock Text="خالی کردن صفحه"/>
                                            <TextBlock Foreground="DarkGray" FontSize="10" Text="اطلاعات موجود در ویرایشگر Task حذف خواهد شد"/>
                                        </StackPanel>
                                    </Button.ToolTip>
                                </Button>
                                <!--Button Margin="1" Command="{Binding TaskEditor.SaveCommand}">
                                    <Image Source="/Images/Fpc/Save16.png" Width="16"/>
                                    <Button.ToolTip>
                                        <StackPanel>
                                            <TextBlock Text="ذخیره برنامه"/>
                                            <TextBlock Foreground="DarkGray" FontSize="10" Text="برنامه فعلی در ویرایشگر Task ذخیره می شود"/>
                                        </StackPanel>
                                    </Button.ToolTip>
                                </Button-->
                                <Button Margin="1" Command="{Binding TaskEditor.ExitCommand}">
                                    <Image Source="/Images/PP/closeup.png" Width="16"/>
                                    <Button.ToolTip>
                                        <StackPanel>
                                            <TextBlock Text="بستن ویرایشگر"/>
                                            <TextBlock Foreground="DarkGray" FontSize="10" Text="ویرایشگر Task بسته می شود و آخرین اطلاعات آن نگه داشته می شود"/>
                                        </StackPanel>
                                    </Button.ToolTip>
                                </Button>
                                <Button Margin="1" Command="{Binding TaskEditor.SaveAllCommand}">
                                    <Image Source="/Images/PP/saveup.png" Width="16"/>
                                    <Button.ToolTip>
                                        <StackPanel>
                                            <TextBlock Text="ذخیره همه و خروج"/>
                                            <TextBlock Foreground="DarkGray" FontSize="10" Text="تمام برنامه های ویرایشگر Task ذخیره و ویرایشگر بسته می شود"/>
                                        </StackPanel>
                                    </Button.ToolTip>
                                </Button>
                            </UniformGrid>
                            <Separator/>
                            <Button Margin="1" Command="{Binding ToggleJobEditorCommand}">
                                <Image Source="/Images/PP/Job.png" Width="16"/>
                                <Button.ToolTip>
                                    <StackPanel>
                                        <TextBlock Text="ویرایشگر Job"/>
                                        <TextBlock Foreground="DarkGray" FontSize="10" Text="ویرایشگر Job با محتویات اخیر نمایش داده می شود"/>
                                    </StackPanel>
                                </Button.ToolTip>
                            </Button>
                            <UniformGrid Rows="1" Background="#80FF" x:Name="jobEditorToolbarButtons" Width="0">
                                <Button Margin="1" Command="{Binding JobEditor.ClearAllCommand}">
                                    <Image Source="/Images/PP/JobNew.png" Width="16"/>
                                    <Button.ToolTip>
                                        <StackPanel>
                                            <TextBlock Text="خالی کردن صفحه"/>
                                            <TextBlock Foreground="DarkGray" FontSize="10" Text="اطلاعات موجود در ویرایشگر Job حذف خواهد شد"/>
                                        </StackPanel>
                                    </Button.ToolTip>
                                </Button>
                                <Button Margin="1" Command="{Binding JobEditor.SaveAllCommand}">
                                    <Image Source="/Images/PP/saveup.png" Width="16"/>
                                    <Button.ToolTip>
                                        <StackPanel>
                                            <TextBlock Text="ذخیره همه و خروج"/>
                                            <TextBlock Foreground="DarkGray" FontSize="10" Text="تمام برنامه های ویرایشگر Job ذخیره و ویرایشگر بسته می شود"/>
                                        </StackPanel>
                                    </Button.ToolTip>
                                </Button>
                                <Button Margin="1" Command="{Binding JobEditor.ExitCommand}">
                                    <Image Source="/Images/PP/closeup.png" Width="16"/>
                                    <Button.ToolTip>
                                        <StackPanel>
                                            <TextBlock Text="بستن ویرایشگر"/>
                                            <TextBlock Foreground="DarkGray" FontSize="10" Text="ویرایشگر Job بسته می شود و آخرین اطلاعات آن نگه داشته می شود"/>
                                        </StackPanel>
                                    </Button.ToolTip>
                                </Button>
                            </UniformGrid>
                            <Separator/>
                            <ToggleButton Margin="2" IsChecked="{Binding ShowInsertSetupButton}">
                                <Image Source="/Images/PP/SetupAdd.png" Width="16"/>
                                <ToggleButton.ToolTip>
                                    <StackPanel>
                                        <TextBlock Text="نمایش کلیدهای آماده سازی خودکار"/>
                                        <TextBlock Foreground="DarkGray" FontSize="10" Text="با کلیک بر روی کلید هر Task، آماده سازی بطور خودکار قبل از آن Task اضافه میشود"/>
                                    </StackPanel>
                                </ToggleButton.ToolTip>
                            </ToggleButton>

                            <ToggleButton Margin="2" IsChecked="{Binding ShowJobList}">
                                <Image Source="/Images/PP/JobList.png" Width="16"/>
                                <ToggleButton.ToolTip>
                                    <StackPanel>
                                        <TextBlock Text="نمایش لیست Job ها"/>
                                        <TextBlock Foreground="DarkGray" FontSize="10" Text="Job های بازه قابل مشاهده در صفحه لیست می شوند"/>
                                    </StackPanel>
                                </ToggleButton.ToolTip>
                            </ToggleButton>
                        </ToolBar>
                        <ToolBar Background="Transparent">
                            <Button Command="{Binding GoToNow}" ToolTip="برو به الان">
                                <Image Source="/Images/PP/Now.png" Width="16"/>
                            </Button>
                            <WrapPanel VerticalAlignment="Center">
                                <Image Source="/Images/PP/Zoom.png" Height="16" VerticalAlignment="Center"/>
                                <Slider Margin="2" Maximum="2000" Minimum="20" Value="{Binding HourZoom}" Width="140" PreviewMouseDown="ZoomStarted" VerticalAlignment="Center"/>
                                <WrapPanel.ToolTip>
                                    <ToolTip>بزرگنمایی زمان</ToolTip>
                                </WrapPanel.ToolTip>
                            </WrapPanel>
                            <Button Click="UndoZoomClicked">
                                <Image Source="/Images/PP/ZoomUndo.png" Height="16"/>
                                <Button.ToolTip>
                                    <ToolTip>بزرگنمایی قبلی</ToolTip>
                                </Button.ToolTip>
                            </Button>
                            <Separator/>
                            <ToggleButton IsChecked="{Binding AlwaysLoadTasks}">
                                <Image Source="/Images/PP/TaskAutoLoad.png" Height="16"/>
                                <ToggleButton.ToolTip>
                                    <ToolTip>لود اتوماتیک</ToolTip>
                                </ToggleButton.ToolTip>
                            </ToggleButton>
                            <ToggleButton IsChecked="{Binding ShowProductCodes}">
                                <Image Source="/Images/PP/ShowCode.png" Height="16"/>
                                <ToggleButton.ToolTip>
                                    <ToolTip>نمایش کد بجای نام محصولات</ToolTip>
                                </ToggleButton.ToolTip>
                            </ToggleButton>
                            <Separator/>
                            <ToggleButton IsChecked="{Binding ViewMode, 
							    Converter={StaticResource isEqual}, 
							    ConverterParameter={x:Static Common:PPViewMode.Simple}}">
                                <Image Source="/Images/PP/Task.png" Height="16"/>
                                <ToggleButton.ToolTip>
                                    <ToolTip>برنامه تولید</ToolTip>
                                </ToggleButton.ToolTip>
                            </ToggleButton>
                            <!--<ToggleButton IsChecked="{Binding ViewMode, 
							    Converter={StaticResource isEqual}, 
							    ConverterParameter={x:Static Common:PPViewMode.TaskReport}}">
							    <Image Source="/Images/PP/Report.png" Height="16"/>
							    <ToggleButton.ToolTip>
								    <ToolTip>گزارش ایستگاه</ToolTip>
							    </ToggleButton.ToolTip>
						    </ToggleButton>-->
                            <ToggleButton IsChecked="{Binding ViewMode, 
							    Converter={StaticResource isEqual}, 
							    ConverterParameter={x:Static Common:PPViewMode.Report}}">
                                <Image Source="/Images/PP/ProcessReport.png" Height="16"/>
                                <ToggleButton.ToolTip>
                                    <ToolTip>گزارش</ToolTip>
                                </ToggleButton.ToolTip>
                            </ToggleButton>
                        </ToolBar>
                    </ToolBarTray>


                    <!--Job Editor-->
                    <Grid Grid.ColumnSpan="2" Grid.Row="1" x:Name="jobEditorPanel" Height="0">
                        <Border BorderBrush="{StaticResource HeaderBorderBrush}" BorderThickness="2">
                            <local:PPJobEditor
							    HorizontalAlignment="Center" VerticalAlignment="Center" Padding="20"
							    DataContext="{Binding JobEditor}"
							    Height="{Binding ElementName=jobEditorPanel, Path=ActualHeight}"
							    Width="{Binding ElementName=jobEditorPanel, Path=ActualWidth}"/>
                        </Border>
                    </Grid>
                    <!--Task Editor-->
                    <Grid Grid.ColumnSpan="2" Grid.Row="1" x:Name="taskEditorPanel" Height="0">
                        <Border BorderBrush="{StaticResource HeaderBorderBrush}" BorderThickness="2">
                            <local:PPTaskEditor
							    HorizontalAlignment="Center" VerticalAlignment="Center" Padding="20"
							    DataContext="{Binding TaskEditor}"
							    Height="{Binding ElementName=taskEditorPanel, Path=ActualHeight}"
							    Width="{Binding ElementName=taskEditorPanel, Path=ActualWidth}"/>
                        </Border>
                    </Grid>
                    <!-- NPT Editor-->
                    <Grid Grid.ColumnSpan="2" Grid.Row="1" x:Name="nptEditorPanel" Height="0">
                        <Border BorderBrush="{StaticResource HeaderBorderBrush}" BorderThickness="2">
                            <WrapPanel>
                                <TextBlock Text="{Loc txtDate}"/>
                                <cal:PersianDatePicker SelectedDate="{Binding SelectedNPT.StartDate}"/>
                                <TextBlock Text="{Loc txtTime}"/>
                                <TextBox Text="{Binding SelectedNPT.StartTime, Converter={StaticResource timeSpanToStringConverter}}"/>
                                <Button Content="{Loc PPE_FirstEmptySpace}" Command="{Binding SelectedNPT.SetToEarliestTimeCommand}"/>
                                <Button Content="{Loc PPE_LastEmptySpace}" Command="{Binding SelectedNPT.SetToLatestTimeCommand}"/>
                                <Button Content="{Loc txtCancel}" Command="{Binding SelectedNPT.CancelCommand}"/>
                                <Button Content="{Loc txtSave}" Command="{Binding SelectedNPT.SaveCommand}"/>
                            </WrapPanel>
                        </Border>
                    </Grid>
                    <!-- JobList -->
                    <Grid Grid.ColumnSpan="2" Grid.Row="1" x:Name="jobListPanel" Height="0">
                        <Border BorderBrush="{StaticResource HeaderBorderBrush}" BorderThickness="2">
                        </Border>
                    </Grid>
                    
                    <!-- TaskReportBuilder -->
                    <Grid Grid.ColumnSpan="2" Grid.Row="1" x:Name="taskReportBuilderPanel" Height="0">
                        <Border BorderBrush="Black" BorderThickness="1" CornerRadius="0,0,2,2" Background="Silver" Width="400" Height="152">
                            <ContentPresenter ContentSource="{Binding CurrentTaskReportBuilder}">
                                <ContentPresenter.ContentTemplate>
                                    <DataTemplate DataType="{x:Type vm:TaskReportHolderVm}">
                                        <Grid FlowDirection="RightToLeft" DataContext="{Binding CurrentTaskReportBuilder}">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="30"/>
                                                <RowDefinition Height="30"/>
                                                <RowDefinition Height="30"/>
                                                <RowDefinition Height="30"/>
                                                <RowDefinition Height="30"/>
                                            </Grid.RowDefinitions>

                                            <TextBlock Text="زمان شروع گزارش" VerticalAlignment="Center" Margin="25,0,5,0"/>
                                            <cal:PersianDatePicker SelectedDate="{Binding StartDate}" Grid.Column="1"/>
                                            <TextBox Text="{Binding StartTime, Converter={StaticResource timeSpanToStringConverter}}" FlowDirection="LeftToRight" Grid.Column="2"/>

                                            <CheckBox Content="زمان خاتمه گزارش" IsChecked="{Binding ByEndDate}" VerticalAlignment="Center" Grid.Row="1" Margin="5,0" Foreground="Black"/>
                                            <cal:PersianDatePicker SelectedDate="{Binding EndDate}" IsEnabled="{Binding ByEndDate}" Grid.Column="1" Grid.Row="1"/>
                                            <TextBox Text="{Binding EndTime, Converter={StaticResource timeSpanToStringConverter}}" FlowDirection="LeftToRight"
												     IsEnabled="{Binding ByEndDate}" Grid.Column="2" Grid.Row="1"/>

                                            <CheckBox Content="مدت زمان گزارش" IsChecked="{Binding ByEndDate, Converter={StaticResource inverter}}" VerticalAlignment="Center" Grid.Row="2" Margin="5,0" Foreground="Black"/>
                                            <TextBox Text="{Binding DurationSeconds, Converter={StaticResource secondsToStringConverter}}" FlowDirection="LeftToRight" Grid.ColumnSpan="2"
												     IsEnabled="{Binding ByEndDate, Converter={StaticResource inverter}}" Grid.Column="1" Grid.Row="2"/>

                                            <TextBlock Text="مقدار هدف بازه" VerticalAlignment="Center" Grid.Row="3" Margin="5,0" Foreground="Black"/>
                                            <TextBox Text="{Binding TargetPoint}" FlowDirection="LeftToRight"
												     Grid.Column="1" Grid.Row="3"/>

                                            <Button Content="محاسبه خودکار" FlowDirection="LeftToRight"
												    Command="{Binding AutoFindTargetPoint}" Grid.Column="2" Grid.Row="3"/>

                                            <UniformGrid Grid.Row="4" Grid.ColumnSpan="3" Rows="1" Columns="3">
                                                <Button Grid.Column="0" Content="کل زمان باقیمانده" Command="{Binding AutoFillCommand}"/>
                                                <Button Grid.Column="1" Content="انصراف" Command="{Binding CancelCommand}"/>
                                                <Button Grid.Column="2" Content="تأیید" Command="{Binding OpenCommand}"/>
                                            </UniformGrid>
                                        </Grid>
                                    </DataTemplate>
                                </ContentPresenter.ContentTemplate>
                            </ContentPresenter>
                        </Border>
                    </Grid>
                    <!-- NPTReportBuilder -->
                    <Grid Grid.ColumnSpan="2" Grid.Row="1" x:Name="nptReportBuilderPanel" Height="0">
                        <Border BorderBrush="Black" BorderThickness="1" CornerRadius="0,0,2,2" Background="Silver" Width="330" Height="152">
                            <ContentPresenter ContentSource="{Binding CurrentNPTReportBuilder}">
                                <ContentPresenter.ContentTemplate>
                                    <DataTemplate DataType="{x:Type vm:NPTReportVm}">
                                        <Grid FlowDirection="RightToLeft" DataContext="{Binding CurrentNPTReportBuilder}">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="30"/>
                                                <RowDefinition Height="30"/>
                                                <RowDefinition Height="30"/>
                                                <RowDefinition Height="30"/>
                                                <RowDefinition Height="30"/>
                                            </Grid.RowDefinitions>

                                            <TextBlock Text="زمان شروع گزارش" VerticalAlignment="Center" Margin="25,0,5,0"/>
                                            <cal:PersianDatePicker SelectedDate="{Binding StartDate}" Grid.Column="1"/>
                                            <TextBox Text="{Binding StartTime, Converter={StaticResource timeSpanToStringConverter}}" FlowDirection="LeftToRight" Grid.Column="2"/>

                                            <CheckBox Content="زمان خاتمه گزارش" IsChecked="{Binding ByEndDate}" VerticalAlignment="Center" Grid.Row="1" Margin="5,0" Foreground="Black"/>
                                            <cal:PersianDatePicker SelectedDate="{Binding EndDate}" IsEnabled="{Binding ByEndDate}" Grid.Column="1" Grid.Row="1"/>
                                            <TextBox Text="{Binding EndTime, Converter={StaticResource timeSpanToStringConverter}}" FlowDirection="LeftToRight"
												     IsEnabled="{Binding ByEndDate}" Grid.Column="2" Grid.Row="1"/>

                                            <CheckBox Content="مدت زمان گزارش" IsChecked="{Binding ByEndDate, Converter={StaticResource inverter}}" VerticalAlignment="Center" Grid.Row="2" Margin="5,0" Foreground="Black"/>
                                            <TextBox Text="{Binding DurationSeconds, Converter={StaticResource secondsToStringConverter}}" FlowDirection="LeftToRight" Grid.ColumnSpan="2"
												     IsEnabled="{Binding ByEndDate, Converter={StaticResource inverter}}" Grid.Column="1" Grid.Row="2"/>

                                            <TextBlock Text="مقدار هدف بازه" VerticalAlignment="Center" Grid.Row="3" Margin="5,0" Foreground="Black"/>
                                            <TextBox Text="{Binding TargetPoint}" FlowDirection="LeftToRight"
												     Grid.Column="1" Grid.Row="3"/>

                                            <Button Content="محاسبه خودکار" FlowDirection="LeftToRight"
												    Command="{Binding AutoFindTargetPoint}" Grid.Column="2" Grid.Row="3"/>

                                            <UniformGrid Grid.Row="4" Grid.ColumnSpan="3" Rows="1" Columns="3">
                                                <Button Grid.Column="0" Content="کل زمان باقیمانده" Command="{Binding AutoFillCommand}"/>
                                                <Button Grid.Column="1" Content="انصراف" Command="{Binding CancelCommand}"/>
                                                <Button Grid.Column="2" Content="تأیید" Command="{Binding AddCommand}"/>
                                            </UniformGrid>
                                        </Grid>
                                    </DataTemplate>
                                </ContentPresenter.ContentTemplate>
                            </ContentPresenter>
                        </Border>
                    </Grid>
                    <!-- ProcessReportBuilder -->
                    <Grid Grid.ColumnSpan="2" Grid.Row="1" x:Name="processReportBuilderPanel" Height="0">
                        <Border BorderBrush="Black" BorderThickness="1" CornerRadius="0,0,2,2" TextBlock.Foreground="Silver" Padding="4">
                            <Border.Effect>
                                <DropShadowEffect ShadowDepth="0" BlurRadius="6"/>
                            </Border.Effect>
                            <ScrollViewer HorizontalScrollBarVisibility="Disabled">
                                <Grid FlowDirection="RightToLeft" DataContext="{Binding CurrentProcessReportBuilder}">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>

                                    <DockPanel>
                                        <TextBlock DockPanel.Dock="Left" Text="نام محصول: "/>
                                        <Rectangle Width="16" Height="16" DockPanel.Dock="Left" Margin="2">
                                            <Rectangle.Fill>
                                                <SolidColorBrush Color="{Binding Parent.Process.Task.ProductColor}"/>
                                            </Rectangle.Fill>
                                        </Rectangle>
                                        <TextBlock DockPanel.Dock="Left" Text="{Binding Parent.Process.Task.ProductName}"/>
                                        <TextBlock DockPanel.Dock="Left" Text="     نام فعالیت: "/>
                                        <TextBlock Text="{Binding Parent.Process.StateStationActivity.Activity.Name}"/>
                                    </DockPanel>

                                    <DockPanel Grid.Row="1" LastChildFill="False">
                                        <TextBlock DockPanel.Dock="Left" Text="مقدار هدف فعالیت" VerticalAlignment="Center"/>
                                        <TextBox DockPanel.Dock="Left" Text="{Binding ProcessReportTargetPoint}" VerticalAlignment="Center" MinWidth="60"/>
                                        <TextBlock DockPanel.Dock="Left" Text="تولید سالم" VerticalAlignment="Center"/>
                                        <TextBox DockPanel.Dock="Left" Text="{Binding ProducedG1}" VerticalAlignment="Center" MinWidth="60"/>
                                        <TextBlock DockPanel.Dock="Left" Text="زمان شروع گزارش" VerticalAlignment="Center"/>
                                        <cal:PersianDatePicker DockPanel.Dock="Left" SelectedDate="{Binding StartDate}" IsEnabled="False"/>
                                        <TextBox Text="{Binding StartTime, Converter={StaticResource timeSpanToStringConverter}}" IsReadOnly="True" FlowDirection="LeftToRight"/>
                                    </DockPanel>

                                    <!-- Defections -->
                                    <Border Grid.Row="2" BorderBrush="#088" Background="#6AA"
										    BorderThickness="2" CornerRadius="2,2,0,0" HorizontalAlignment="Left" Margin="2,2,2,0">
                                        <TextBlock Text="گزارش کیفی (ضایعات)" Foreground="Black" Margin="2,2,2,0"/>
                                    </Border>
                                    <Border Grid.Row="3" BorderBrush="#088" BorderThickness="1" CornerRadius="0,2,2,2" Margin="2,0,2,2">
                                        <DockPanel>
                                            <Grid DockPanel.Dock="Top" Background="#185C54" TextBlock.Foreground="White">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="30"/>
                                                    <ColumnDefinition Width="40"/>
                                                    <ColumnDefinition Width="150"/>
                                                    <ColumnDefinition Width="75"/>
                                                    <ColumnDefinition Width="50"/>
                                                    <ColumnDefinition Width="50"/>
                                                    <ColumnDefinition Width="75"/>
                                                    <ColumnDefinition Width="50"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <ContentControl Template="{StaticResource hoverStyle}">
                                                    <TextBlock Text="R" TextAlignment="Center" HorizontalAlignment="Center"/>
                                                </ContentControl>
                                                <ContentControl Grid.Column="1" Template="{StaticResource hoverStyle}">
                                                    <TextBlock Text="خروجی" TextAlignment="Center" HorizontalAlignment="Center"/>
                                                </ContentControl>
                                                <ContentControl Grid.Column="2" Template="{StaticResource hoverStyle}">
                                                    <TextBlock Text="نوع مشکل" TextAlignment="Center" HorizontalAlignment="Center"/>
                                                </ContentControl>
                                                <ContentControl Grid.Column="3" Template="{StaticResource hoverStyle}">
                                                    <TextBlock Text="زمان از دست رفته" TextWrapping="WrapWithOverflow" TextAlignment="Center" HorizontalAlignment="Center"/>
                                                </ContentControl>
                                                <ContentControl Grid.Column="4" Template="{StaticResource hoverStyle}">
                                                    <TextBlock Text="تعداد از دست رفته" TextWrapping="WrapWithOverflow" TextAlignment="Center" HorizontalAlignment="Center"/>
                                                </ContentControl>
                                                <ContentControl Grid.Column="5" Template="{StaticResource hoverStyle}">
                                                    <TextBlock Text="موثر بر خروجی" TextWrapping="WrapWithOverflow" TextAlignment="Center" HorizontalAlignment="Center"/>
                                                </ContentControl>
                                                <ContentControl Grid.Column="6" Template="{StaticResource hoverStyle}">
                                                    <TextBlock Text="مجموع به زمان" TextWrapping="WrapWithOverflow" TextAlignment="Center" HorizontalAlignment="Center"/>
                                                </ContentControl>
                                                <ContentControl Grid.Column="7" Template="{StaticResource hoverStyle}">
                                                    <TextBlock Text="مجموع به تعداد" TextWrapping="WrapWithOverflow" TextAlignment="Center" HorizontalAlignment="Center"/>
                                                </ContentControl>
                                                <ContentControl Grid.Column="8" Template="{StaticResource hoverStyle}">
                                                    <TextBlock Text="اپراتورهای مقصر" TextWrapping="WrapWithOverflow" TextAlignment="Center" HorizontalAlignment="Center"/>
                                                </ContentControl>
                                            </Grid>
                                            <Grid DockPanel.Dock="Bottom" TextBlock.Foreground="Silver">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="180"/>
                                                    <ColumnDefinition Width="40"/>
                                                    <ColumnDefinition Width="75"/>
                                                    <ColumnDefinition Width="50"/>
                                                    <ColumnDefinition Width="50"/>
                                                    <ColumnDefinition Width="75"/>
                                                    <ColumnDefinition Width="50"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <Button DockPanel.Dock="Bottom" Command="{Binding DefectionReports.AddCommand}" HorizontalAlignment="Left">
                                                    <DockPanel>
                                                        <Image DockPanel.Dock="Left" Source="/Images/Fpc/Add16.png" Width="16"/>
                                                        <TextBlock VerticalAlignment="Center" Text="افزودن گزارش کیفی" Foreground="Black"/>
                                                    </DockPanel>
                                                </Button>
                                                <TextBlock Margin="2" Grid.Column="1" Text="مجموع"/>
                                                <TextBlock Margin="2" Grid.Column="2" Text="{Binding DefectionReports.SumOfLostTime, Converter={StaticResource secondsToStringConverter}}" TextAlignment="Center" HorizontalAlignment="Center"/>
                                                <TextBlock Margin="2" Grid.Column="3" Text="{Binding DefectionReports.SumOfLostCount}" TextAlignment="Center" HorizontalAlignment="Center"/>
                                                <TextBlock Margin="2" Grid.Column="5" Text="{Binding DefectionReports.SumOfTimeEquivalent, Converter={StaticResource secondsToStringConverter}}" TextAlignment="Center" HorizontalAlignment="Center"/>
                                                <TextBlock Margin="2" Grid.Column="6" Text="{Binding DefectionReports.SumOfCountEquivalent}" TextAlignment="Center" HorizontalAlignment="Center"/>
                                            </Grid>
                                            <!-- Defections List -->
                                            <ItemsControl ItemsSource="{Binding DefectionReports.List}" VerticalAlignment="Top" HorizontalAlignment="Stretch">
                                                <ItemsControl.ItemTemplate>
                                                    <DataTemplate>
                                                        <Grid Background="#222" TextBlock.Foreground="Silver">
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="30"/>
                                                                <ColumnDefinition Width="40"/>
                                                                <ColumnDefinition Width="150"/>
                                                                <ColumnDefinition Width="75"/>
                                                                <ColumnDefinition Width="50"/>
                                                                <ColumnDefinition Width="50"/>
                                                                <ColumnDefinition Width="75"/>
                                                                <ColumnDefinition Width="50"/>
                                                                <ColumnDefinition Width="*"/>
                                                            </Grid.ColumnDefinitions>
                                                            <ContentControl Template="{StaticResource hoverStyle}">
                                                                <TextBlock Text="{Binding Index}" TextAlignment="Center" HorizontalAlignment="Center"/>
                                                            </ContentControl>
                                                            <ContentControl Grid.Column="1" Template="{StaticResource hoverStyle}">
                                                                <TextBlock x:Name="OTT" Text="---" TextAlignment="Center" HorizontalAlignment="Center"/>
                                                            </ContentControl>
                                                            <Canvas ClipToBounds="False">
                                                                <Button Opacity="0" HorizontalAlignment="Left" 
																    x:Name="deleteDefectionReportButton" ToolTip="حذف گزارش کیفی" Command="{Binding DeleteCommand}">
                                                                    <Image Source="/Images/Fpc/Delete16.png" Width="16"/>
                                                                </Button>
                                                            </Canvas>
                                                            <ContentControl Grid.Column="2" Template="{StaticResource hoverStyle}">
                                                                <DockPanel>
                                                                    <TextBlock DockPanel.Dock="Right" Foreground="Red" Text="!" Width="10"
															    Visibility="{Binding ProductDefection.SelectedItem, Converter={StaticResource isNullToVisibility}}" 
															    ToolTip="هیچ مشکل کیفی هنوز انتخاب نشده است"/>
                                                                    <ComboBox ItemsSource="{Binding ProductDefection.FilteredList}"
																    DisplayMemberPath="Text"
																    SelectedItem="{Binding ProductDefection.SelectedItem}"
																    IsTextSearchEnabled="True"
																    IsEditable="True"/>
                                                                </DockPanel>
                                                            </ContentControl>
                                                            <ContentControl Grid.Column="3" Template="{StaticResource hoverStyle}">
                                                                <TextBox Text="{Binding LostSeconds, Converter={StaticResource secondsToStringConverter}}" FlowDirection="LeftToRight" TextAlignment="Center" HorizontalAlignment="Center"/>
                                                            </ContentControl>
                                                            <ContentControl Grid.Column="4" Template="{StaticResource hoverStyle}">
                                                                <TextBox Text="{Binding LostCount}" TextAlignment="Center" HorizontalAlignment="Center" MinWidth="40"/>
                                                            </ContentControl>
                                                            <ContentControl Grid.Column="5" Template="{StaticResource hoverStyle}">
                                                                <CheckBox IsChecked="{Binding AffectsTaskReport}" HorizontalAlignment="Center"/>
                                                            </ContentControl>
                                                            <ContentControl Grid.Column="6" Template="{StaticResource hoverStyle}">
                                                                <TextBlock Text="{Binding TimeEquivalent, Converter={StaticResource secondsToStringConverter}}" FlowDirection="LeftToRight" TextAlignment="Center" HorizontalAlignment="Center"/>
                                                            </ContentControl>
                                                            <ContentControl Grid.Column="7" Template="{StaticResource hoverStyle}">
                                                                <TextBlock Text="{Binding QuantityEquivalent}" TextAlignment="Center" HorizontalAlignment="Center" MinWidth="40"/>
                                                            </ContentControl>
                                                            <ContentControl Grid.Column="8" Template="{StaticResource hoverStyle}">
                                                                <WrapPanel HorizontalAlignment="Stretch">
                                                                    <ItemsControl ItemsSource="{Binding GuiltyOperators.FilterBoxes}">
                                                                        <ItemsControl.ItemTemplate>
                                                                            <DataTemplate>
                                                                                <DockPanel>
                                                                                    <Button DockPanel.Dock="Right" Command="{Binding DeleteCommand}">
                                                                                        <Image Source="/Images/Fpc/Delete16.png" Height="16"/>
                                                                                    </Button>
                                                                                    <TextBlock DockPanel.Dock="Right" Foreground="Red" Text="!" Width="10"
																					    Visibility="{Binding SelectedItem, Converter={StaticResource isNullToVisibility}}" 
																					    ToolTip="هیچ اپراتوری هنوز انتخاب نشده است"/>
                                                                                    <ComboBox ItemsSource="{Binding FilteredList}" Grid.Column="2"
																				    DisplayMemberPath="Text"
																				    SelectedItem="{Binding SelectedItem}"
																				    IsTextSearchEnabled="True"
																				    IsEditable="True"
																				    x:Name="cmb"/>
                                                                                </DockPanel>
                                                                            </DataTemplate>
                                                                        </ItemsControl.ItemTemplate>
                                                                        <ItemsControl.ItemsPanel>
                                                                            <ItemsPanelTemplate>
                                                                                <WrapPanel/>
                                                                            </ItemsPanelTemplate>
                                                                        </ItemsControl.ItemsPanel>
                                                                    </ItemsControl>
                                                                    <Button Command="{Binding GuiltyOperators.AddCommand}">
                                                                        <Image Source="/Images/Fpc/Add16.png" Height="16"/>
                                                                    </Button>
                                                                </WrapPanel>
                                                            </ContentControl>
                                                            <Grid.Triggers>
                                                                <EventTrigger RoutedEvent="MouseEnter">
                                                                    <BeginStoryboard>
                                                                        <Storyboard Duration="0:0:0.2">
                                                                            <DoubleAnimation Storyboard.TargetName="deleteDefectionReportButton" Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" To="0.7"/>
                                                                        </Storyboard>
                                                                    </BeginStoryboard>
                                                                </EventTrigger>
                                                                <EventTrigger RoutedEvent="MouseLeave">
                                                                    <BeginStoryboard>
                                                                        <Storyboard Duration="0:0:0.7">
                                                                            <DoubleAnimation Storyboard.TargetName="deleteDefectionReportButton" Storyboard.TargetProperty="Opacity" Duration="0:0:0.7" To="0"/>
                                                                        </Storyboard>
                                                                    </BeginStoryboard>
                                                                </EventTrigger>
                                                            </Grid.Triggers>
                                                        </Grid>
                                                        <DataTemplate.Triggers>
                                                            <DataTrigger Binding="{Binding ProductDefection.SelectedItem.ViewModel.IsG2}" Value="True">
                                                                <Setter TargetName="OTT" Property="Text" Value="درجه 2"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding ProductDefection.SelectedItem.ViewModel.IsG2}" Value="False">
                                                                <Setter TargetName="OTT" Property="Text" Value="ضایعات"/>
                                                            </DataTrigger>
                                                        </DataTemplate.Triggers>
                                                    </DataTemplate>
                                                </ItemsControl.ItemTemplate>
                                            </ItemsControl>
                                        </DockPanel>
                                    </Border>

                                    <!-- Stoppage -->
                                    <Border Grid.Row="4" BorderBrush="#088" Background="#6AA"
										    BorderThickness="2" CornerRadius="2,2,0,0" HorizontalAlignment="Left" Margin="2,2,2,0">
                                        <TextBlock Text="گزارش توقفات" Foreground="Black" Margin="2,2,2,0"/>
                                    </Border>
                                    <Border Grid.Row="5" BorderBrush="#088" BorderThickness="1" CornerRadius="0,2,2,2" Margin="2,0,2,2">
                                        <DockPanel>
                                            <Grid DockPanel.Dock="Top" Background="#185C54" TextBlock.Foreground="White">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="30"/>
                                                    <ColumnDefinition Width="160"/>
                                                    <ColumnDefinition Width="30"/>
                                                    <ColumnDefinition Width="75"/>
                                                    <ColumnDefinition Width="50"/>
                                                    <ColumnDefinition Width="50"/>
                                                    <ColumnDefinition Width="75"/>
                                                    <ColumnDefinition Width="50"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <ContentControl Template="{StaticResource hoverStyle}">
                                                    <TextBlock Text="R" TextAlignment="Center" HorizontalAlignment="Center"/>
                                                </ContentControl>
                                                <ContentControl Grid.Column="1" Template="{StaticResource hoverStyle}">
                                                    <StackPanel>
                                                        <TextBlock Text="علت توقفات" TextAlignment="Center" HorizontalAlignment="Center"/>
                                                        <TextBlock Text="سطح 1  -  سطح 2  -  سطح 3" TextAlignment="Right" HorizontalAlignment="Center"/>
                                                    </StackPanel>
                                                </ContentControl>
                                                <ContentControl Grid.Column="2" Template="{StaticResource hoverStyle}">
                                                    <TextBlock Text="کد" TextAlignment="Center" HorizontalAlignment="Center" VerticalAlignment="Bottom"/>
                                                </ContentControl>
                                                <ContentControl Grid.Column="3" Template="{StaticResource hoverStyle}">
                                                    <TextBlock Text="زمان از دست رفته" TextWrapping="WrapWithOverflow" TextAlignment="Center" HorizontalAlignment="Center"/>
                                                </ContentControl>
                                                <ContentControl Grid.Column="4" Template="{StaticResource hoverStyle}">
                                                    <TextBlock Text="تعداد از دست رفته" TextWrapping="WrapWithOverflow" TextAlignment="Center" HorizontalAlignment="Center"/>
                                                </ContentControl>
                                                <ContentControl Grid.Column="5" Template="{StaticResource hoverStyle}">
                                                    <TextBlock Text="موثر بر خروجی" TextWrapping="WrapWithOverflow" TextAlignment="Center" HorizontalAlignment="Center"/>
                                                </ContentControl>
                                                <ContentControl Grid.Column="6" Template="{StaticResource hoverStyle}">
                                                    <TextBlock Text="مجموع به زمان" TextWrapping="WrapWithOverflow" TextAlignment="Center" HorizontalAlignment="Center"/>
                                                </ContentControl>
                                                <ContentControl Grid.Column="7" Template="{StaticResource hoverStyle}">
                                                    <TextBlock Text="مجموع به تعداد" TextWrapping="WrapWithOverflow" TextAlignment="Center" HorizontalAlignment="Center"/>
                                                </ContentControl>
                                                <ContentControl Grid.Column="8" Template="{StaticResource hoverStyle}">
                                                    <TextBlock Text="اپراتورهای مقصر" TextWrapping="WrapWithOverflow" TextAlignment="Center" HorizontalAlignment="Center"/>
                                                </ContentControl>
                                            </Grid>
                                            <Grid DockPanel.Dock="Bottom" Background="#222" TextBlock.Foreground="Silver">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="180"/>
                                                    <ColumnDefinition Width="40"/>
                                                    <ColumnDefinition Width="75"/>
                                                    <ColumnDefinition Width="50"/>
                                                    <ColumnDefinition Width="50"/>
                                                    <ColumnDefinition Width="75"/>
                                                    <ColumnDefinition Width="50"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <Button Command="{Binding StoppageReports.AddCommand}" HorizontalAlignment="Left">
                                                    <DockPanel>
                                                        <Image DockPanel.Dock="Left" Source="/Images/Fpc/Add16.png" Width="16"/>
                                                        <TextBlock VerticalAlignment="Center" Text="افزودن گزارش توقفات" Foreground="Black"/>
                                                    </DockPanel>
                                                </Button>
                                                <TextBlock Margin="2" Grid.Column="1" Text="مجموع"/>
                                                <TextBlock Margin="2" Grid.Column="2" Text="{Binding StoppageReports.SumOfLostTime, Converter={StaticResource secondsToStringConverter}}" TextAlignment="Center" HorizontalAlignment="Center"/>
                                                <TextBlock Margin="2" Grid.Column="3" Text="{Binding StoppageReports.SumOfLostCount}" TextAlignment="Center" HorizontalAlignment="Center"/>
                                                <TextBlock Margin="2" Grid.Column="5" Text="{Binding StoppageReports.SumOfTimeEquivalent, Converter={StaticResource secondsToStringConverter}}" TextAlignment="Center" HorizontalAlignment="Center"/>
                                                <TextBlock Margin="2" Grid.Column="6" Text="{Binding StoppageReports.SumOfCountEquivalent}" TextAlignment="Center" HorizontalAlignment="Center"/>
                                            </Grid>
                                            <!-- Stoppages List -->
                                            <ItemsControl ItemsSource="{Binding StoppageReports.List}" VerticalAlignment="Top" HorizontalAlignment="Stretch">
                                                <ItemsControl.ItemTemplate>
                                                    <DataTemplate>
                                                        <Grid Background="#222" TextBlock.Foreground="Silver">
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="30"/>
                                                                <ColumnDefinition Width="160"/>
                                                                <ColumnDefinition Width="30"/>
                                                                <ColumnDefinition Width="75"/>
                                                                <ColumnDefinition Width="50"/>
                                                                <ColumnDefinition Width="50"/>
                                                                <ColumnDefinition Width="75"/>
                                                                <ColumnDefinition Width="50"/>
                                                                <ColumnDefinition Width="*"/>
                                                            </Grid.ColumnDefinitions>
                                                            <ContentControl Template="{StaticResource hoverStyle}">
                                                                <TextBlock Text="{Binding Index}" TextAlignment="Center" HorizontalAlignment="Center"/>
                                                            </ContentControl>
                                                            <Canvas ClipToBounds="False">
                                                                <Button Opacity="0" HorizontalAlignment="Left" 
																    x:Name="deleteStoppageReportButton" ToolTip="حذف گزارش توقفات" Command="{Binding DeleteCommand}">
                                                                    <Image Source="/Images/Fpc/Delete16.png" Width="16"/>
                                                                </Button>
                                                            </Canvas>
                                                            <ContentControl Grid.Column="1" Template="{StaticResource hoverStyle}">
                                                                <ItemsControl ItemsSource="{Binding StoppageLevels.FilterBoxes}">
                                                                    <ItemsControl.ItemTemplate>
                                                                        <DataTemplate>
                                                                            <DockPanel>
                                                                                <TextBlock DockPanel.Dock="Right" Foreground="Red" Text="!" Width="10"
																				    Visibility="{Binding SelectedItem, Converter={StaticResource isNullToVisibility}}" 
																				    ToolTip="هیچ علت توقفی در این سطح انتخاب نشده است"/>
                                                                                <ComboBox ItemsSource="{Binding FilteredList}"
																				    DisplayMemberPath="Text"
																				    SelectedItem="{Binding SelectedItem}"
																				    IsTextSearchEnabled="True"
																				    IsEditable="True"/>
                                                                            </DockPanel>
                                                                        </DataTemplate>
                                                                    </ItemsControl.ItemTemplate>
                                                                </ItemsControl>
                                                            </ContentControl>
                                                            <ContentControl Grid.Column="2" Template="{StaticResource hoverStyle}">
                                                                <TextBox Text="{Binding SelectedCode}" TextChanged="CausesSelectedCode_TextChanged" FlowDirection="LeftToRight" TextAlignment="Center" HorizontalAlignment="Center" TextWrapping="Wrap" MaxWidth="25"/>
                                                            </ContentControl>
                                                            <ContentControl Grid.Column="3" Template="{StaticResource hoverStyle}">
                                                                <TextBox Text="{Binding LostSeconds, Converter={StaticResource secondsToStringConverter}}" FlowDirection="LeftToRight" TextAlignment="Center" HorizontalAlignment="Center"/>
                                                            </ContentControl>
                                                            <ContentControl Grid.Column="4" Template="{StaticResource hoverStyle}">
                                                                <TextBox Text="{Binding LostCount}" TextAlignment="Center" HorizontalAlignment="Center" MinWidth="40"/>
                                                            </ContentControl>
                                                            <ContentControl Grid.Column="5" Template="{StaticResource hoverStyle}">
                                                                <CheckBox IsChecked="{Binding AffectsTaskReport}" HorizontalAlignment="Center"/>
                                                            </ContentControl>
                                                            <ContentControl Grid.Column="6" Template="{StaticResource hoverStyle}">
                                                                <TextBlock Text="{Binding TimeEquivalent, Converter={StaticResource secondsToStringConverter}}" FlowDirection="LeftToRight" TextAlignment="Center" HorizontalAlignment="Center"/>
                                                            </ContentControl>
                                                            <ContentControl Grid.Column="7" Template="{StaticResource hoverStyle}">
                                                                <TextBlock Text="{Binding QuantityEquivalent}" TextAlignment="Center" HorizontalAlignment="Center" MinWidth="40"/>
                                                            </ContentControl>
                                                            <ContentControl Grid.Column="8" Template="{StaticResource hoverStyle}">
                                                                <WrapPanel HorizontalAlignment="Stretch">
                                                                    <ItemsControl ItemsSource="{Binding GuiltyOperators.FilterBoxes}">
                                                                        <ItemsControl.ItemTemplate>
                                                                            <DataTemplate>
                                                                                <DockPanel>
                                                                                    <Button DockPanel.Dock="Right" Command="{Binding DeleteCommand}">
                                                                                        <Image Source="/Images/Fpc/Delete16.png" Height="16"/>
                                                                                    </Button>
                                                                                    <TextBlock DockPanel.Dock="Right" Foreground="Red" Text="!" Width="10"
																					    Visibility="{Binding SelectedItem, Converter={StaticResource isNullToVisibility}}" 
																					    ToolTip="هیچ اپراتوری هنوز انتخاب نشده است"/>
                                                                                    <ComboBox ItemsSource="{Binding FilteredList}" Grid.Column="2"
																				    DisplayMemberPath="Text"
																				    SelectedItem="{Binding SelectedItem}"
																				    IsTextSearchEnabled="True"
																				    IsEditable="True"
																				    x:Name="cmb"/>
                                                                                </DockPanel>
                                                                            </DataTemplate>
                                                                        </ItemsControl.ItemTemplate>
                                                                        <ItemsControl.ItemsPanel>
                                                                            <ItemsPanelTemplate>
                                                                                <WrapPanel/>
                                                                            </ItemsPanelTemplate>
                                                                        </ItemsControl.ItemsPanel>
                                                                    </ItemsControl>
                                                                    <Button Command="{Binding GuiltyOperators.AddCommand}">
                                                                        <Image Source="/Images/Fpc/Add16.png" Height="16"/>
                                                                    </Button>
                                                                </WrapPanel>
                                                            </ContentControl>
                                                            <Grid.Triggers>
                                                                <EventTrigger RoutedEvent="MouseEnter">
                                                                    <BeginStoryboard>
                                                                        <Storyboard Duration="0:0:0.2">
                                                                            <DoubleAnimation Storyboard.TargetName="deleteStoppageReportButton" Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" To="0.7"/>
                                                                        </Storyboard>
                                                                    </BeginStoryboard>
                                                                </EventTrigger>
                                                                <EventTrigger RoutedEvent="MouseLeave">
                                                                    <BeginStoryboard>
                                                                        <Storyboard Duration="0:0:0.7">
                                                                            <DoubleAnimation Storyboard.TargetName="deleteStoppageReportButton" Storyboard.TargetProperty="Opacity" Duration="0:0:0.7" To="0"/>
                                                                        </Storyboard>
                                                                    </BeginStoryboard>
                                                                </EventTrigger>
                                                            </Grid.Triggers>
                                                        </Grid>
                                                    </DataTemplate>
                                                </ItemsControl.ItemTemplate>
                                            </ItemsControl>
                                        </DockPanel>
                                    </Border>

                                    <DockPanel LastChildFill="False">
                                        <Button DockPanel.Dock="Right" Command="{Binding SaveCommand}">
                                            <DockPanel>
                                                <Image DockPanel.Dock="Left" Source="/Images/Fpc/Save16.png" Height="16"/>
                                                <TextBlock Text="ذخیره تغییرات و بستن" Foreground="Black"/>
                                            </DockPanel>
                                        </Button>
                                        <Button DockPanel.Dock="Right" Command="{Binding CloseCommand}">
                                            <DockPanel>
                                                <Image DockPanel.Dock="Left" Source="/Images/Fpc/Undo16.png" Height="16"/>
                                                <TextBlock Text="بستن" Foreground="Black"/>
                                            </DockPanel>
                                        </Button>
                                    </DockPanel>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Grid>

                    <!-- Month-Day-Hour Sliders-->
                    <ItemsControl Grid.Row="2" Grid.Column="1" SizeChanged="Grid_SizeChanged" ItemsSource="{Binding Months}" Name="ic_months">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <Grid customControls:GridHelper.ColumnCount="12" customControls:GridHelper.RowCount="1"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <ToggleButton BorderBrush="{StaticResource HeaderBorderBrush}" IsChecked="{Binding IsSelected}" SnapsToDevicePixels="True">
                                    <ToggleButton.Width>
                                        <MultiBinding Converter="{StaticResource aCrossBDividebByC}">
                                            <Binding Path="NumOfDays"/>
                                            <Binding ElementName="ic_months" Path="ActualWidth"/>
                                            <Binding ElementName="ppTable" Path="DataContext.DaysInYear"/>
                                        </MultiBinding>
                                    </ToggleButton.Width>
                                    <ToggleButton.Background>
                                        <SolidColorBrush Color="{Binding Data, Converter={StaticResource timeRollItemBackgroundConverter}, ConverterParameter=Month}"/>
                                    </ToggleButton.Background>
                                    <TextBlock Text="{Binding Text}" VerticalAlignment="Center" HorizontalAlignment="Center">
                                        <TextBlock.Foreground>
                                            <SolidColorBrush Color="{Binding Data, Converter={StaticResource timeRollItemForegroundConverter}, ConverterParameter=Month}"/>
                                        </TextBlock.Foreground>
                                    </TextBlock>
                                </ToggleButton>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                        <ItemsControl.ItemContainerStyle>
                            <Style TargetType="ContentPresenter">
                                <Setter Property="Grid.Column" Value="{Binding ColumnIndex}"/>
                            </Style>
                        </ItemsControl.ItemContainerStyle>
                        <ItemsControl.Template>
                            <ControlTemplate>
                                <Grid>
                                    <Border BorderThickness="0,1,0,0" BorderBrush="Silver" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" SnapsToDevicePixels="True">
                                        <ItemsPresenter/>
                                    </Border>
                                </Grid>
                            </ControlTemplate>
                        </ItemsControl.Template>
                    </ItemsControl>
                    <ItemsControl Grid.Row="3" Grid.Column="1" ItemsSource="{Binding Days}" ClipToBounds="True">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <Grid customControls:GridHelper.ColumnCount="{Binding DaysInYear}" customControls:GridHelper.RowCount="1"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Border Width="{Binding ElementName=ppTable, Path=DataContext.DayZoom}" SnapsToDevicePixels="True">
                                    <Border.Background>
                                        <SolidColorBrush Color="{Binding Data, Converter={StaticResource timeRollItemBackgroundConverter}, ConverterParameter=Day}"/>
                                    </Border.Background>
                                    <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center">
                                        <TextBlock Text="{Binding Text}" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="2,0">
                                            <TextBlock.Foreground>
                                                <SolidColorBrush Color="{Binding Data, Converter={StaticResource timeRollItemForegroundConverter}, ConverterParameter=Day}"/>
                                            </TextBlock.Foreground>
                                        </TextBlock>
                                        <TextBlock Text="{Binding DayOfWeek}" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="2,-4,2,2">
                                            <TextBlock.Foreground>
                                                <SolidColorBrush Color="{Binding Data, Converter={StaticResource timeRollItemForegroundConverter}, ConverterParameter=Day}"/>
                                            </TextBlock.Foreground>
                                        </TextBlock>
                                    </StackPanel>
                                </Border>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                        <ItemsControl.ItemContainerStyle>
                            <Style TargetType="ContentPresenter">
                                <Setter Property="Grid.Column" Value="{Binding ColumnIndex}"/>
                            </Style>
                        </ItemsControl.ItemContainerStyle>
                        <ItemsControl.Template>
                            <ControlTemplate>
                                <Grid>
                                    <Border BorderThickness="0,1,0,0" BorderBrush="Silver" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" SnapsToDevicePixels="True">
                                        <ItemsPresenter ClipToBounds="True"/>
                                    </Border>
                                    <Border Cursor="ScrollWE" BorderThickness="1" CornerRadius="2" HorizontalAlignment="Left" ClipToBounds="True"
									    Background="{StaticResource SlideWindowBackground}" BorderBrush="{StaticResource SlideWindowBorder}"
									    MouseDown="dayLittleWindowMouseDown" Name="daysLittleWindow" SnapsToDevicePixels="True">
                                        <Border.Width>
                                            <MultiBinding Converter="{StaticResource zoomMathDayLittleWindowWidth}">
                                                <Binding ElementName="ic_months" Path="ActualWidth"/>
                                                <Binding Path="DayZoom"/>
                                                <Binding Path="HourZoom"/>
                                            </MultiBinding>
                                        </Border.Width>
                                        <Border.Margin>
                                            <MultiBinding Converter="{StaticResource zoomMathDayLittleWindowMargin}">
                                                <Binding Path="HoursPassed"/>
                                                <Binding Path="DayZoom"/>
                                            </MultiBinding>
                                        </Border.Margin>
                                    </Border>
                                </Grid>
                            </ControlTemplate>
                        </ItemsControl.Template>
                    </ItemsControl>
                    <ItemsControl Grid.Row="4" Grid.Column="1" ItemsSource="{Binding Hours}" Name="ic_hours" ClipToBounds="True">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <Canvas ClipToBounds="True"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Border Height="40" Width="{Binding ElementName=ppTable, Path=DataContext.HourZoom}" ClipToBounds="True"
									    BorderThickness="1,0,0,0" BorderBrush="{StaticResource HeaderBorderBrush}" SnapsToDevicePixels="True">
                                    <Border.Margin>
                                        <MultiBinding Converter="{StaticResource gridColumnToMargin}">
                                            <Binding Path="ColumnIndex"/>
                                            <Binding ElementName="ppTable" Path="DataContext.HourZoom"/>
                                        </MultiBinding>
                                    </Border.Margin>
                                    <Border.Background>
                                        <SolidColorBrush Color="{Binding Data, Converter={StaticResource timeRollItemBackgroundConverter}, ConverterParameter=Hour}"/>
                                    </Border.Background>
                                    <StackPanel VerticalAlignment="Stretch" HorizontalAlignment="Left">
                                        <StackPanel.LayoutTransform>
                                            <RotateTransform Angle="270"/>
                                        </StackPanel.LayoutTransform>
                                        <TextBlock Text="{Binding Text}" TextAlignment="Left" Margin="2,0,0,0">
                                            <TextBlock.Foreground>
                                                <SolidColorBrush Color="{Binding Data, Converter={StaticResource timeRollItemForegroundConverter}, ConverterParameter=Hour}"/>
                                            </TextBlock.Foreground>
                                        </TextBlock>
                                        <TextBlock Text="{Binding DateText}" TextAlignment="Left" Foreground="Silver" Margin="5,0,0,0"/>
                                    </StackPanel>
                                </Border>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                        <ItemsControl.Template>
                            <ControlTemplate>
                                <Border BorderThickness="0,1,0,0" ClipToBounds="True" BorderBrush="Silver" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" SnapsToDevicePixels="True">
                                    <ItemsPresenter ClipToBounds="True" MouseDown="hoursBarMouseDown">
                                        <ItemsPresenter.Margin>
                                            <MultiBinding Converter="{StaticResource hoursPanelMarginConverter}">
                                                <Binding Path="HoursPassed"/>
                                                <Binding Path="HourZoom"/>
                                                <Binding Path="SelectedMonth.DaysFromStartOfYear"/>
                                            </MultiBinding>
                                        </ItemsPresenter.Margin>
                                    </ItemsPresenter>
                                </Border>
                            </ControlTemplate>
                        </ItemsControl.Template>
                    </ItemsControl>
                    <!-- Shifts and Break hours -->
                    <ItemsControl Grid.Row="4" Grid.RowSpan="2" Grid.Column="1" ItemsSource="{Binding ShiftsAndBreaks}" 
                          Name="ic_shiftsAndBreaks" ClipToBounds="True" IsHitTestVisible="False">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <Canvas ClipToBounds="True"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <DockPanel ClipToBounds="True" SnapsToDevicePixels="True">
                                    <DockPanel.Width>
                                        <MultiBinding Converter="{StaticResource shiftsAndBreaksWidth}">
                                            <Binding Path="StartSeconds"/>
                                            <Binding Path="EndSeconds"/>
                                            <Binding ElementName="ppTable" Path="DataContext.HourZoom"/>
                                        </MultiBinding>
                                    </DockPanel.Width>
                                    <DockPanel.Margin>
                                        <MultiBinding Converter="{StaticResource shiftsAndBreaksMargin}">
                                            <Binding Path="StartSeconds"/>
                                            <Binding ElementName="ppTable" Path="DataContext.HourZoom"/>
                                        </MultiBinding>
                                    </DockPanel.Margin>
                                    <Border DockPanel.Dock="Top" Height="40" Background="{Binding Color, Converter={StaticResource colorFixer}}"/>
                                    <Border Opacity="0.2" Background="{Binding Color, Converter={StaticResource colorFixer}}"
                                    BorderBrush="#3FFF" BorderThickness="1,0,0,0"/>
                                </DockPanel>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                        <ItemsControl.Template>
                            <ControlTemplate>
                                <Border ClipToBounds="True" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" SnapsToDevicePixels="True" IsHitTestVisible="False">
                                    <ItemsPresenter ClipToBounds="True">
                                        <ItemsPresenter.Margin>
                                            <MultiBinding Converter="{StaticResource hoursPanelMarginConverter}">
                                                <Binding Path="HoursPassed"/>
                                                <Binding Path="HourZoom"/>
                                                <Binding Path="SelectedMonth.DaysFromStartOfYear"/>
                                            </MultiBinding>
                                        </ItemsPresenter.Margin>
                                    </ItemsPresenter>
                                </Border>
                            </ControlTemplate>
                        </ItemsControl.Template>
                    </ItemsControl>


                    <!--Activities (first column of process report) -->
                    <DockPanel Grid.Row="5" Grid.ColumnSpan="2" Visibility="{Binding SelectedBlock, Converter={StaticResource nullToInvisibilityConverter}}">
                        <Border DockPanel.Dock="Top" Width="{StaticResource StationOrActivityHeaderWidth}" HorizontalAlignment="Left" Margin="0,2,0,0" Background="#023" Height="20">
                            <TextBlock Text="مدت زمان" Foreground="Silver" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <Border DockPanel.Dock="Top" Width="{StaticResource StationOrActivityHeaderWidth}" HorizontalAlignment="Left" Margin="0,2,0,0" Background="#023" Height="20">
                            <TextBlock Text="مقدار هدف ایستگاه" Foreground="Silver" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <Border DockPanel.Dock="Top" Width="{StaticResource StationOrActivityHeaderWidth}" HorizontalAlignment="Left" Margin="0,2,0,0" Background="#023" Height="20">
                            <TextBlock Text="خروجی سالم ایستگاه" Foreground="Silver" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>

                        <!-- Activities itemsControl -->
                        <ItemsControl ItemsSource="{Binding SelectedBlock.BlockReport.SSAList}" x:Name="ic_activities" IsHitTestVisible="False">
                            <ItemsControl.ItemTemplate>
                                <!--first column (SSA List) ItemTemplate-->
                                <DataTemplate>
                                    <DockPanel VerticalAlignment="Stretch" Height="52">
                                        <Border Background="{StaticResource HeaderBackground}" DockPanel.Dock="Left" Width="{StaticResource StationOrActivityHeaderWidth}" BorderBrush="{StaticResource HeaderBorderBrush}" BorderThickness="1,0,1,1">
                                            <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                                                <TextBlock TextWrapping="NoWrap" Text="{Binding Activity.Name}"  Foreground="Silver" HorizontalAlignment="Center"/>
                                                <WrapPanel HorizontalAlignment="Center">
                                                    <Image Source="/Images/PP/CycleTime.png" Height="16"/>
                                                    <TextBlock TextWrapping="Wrap" Text="{Binding CycleTime, Converter={StaticResource cycleTimeToStringConverter}}" Foreground="Silver"/>
                                                </WrapPanel>
                                                <WrapPanel HorizontalAlignment="Center">
                                                    <Image Source="/Images/PP/ManHour.png" Height="16"/>
                                                    <TextBlock TextWrapping="Wrap" Text="{Binding ManHour}" Foreground="Silver"/>
                                                </WrapPanel>
                                            </StackPanel>
                                        </Border>
                                        <Border BorderThickness="0,0,0,1">
                                            <Border.BorderBrush>
                                                <LinearGradientBrush SpreadMethod="Repeat" StartPoint="0,0" EndPoint="4,0" MappingMode="Absolute">
                                                    <GradientStop Color="Transparent" Offset="0"/>
                                                    <GradientStop Color="Transparent" Offset="0.39"/>
                                                    <GradientStop Color="{StaticResource HighlightColor}" Offset="0.4"/>
                                                    <GradientStop Color="{StaticResource HighlightColor}" Offset="1"/>
                                                </LinearGradientBrush>
                                            </Border.BorderBrush>
                                        </Border>
                                    </DockPanel>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>

                            <!--Activities Template-->
                            <ItemsControl.Template>
                                <ControlTemplate>
                                    <Border BorderThickness="0,2" BorderBrush="{StaticResource HeaderBorderBrush}">
                                        <ScrollViewer Focusable="False" x:Name="sv_activities" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Hidden">
                                            <ItemsPresenter/>
                                        </ScrollViewer>
                                    </Border>
                                </ControlTemplate>
                            </ItemsControl.Template>
                        </ItemsControl>
                    </DockPanel>
                    <!--RowsOfActivity ItemsControl & Durations, TP, G1 (other columns of process report) -->
                    <DockPanel Grid.Row="5" Grid.Column="1" Visibility="{Binding SelectedBlock, Converter={StaticResource nullToInvisibilityConverter}}">
                        <!-- & Durations, TPs, G1s -->
                        <ItemsControl DockPanel.Dock="Top" Height="59" ItemsSource="{Binding SelectedBlock.BlockReport.TaskReports}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <!-- One Duration, TP, G1  -->
                                    <Canvas>
                                        <Canvas.Margin>
                                            <MultiBinding Converter="{StaticResource ppTaskBorderMarginConverter}">
                                                <Binding Path="StartDateTime"/>
                                                <Binding ElementName="ppTable" Path="DataContext.HourZoom"/>
                                            </MultiBinding>
                                        </Canvas.Margin>
                                        <Border Background="#023" Height="59" BorderBrush="{StaticResource HeaderBorderBrush}" BorderThickness="1,0,0,0">
                                            <Border.Width>
                                                <MultiBinding Converter="{StaticResource ppTaskBorderWidthConverter}">
                                                    <Binding Path="Duration"/>
                                                    <Binding ElementName="ppTable" Path="DataContext.HourZoom"/>
                                                </MultiBinding>
                                            </Border.Width>
                                            <StackPanel>
                                                <TextBlock FlowDirection="LeftToRight" Text="{Binding DurationSeconds,Converter={StaticResource secondsToStringConverter}}" Height="19" Foreground="Silver" TextAlignment="Center" HorizontalAlignment="Center"/>
                                                <TextBox Text="{Binding TargetPoint}" Margin="0,2,0,0" IsReadOnly="{Binding CanUserEditTaskTPAndG1, Converter={StaticResource inverter}}" Height="19" Foreground="Silver" TextAlignment="Center" HorizontalAlignment="Stretch">
                                                    <TextBox.Background>
                                                        <SolidColorBrush Color="Transparent" x:Name="bkgtp"/>
                                                    </TextBox.Background>
                                                    <TextBox.Triggers>
                                                        <EventTrigger RoutedEvent="MouseEnter">
                                                            <BeginStoryboard>
                                                                <Storyboard Duration="0:0:0.2">
                                                                    <ColorAnimation Storyboard.TargetName="bkgtp" Storyboard.TargetProperty="Color" Duration="0:0:0.2" To="DimGray"/>
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </EventTrigger>
                                                        <EventTrigger RoutedEvent="MouseLeave">
                                                            <BeginStoryboard>
                                                                <Storyboard Duration="0:0:0.7">
                                                                    <ColorAnimation Storyboard.TargetName="bkgtp" Storyboard.TargetProperty="Color" Duration="0:0:0.7" To="Transparent"/>
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </EventTrigger>
                                                    </TextBox.Triggers>
                                                </TextBox>
                                                <TextBox Text="{Binding ProducedG1}" Margin="0,2,0,0" IsReadOnly="{Binding CanUserEditTaskTPAndG1, Converter={StaticResource inverter}}" Height="19" Foreground="Silver" TextAlignment="Center" HorizontalAlignment="Stretch">
                                                    <TextBox.Background>
                                                        <SolidColorBrush Color="Transparent" x:Name="bkgg1"/>
                                                    </TextBox.Background>
                                                    <TextBox.Triggers>
                                                        <EventTrigger RoutedEvent="MouseEnter">
                                                            <BeginStoryboard>
                                                                <Storyboard Duration="0:0:0.2">
                                                                    <ColorAnimation Storyboard.TargetName="bkgg1" Storyboard.TargetProperty="Color" Duration="0:0:0.2" To="DimGray"/>
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </EventTrigger>
                                                        <EventTrigger RoutedEvent="MouseLeave">
                                                            <BeginStoryboard>
                                                                <Storyboard Duration="0:0:0.7">
                                                                    <ColorAnimation Storyboard.TargetName="bkgg1" Storyboard.TargetProperty="Color" Duration="0:0:0.7" To="Transparent"/>
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </EventTrigger>
                                                    </TextBox.Triggers>
                                                </TextBox>
                                            </StackPanel>
                                        </Border>
                                    </Canvas>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                            <!-- Durations ItemsPanel -->
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <Canvas/>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <!-- Durations Template -->
                            <ItemsControl.Template>
                                <ControlTemplate>
                                    <ItemsPresenter>
                                        <ItemsPresenter.Margin>
                                            <MultiBinding Converter="{StaticResource hoursPanelMarginConverter}">
                                                <Binding Path="HoursPassed"/>
                                                <Binding Path="HourZoom"/>
                                                <Binding Path="SelectedMonth.DaysFromStartOfYear"/>
                                            </MultiBinding>
                                        </ItemsPresenter.Margin>
                                    </ItemsPresenter>
                                </ControlTemplate>
                            </ItemsControl.Template>
                        </ItemsControl>

                        <!--RowsOfActivity ItemsControl-->
                        <Grid>
                            <ItemsControl ItemsSource="{Binding SelectedBlock.BlockReport.ProcessReportRows}" x:Name="ic_activitiesRows">

                                <!-- ==================================== OneRowOfActivity ========================================= -->
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate DataType="{x:Type vm:ProcessReportRowVm}">
                                        <ItemsControl ItemsSource="{Binding ProcessReportCells}" Height="52">
                                            <ItemsControl.ItemTemplate>

                                                <!-- ============================ OneProcessReport Cell's Border ============================== -->
                                                <DataTemplate DataType="{x:Type vm:ProcessReportCellVm}">
                                                    <Canvas>
                                                        <Canvas.Margin>
                                                            <MultiBinding Converter="{StaticResource ppTaskBorderMarginConverter}">
                                                                <Binding Path="StartDateTime"/>
                                                                <Binding ElementName="ppTable" Path="DataContext.HourZoom"/>
                                                            </MultiBinding>
                                                        </Canvas.Margin>
                                                        <Border x:Name="border" Loaded="PRC_Loaded" Unloaded="PRC_Unloaded" BorderBrush="Black"
														    BorderThickness="1" CornerRadius="2" VerticalAlignment="Stretch" Height="50" Margin="0,1">
                                                            <Border.Width>
                                                                <MultiBinding Converter="{StaticResource ppTaskBorderWidthConverter}">
                                                                    <Binding Path="Duration"/>
                                                                    <Binding ElementName="ppTable" Path="DataContext.HourZoom"/>
                                                                </MultiBinding>
                                                            </Border.Width>
                                                            <Border.ToolTip>
                                                                <TextBlock Text="???"/>
                                                            </Border.ToolTip>
                                                            <!-- cell is in acquiring state by default -->
                                                            <Control Name="innerControl"/>
                                                            <Border.Effect>
                                                                <DropShadowEffect Opacity="0.8" ShadowDepth="0"/>
                                                            </Border.Effect>
                                                            <Border.Background>
                                                                <LinearGradientBrush x:Name="acquiringHash" SpreadMethod="Repeat" StartPoint="0,0" EndPoint="10,10" MappingMode="Absolute">
                                                                    <GradientStop Color="#999" Offset="0"/>
                                                                    <GradientStop Color="#999" Offset="0.49"/>
                                                                    <GradientStop Color="#CCC" Offset="0.5"/>
                                                                    <GradientStop Color="#CCC" Offset="1"/>
                                                                </LinearGradientBrush>
                                                            </Border.Background>
                                                            <Border.ContextMenu>
                                                                <ContextMenu FlowDirection="RightToLeft">
                                                                    <MenuItem Header="ریست نمودن گزارش فعالیت" Command="{Binding DeleteProcessReportCommand}"/>
                                                                    <MenuItem Header="حذف گزارش بازه (گزارش فعالیتهای این بازه)" Command="{Binding DeleteTaskReportCommand}"/>
                                                                </ContextMenu>
                                                            </Border.ContextMenu>
                                                            <Border.Triggers>
                                                                <EventTrigger RoutedEvent="Loaded">
                                                                    <BeginStoryboard>
                                                                        <Storyboard Duration="0:0:0.4" RepeatBehavior="Forever">
                                                                            <ParallelTimeline Duration="0:0:0.4">
                                                                                <PointAnimation Storyboard.TargetName="acquiringHash"  Storyboard.TargetProperty="StartPoint" From="0,0" To="10,10" Duration="0:0:0.4"/>
                                                                                <PointAnimation Storyboard.TargetName="acquiringHash"  Storyboard.TargetProperty="EndPoint" From="10,10" To="20,20" Duration="0:0:0.4"/>
                                                                            </ParallelTimeline>
                                                                        </Storyboard>
                                                                    </BeginStoryboard>
                                                                </EventTrigger>
                                                            </Border.Triggers>
                                                        </Border>
                                                    </Canvas>

                                                    <!-- ProcessReport Cell Template-->
                                                    <DataTemplate.Triggers>
                                                        <!-- When cell is in normal state -->
                                                        <DataTrigger Binding="{Binding ViewMode}" Value="Simple">
                                                            <Setter TargetName="border" Property="Background">
                                                                <Setter.Value>
                                                                    <SolidColorBrush Color="Silver"/>
                                                                </Setter.Value>
                                                            </Setter>
                                                            <Setter TargetName="innerControl" Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type Control}">
                                                                        <Grid>
                                                                            <DockPanel ClipToBounds="True" Height="50">
                                                                                <TextBlock DockPanel.Dock="Top" Text="{Binding ProcessReportTargetPoint}" FontWeight="Bold"  TextAlignment="Center" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                                                                <TextBlock DockPanel.Dock="Bottom" Text="{Binding Duration, Converter={StaticResource timeSpanToStringConverter}}"  FlowDirection="LeftToRight" FontWeight="Bold"  TextAlignment="Center" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                                                                <Grid Panel.ZIndex="-1">
                                                                                    <Grid.ColumnDefinitions>
                                                                                        <ColumnDefinition Width="{Binding ProducedG1, Converter={StaticResource portionToStarConverter}}"/>
                                                                                        <ColumnDefinition Width="{Binding DefectionCount, Converter={StaticResource portionToStarConverter}}"/>
                                                                                        <ColumnDefinition Width="{Binding StoppageCount, Converter={StaticResource portionToStarConverter}}"/>
                                                                                    </Grid.ColumnDefinitions>
                                                                                    <Border Background="#4AF" BorderBrush="Black" BorderThickness="1">
                                                                                        <TextBlock Text="{Binding ProducedG1}" VerticalAlignment="Center" HorizontalAlignment="Center" ClipToBounds="True"/>
                                                                                    </Border>
                                                                                    <Border Background="#F55" BorderBrush="Black" BorderThickness="1" Grid.Column="1">
                                                                                        <TextBlock Text="{Binding DefectionCount}" VerticalAlignment="Center" HorizontalAlignment="Center" ClipToBounds="True"/>
                                                                                    </Border>
                                                                                    <Border Background="#FD5" BorderBrush="Black" BorderThickness="1" Grid.Column="2">
                                                                                        <TextBlock Text="{Binding StoppageCount}" VerticalAlignment="Center" HorizontalAlignment="Center" ClipToBounds="True"/>
                                                                                    </Border>
                                                                                </Grid>
                                                                            </DockPanel>
                                                                            <Button x:Name="button" Opacity="0" Command="{Binding OpenCommand}">
                                                                                <Image Source="/Images/PP/ReportEdit.png" Width="16"/>
                                                                                <Button.ToolTip>
                                                                                    <ToolTip>ویرایش گزارش</ToolTip>
                                                                                </Button.ToolTip>
                                                                            </Button>
                                                                            <Grid.Triggers>
                                                                                <EventTrigger RoutedEvent="MouseEnter">
                                                                                    <BeginStoryboard>
                                                                                        <Storyboard Duration="0:0:0.2">
                                                                                            <DoubleAnimation Storyboard.TargetName="button" Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" To="0.8"/>
                                                                                        </Storyboard>
                                                                                    </BeginStoryboard>
                                                                                </EventTrigger>
                                                                                <EventTrigger RoutedEvent="MouseLeave">
                                                                                    <BeginStoryboard>
                                                                                        <Storyboard Duration="0:0:0.7">
                                                                                            <DoubleAnimation Storyboard.TargetName="button" Storyboard.TargetProperty="Opacity" Duration="0:0:0.7" To="0"/>
                                                                                        </Storyboard>
                                                                                    </BeginStoryboard>
                                                                                </EventTrigger>
                                                                            </Grid.Triggers>
                                                                        </Grid>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </DataTrigger>
                                                        <!-- When cell is empty -->
                                                        <DataTrigger Binding="{Binding ViewMode}" Value="Empty">
                                                            <Setter TargetName="border" Property="Background">
                                                                <Setter.Value>
                                                                    <SolidColorBrush Color="#2FEBA3"/>
                                                                </Setter.Value>
                                                            </Setter>
                                                            <Setter TargetName="innerControl" Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type Control}">
                                                                        <Grid>
                                                                            <DockPanel ClipToBounds="True" Height="50">
                                                                                <TextBlock DockPanel.Dock="Top" Text="{Binding ProcessReportTargetPoint}" FontWeight="Bold"  TextAlignment="Center" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                                                                <TextBlock DockPanel.Dock="Bottom" Text="{Binding Duration, Converter={StaticResource timeSpanToStringConverter}}" FlowDirection="LeftToRight" FontWeight="Bold"  TextAlignment="Center" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                                                                <Border Background="#088" BorderBrush="Black" BorderThickness="1">
                                                                                    <TextBlock Text="فاقد گزارش"/>
                                                                                </Border>
                                                                            </DockPanel>
                                                                            <Border Background="#5555"/>
                                                                            <!--Button x:Name="button" Opacity="0" Command="{Binding OpenCommand}">
                                                                                <Image Source="/Images/PP/ReportAdd.png" Width="16"/>
                                                                                <Button.ToolTip>
                                                                                    <ToolTip>ایجاد بازه برای گزارش ایستگاه جدید</ToolTip>
                                                                                </Button.ToolTip>
                                                                            </-->
                                                                            <Grid.Triggers>
                                                                                <EventTrigger RoutedEvent="MouseEnter">
                                                                                    <BeginStoryboard>
                                                                                        <Storyboard Duration="0:0:0.2">
                                                                                            <DoubleAnimation Storyboard.TargetName="button" Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" To="0.8"/>
                                                                                        </Storyboard>
                                                                                    </BeginStoryboard>
                                                                                </EventTrigger>
                                                                                <EventTrigger RoutedEvent="MouseLeave">
                                                                                    <BeginStoryboard>
                                                                                        <Storyboard Duration="0:0:0.7">
                                                                                            <DoubleAnimation Storyboard.TargetName="button" Storyboard.TargetProperty="Opacity" Duration="0:0:0.7" To="0"/>
                                                                                        </Storyboard>
                                                                                    </BeginStoryboard>
                                                                                </EventTrigger>
                                                                            </Grid.Triggers>
                                                                        </Grid>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </DataTrigger>
                                                        <!-- When is Selected -->
                                                        <DataTrigger Binding="{Binding IsSelected}" Value="True">
                                                            <Setter TargetName="innerControl" Property="Panel.ZIndex" Value="999"/>
                                                            <Setter TargetName="innerControl" Property="Effect">
                                                                <Setter.Value>
                                                                    <DropShadowEffect BlurRadius="16" Opacity="1" ShadowDepth="0" Color="Yellow"/>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </DataTrigger>
                                                    </DataTemplate.Triggers>
                                                </DataTemplate>
                                            </ItemsControl.ItemTemplate>

                                            <!-- cells ItemsPanel -->
                                            <ItemsControl.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <Canvas/>
                                                </ItemsPanelTemplate>
                                            </ItemsControl.ItemsPanel>
                                        </ItemsControl>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>

                                <!--RowsOfActivity Template-->
                                <ItemsControl.Template>
                                    <ControlTemplate>
                                        <ScrollViewer Focusable="False" DockPanel.Dock="Right"
											    ScrollChanged="detailedReportsScrolled"
											    Padding="{TemplateBinding Control.Padding}"
											    HorizontalScrollBarVisibility="Hidden"
											    VerticalScrollBarVisibility="Auto">
                                            <ItemsPresenter>
                                                <ItemsPresenter.Margin>
                                                    <MultiBinding Converter="{StaticResource hoursPanelMarginConverter}" ConverterParameter="Top2">
                                                        <Binding Path="HoursPassed"/>
                                                        <Binding Path="HourZoom"/>
                                                        <Binding Path="SelectedMonth.DaysFromStartOfYear"/>
                                                    </MultiBinding>
                                                </ItemsPresenter.Margin>
                                            </ItemsPresenter>
                                        </ScrollViewer>
                                    </ControlTemplate>
                                </ItemsControl.Template>

                            </ItemsControl>
                            <!--RowsOfActivity ExceptionTooltips-->
                            <ItemsControl ItemsSource="{Binding SelectedBlock.ProcessReportRows}">

                                <!-- ==================================== OneRowOfActivity Balloons ========================================= -->
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate DataType="{x:Type vm:ProcessReportRowVm}">
                                        <ItemsControl ItemsSource="{Binding ProcessReportCells}" Height="52" ItemTemplate="{StaticResource balloonTemplate}">
                                            <!-- Tasks ItemsPanel -->
                                            <ItemsControl.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <Canvas/>
                                                </ItemsPanelTemplate>
                                            </ItemsControl.ItemsPanel>
                                        </ItemsControl>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>

                                <!--RowsOfActivity Template-->
                                <ItemsControl.Template>
                                    <ControlTemplate>
                                        <ItemsPresenter>
                                            <ItemsPresenter.Margin>
                                                <MultiBinding Converter="{StaticResource mainPanelMarginConverter}" ConverterParameter="Top2">
                                                    <Binding Path="HoursPassed"/>
                                                    <Binding Path="HourZoom"/>
                                                    <Binding Path="SelectedMonth.DaysFromStartOfYear"/>
                                                    <Binding Path="VerticalScreenOffset"/>
                                                </MultiBinding>
                                            </ItemsPresenter.Margin>
                                        </ItemsPresenter>
                                    </ControlTemplate>
                                </ItemsControl.Template>

                            </ItemsControl>
                        </Grid>
                    </DockPanel>
                  
                    <!--Stations-->
                    <ItemsControl Grid.Row="6" Grid.ColumnSpan="2" ItemsSource="{Binding PPItems}" Name="ic_stations" IsHitTestVisible="False">
                        <!--PPTable ItemTemplate-->
                        <ItemsControl.ItemTemplate>
                            <DataTemplate DataType="{x:Type vm:PPStationVm}">
                                <DockPanel VerticalAlignment="Stretch" Height="42">
                                    <Border Background="{StaticResource HeaderBackground}" DockPanel.Dock="Left" Width="{StaticResource StationOrActivityHeaderWidth}"
									    BorderBrush="{StaticResource HeaderBorderBrush}" BorderThickness="1,0,1,1">
                                        <TextBlock TextWrapping="Wrap" Text="{Binding Text}" Foreground="Silver" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Border>
                                    <Border BorderThickness="0,0,0,1">
                                        <Border.BorderBrush>
                                            <LinearGradientBrush SpreadMethod="Repeat" StartPoint="0,0" EndPoint="16,0" MappingMode="Absolute">
                                                <GradientStop Color="Transparent" Offset="0"/>
                                                <GradientStop Color="Transparent" Offset="0.39"/>
                                                <GradientStop Color="{StaticResource HighlightColor}" Offset="0.4"/>
                                                <GradientStop Color="{StaticResource HighlightColor}" Offset="1"/>
                                            </LinearGradientBrush>
                                        </Border.BorderBrush>
                                    </Border>
                                </DockPanel>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>

                        <!--Stations Template-->
                        <ItemsControl.Template>
                            <ControlTemplate>
                                <Border BorderThickness="0,2" BorderBrush="{StaticResource HeaderBorderBrush}">
                                    <ScrollViewer Focusable="False" Name="sv_stations"
										      HorizontalScrollBarVisibility="Disabled"
										      VerticalScrollBarVisibility="Hidden">
                                        <ItemsPresenter/>
                                    </ScrollViewer>
                                </Border>
                            </ControlTemplate>
                        </ItemsControl.Template>
                    </ItemsControl>
                    <!-- [task] -->
                    <!--RowsOfItems(Blocks,NPTs) ItemsControl-->
                    <ItemsControl Grid.Row="6" Grid.Column="1" ItemsSource="{Binding PPItems}">

                        <!-- ==================================== OneRow Of Item(Blocks,NPTs) ========================================= -->
                        <!-- [task] -->
                        <ItemsControl.ItemTemplate>
                            <DataTemplate DataType="{x:Type vm:PPStationVm}">
                                <Canvas Height="42">
                                    <!-- [task] -->
                                    <!-- Blocks -->
                                    <ItemsControl ItemsSource="{Binding Blocks}" Height="42">
                                        <!-- [task] -->
                                        <ItemsControl.ItemTemplate>

                                            <!-- [task] -->
                                            <!-- =================================== OneBlock ========================================= -->
                                            <DataTemplate DataType="{x:Type vm:BlockVm}">
                                                <Canvas>
                                                    <Canvas.Margin>
                                                        <MultiBinding Converter="{StaticResource ppTaskBorderMarginConverter}">
                                                            <Binding Path="StartDateTime"/>
                                                            <Binding ElementName="ppTable" Path="DataContext.HourZoom"/>
                                                        </MultiBinding>
                                                    </Canvas.Margin>
                                                    <!-- each item's load and unload event is set here -->
                                                    <Border x:Name="border" Loaded="PPItem_Loaded" Unloaded="PPItem_Unloaded" BorderBrush="Black"
													    BorderThickness="1" CornerRadius="2" VerticalAlignment="Stretch" Height="40" Margin="0,1">
                                                        <Border.Width>
                                                            <MultiBinding Converter="{StaticResource ppTaskBorderWidthConverter}">
                                                                <Binding Path="Duration"/>
                                                                <Binding ElementName="ppTable" Path="DataContext.HourZoom"/>
                                                            </MultiBinding>
                                                        </Border.Width>
                                                        <Border.ContextMenu>
                                                            <ContextMenu FlowDirection="RightToLeft">
                                                                <MenuItem Header="گزارش" Command="{Binding EditReportCommand}"/>
                                                                <MenuItem Header="بارگذاری مجدد" Command="{Binding ReloadBlockCommand}"/>
                                                                <Separator/>
                                                                <MenuItem Header="ویرایش Task" Command="{Binding EditItemCommand}"/>
                                                                <MenuItem Header="افزودن Task به ویرایشگر" Command="{Binding AddBlockToEditorCommand}"/>
                                                                <MenuItem Header="حذف Task" Command="{Binding DeleteItemCommand}"/>
                                                                <Separator/>
                                                                <MenuItem Header="ویرایش Job" Command="{Binding EditJobCommand}"/>
                                                                <MenuItem Header="افزودن Job به ویرایشگر" Command="{Binding AddJobToEditorCommand}"/>
                                                                <MenuItem Header="حذف Job" Command="{Binding DeleteJobCommand}"/>
                                                            </ContextMenu>
                                                        </Border.ContextMenu>
                                                        <Border.Effect>
                                                            <DropShadowEffect Opacity="0.8" ShadowDepth="0" Color="{Binding Message.HasException, Converter={StaticResource hasErrorToShadowColor}}"/>
                                                        </Border.Effect>
                                                        <!-- loading effect bkg -->
                                                        <Border.Background>
                                                            <LinearGradientBrush x:Name="acquiringHash" SpreadMethod="Repeat" StartPoint="0,0" EndPoint="10,10" MappingMode="Absolute">
                                                                <GradientStop Color="#999" Offset="0"/>
                                                                <GradientStop Color="#999" Offset="0.49"/>
                                                                <GradientStop Color="#CCC" Offset="0.5"/>
                                                                <GradientStop Color="#CCC" Offset="1"/>
                                                            </LinearGradientBrush>
                                                        </Border.Background>
                                                        <!-- loading effect animation -->
                                                        <Border.Triggers>
                                                            <EventTrigger RoutedEvent="Loaded">
                                                                <BeginStoryboard>
                                                                    <Storyboard Duration="0:0:0.4" RepeatBehavior="Forever">
                                                                        <ParallelTimeline Duration="0:0:0.4">
                                                                            <PointAnimation Storyboard.TargetName="acquiringHash" 
																		    Storyboard.TargetProperty="StartPoint"
																		    From="0,0" To="10,10" Duration="0:0:0.4"/>
                                                                            <PointAnimation Storyboard.TargetName="acquiringHash" 
																		    Storyboard.TargetProperty="EndPoint"
																		    From="10,10" To="20,20" Duration="0:0:0.4"/>
                                                                        </ParallelTimeline>
                                                                    </Storyboard>
                                                                </BeginStoryboard>
                                                            </EventTrigger>
                                                        </Border.Triggers>
                                                        <Grid>
                                                            <Control Name="innerControl" ClipToBounds="True"/>
                                                            <Control Background="Transparent">
                                                                <I:Interaction.Triggers>
                                                                    <I:EventTrigger EventName="MouseDoubleClick">
                                                                        <I:InvokeCommandAction Command="{Binding EditReportCommand}"/>
                                                                    </I:EventTrigger>
                                                                </I:Interaction.Triggers>
                                                            </Control>
                                                            <!-- Show Insert Setup Button -->
                                                            <Button Margin="-20,0" HorizontalAlignment="Left" ClipToBounds="False" 
																    Command="{Binding InsertSetupBefore}">
                                                                <Button.Visibility>
                                                                    <MultiBinding Converter="{StaticResource logicalAndToVisibility}">
                                                                        <Binding ElementName="ppTable" Path="DataContext.ShowInsertSetupButton"/>
                                                                        <Binding Path="CanAddSetupBefore"/>
                                                                    </MultiBinding>
                                                                </Button.Visibility>
                                                                <Button.Template>
                                                                    <ControlTemplate>
                                                                        <Grid Opacity="0.5" x:Name="grid">
                                                                            <Ellipse Height="40" Width="40" Fill="#222" Stroke="#444"/>
                                                                            <Ellipse x:Name="ellipse" Height="40" Width="40" Fill="White" Opacity="0"/>
                                                                            <Image Source="/Images/PP/SetupAdd.png" Width="16"/>
                                                                            <Grid.Triggers>
                                                                                <EventTrigger RoutedEvent="MouseEnter">
                                                                                    <BeginStoryboard>
                                                                                        <Storyboard Duration="0:0:0.2">
                                                                                            <DoubleAnimation Storyboard.TargetName="grid" Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" To="1"/>
                                                                                        </Storyboard>
                                                                                    </BeginStoryboard>
                                                                                </EventTrigger>
                                                                                <EventTrigger RoutedEvent="MouseLeave">
                                                                                    <BeginStoryboard>
                                                                                        <Storyboard Duration="0:0:0.3">
                                                                                            <DoubleAnimation Storyboard.TargetName="grid" Storyboard.TargetProperty="Opacity" Duration="0:0:0.3" To="0.5"/>
                                                                                        </Storyboard>
                                                                                    </BeginStoryboard>
                                                                                </EventTrigger>
                                                                                <EventTrigger RoutedEvent="MouseDown">
                                                                                    <BeginStoryboard>
                                                                                        <Storyboard>
                                                                                            <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ellipse" From="1" To="0" Duration="0:0:0.5"/>
                                                                                        </Storyboard>
                                                                                    </BeginStoryboard>
                                                                                </EventTrigger>
                                                                            </Grid.Triggers>
                                                                        </Grid>
                                                                    </ControlTemplate>
                                                                </Button.Template>
                                                                <Button.ToolTip>
                                                                    <StackPanel>
                                                                        <WrapPanel>
                                                                            <Image Source="/Images/PP/SetupAdd.png" Width="16"/>
                                                                            <TextBlock Text="درج خودکار آماده سازی جدید در اینجا" VerticalAlignment="Bottom"/>
                                                                        </WrapPanel>
                                                                        <TextBlock Foreground="DarkGray" FontSize="10" Text="آیتمهایی که در این ایستگاه بعد از این آماده سازی قرار دارند، بطور خودکار در زمان جابجا می شوند"/>
                                                                    </StackPanel>
                                                                </Button.ToolTip>
                                                                <Button.Effect>
                                                                    <DropShadowEffect Opacity="0.8" ShadowDepth="0" Color="{Binding Message.HasException, Converter={StaticResource hasErrorToShadowColor}}"/>
                                                                </Button.Effect>
                                                            </Button>
                                                        </Grid>
                                                    </Border>
                                                </Canvas>

                                                <!-- [task] -->
                                                <DataTemplate.Triggers>
                                                    <!-- [task] -->
                                                    <!-- Block Simple View (shows tasks inside-->
                                                    <DataTrigger Binding="{Binding ViewMode}" Value="Simple">
                                                        <Setter TargetName="border" Property="Background">
                                                            <Setter.Value>
                                                                <!-- block background color -->
                                                                <SolidColorBrush Color="{Binding ProductColor}"/>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Setter TargetName="innerControl" Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type Control}">
                                                                    <Grid TextBlock.Foreground="{Binding ForeColor}">
                                                                        <!-- block background texts -->
                                                                        <WrapPanel VerticalAlignment="Bottom">
                                                                            <DockPanel Visibility="{Binding IsReportFilled, Converter={StaticResource booleanToInvisibilityConverter}}" Background="#4FA4">
                                                                                <Image Source="/Images/PP/ReportWarning15.png" Height="15" DockPanel.Dock="Left"/>
                                                                                <TextBlock Text="{Binding ReportFillPercent}" Height="15" DockPanel.Dock="Left"/>
                                                                            </DockPanel>
                                                                            <Image Source="/Images/PP/Job.png" Margin="2,0" Height="16" Visibility="{Binding Job, Converter={StaticResource isNotNullToVisibility}}"/>
                                                                            <TextBlock Text="{Binding Code}" Height="16" Visibility="{Binding Job, Converter={StaticResource isNotNullToVisibility}}"/>
                                                                            <Image Source="/Images/PP/Rework.png" Margin="2,0" Height="15" Visibility="{Binding IsRework, Converter={StaticResource booleanToVisibilityConverter}}"/>
                                                                            <TextBlock Text="{Binding ProductCode}" TextWrapping="NoWrap" Height="15" Visibility="{Binding ElementName=ppTable, Path=DataContext.ShowProductCodes, Converter={StaticResource booleanToVisibilityConverter}}"/>
                                                                            <TextBlock Text="{Binding ProductName}" TextWrapping="NoWrap" Height="15" Visibility="{Binding ElementName=ppTable, Path=DataContext.ShowProductCodes, Converter={StaticResource booleanToInvisibilityConverter}}"/>
                                                                            <DockPanel VerticalAlignment="Top" Margin="2,0">
                                                                                <Image Source="/Images/PP/TargetPoint.png" Height="11" VerticalAlignment="Center" DockPanel.Dock="Left"/>
                                                                                <TextBlock Text="{Binding BlockTargetPoint}" Height="15"/>
                                                                            </DockPanel>
                                                                            <DockPanel VerticalAlignment="Top" Margin="2,0">
                                                                                <Image Source="/Images/PP/ProducedG1.png" Height="11" VerticalAlignment="Center" DockPanel.Dock="Left"/>
                                                                                <TextBlock Text="{Binding BlockProducedG1}" Height="15"/>
                                                                            </DockPanel>
                                                                        </WrapPanel>
                                                                        <!-- task list inside a block -->
                                                                        <ItemsControl ItemsSource="{Binding TaskList}">
                                                                            <ItemsControl.ItemTemplate>
                                                                                <DataTemplate>
                                                                                    <!-- task separator -->
                                                                                    <Border BorderBrush="Silver" BorderThickness="0,0,1,0" Margin="0,5">
                                                                                        <Border.Width>
                                                                                            <MultiBinding Converter="{StaticResource ppTaskBorderWidthConverter}">
                                                                                                <Binding Path="Duration"/>
                                                                                                <Binding ElementName="ppTable" Path="DataContext.HourZoom"/>
                                                                                            </MultiBinding>
                                                                                        </Border.Width>
                                                                                        <Border BorderBrush="WhiteSmoke" BorderThickness="0,0,1,0">
                                                                                            <Grid>
                                                                                                <!-- taskBackgroundTexts (TP, ProducedG1, OperCount) -->
                                                                                                <DockPanel VerticalAlignment="Top" x:Name="taskBackgroundTexts" ClipToBounds="True">
                                                                                                    <Image Source="/Images/PP/TargetPoint.png" Height="11" VerticalAlignment="Center" DockPanel.Dock="Left"/>
                                                                                                    <TextBlock Text="{Binding TaskTargetPoint}" Height="15" DockPanel.Dock="Left"/>
                                                                                                    <Image Source="/Images/PP/ProducedG1.png" Height="11" VerticalAlignment="Center" DockPanel.Dock="Left"/>
                                                                                                    <TextBlock Text="{Binding TaskProducedG1}" Height="15" DockPanel.Dock="Left"/>
                                                                                                    <Image Source="/Images/PP/Operator.png" Height="15" VerticalAlignment="Center" DockPanel.Dock="Left"/>
                                                                                                    <TextBlock Text="{Binding TaskOperatorCount}" Height="15" DockPanel.Dock="Left"/>
                                                                                                </DockPanel>
                                                                                                <!-- taskReports (inside each task) -->
                                                                                                <ItemsControl ItemsSource="{Binding TaskReports}" Opacity="0" x:Name="taskReports" Loaded="TaskReports_Loaded" Unloaded="TaskReports_Unloaded">
                                                                                                    <ItemsControl.Resources>
                                                                                                        <!-- taskReport holder -->
                                                                                                        <DataTemplate DataType="{x:Type vm:TaskReportHolderVm}">
                                                                                                            <Button Command="{Binding FocusCommand}">
                                                                                                                <Button.Width>
                                                                                                                    <MultiBinding Converter="{StaticResource ppTaskBorderWidthConverter}">
                                                                                                                        <Binding Path="Duration"/>
                                                                                                                        <Binding ElementName="ppTable" Path="DataContext.HourZoom"/>
                                                                                                                    </MultiBinding>
                                                                                                                </Button.Width>
                                                                                                                <StackPanel>
                                                                                                                    <Image Source="/Images/PP/Report.png" Width="16" x:Name="reportImage" HorizontalAlignment="Left"/>
                                                                                                                    <TextBlock Text="{Binding DurationSeconds, Converter={StaticResource secondsToStringConverter}}" HorizontalAlignment="Left"/>
                                                                                                                </StackPanel>
                                                                                                            </Button>
                                                                                                        </DataTemplate>
                                                                                                        <!-- taskReport -->
                                                                                                        <DataTemplate DataType="{x:Type vm:TaskReportVm}">
                                                                                                            <Grid>
                                                                                                                <Grid.Width>
                                                                                                                    <MultiBinding Converter="{StaticResource ppTaskBorderWidthConverter}">
                                                                                                                        <Binding Path="Duration"/>
                                                                                                                        <Binding ElementName="ppTable" Path="DataContext.HourZoom"/>
                                                                                                                    </MultiBinding>
                                                                                                                </Grid.Width>
                                                                                                                <Border BorderThickness="1,0" BorderBrush="Silver">
                                                                                                                    <Border.ToolTip>
                                                                                                                        <StackPanel>
                                                                                                                            <TextBlock Text="گزارش تولید"/>
                                                                                                                            <Image Source="/Images/PP/Report.png" Width="16"/>
                                                                                                                            <WrapPanel>
                                                                                                                                <TextBlock Text="مدت"/>
                                                                                                                                <TextBlock Text="{Binding DurationSeconds, Converter={StaticResource secondsToStringConverter}}"/>
                                                                                                                            </WrapPanel>
                                                                                                                            <WrapPanel>
                                                                                                                                <TextBlock Text="شروع"/>
                                                                                                                                <TextBlock Text="{Binding StartDate, Converter={StaticResource dateToLocalStringConverter}}"/>
                                                                                                                                <TextBlock Text="{Binding StartTime, Converter={StaticResource timeSpanToStringConverter}}"/>
                                                                                                                            </WrapPanel>
                                                                                                                            <WrapPanel>
                                                                                                                                <TextBlock Text="پایان"/>
                                                                                                                                <TextBlock Text="{Binding EndDate, Converter={StaticResource dateToLocalStringConverter}}"/>
                                                                                                                                <TextBlock Text="{Binding EndTime, Converter={StaticResource timeSpanToStringConverter}}"/>
                                                                                                                            </WrapPanel>
                                                                                                                            <WrapPanel>
                                                                                                                                <TextBlock Text="هدف"/>
                                                                                                                                <TextBlock Text="{Binding TargetPoint}"/>
                                                                                                                            </WrapPanel>
                                                                                                                            <WrapPanel>
                                                                                                                                <TextBlock Text="تولید سالم"/>
                                                                                                                                <TextBlock Text="{Binding ProducedG1}"/>
                                                                                                                            </WrapPanel>
                                                                                                                        </StackPanel>
                                                                                                                    </Border.ToolTip>
                                                                                                                    <StackPanel>
                                                                                                                        <Image Source="/Images/PP/Report.png" Width="16" x:Name="reportImage" HorizontalAlignment="Left"/>
                                                                                                                        <TextBlock Text="{Binding DurationSeconds, Converter={StaticResource secondsToStringConverter}}" HorizontalAlignment="Left"/>
                                                                                                                    </StackPanel>
                                                                                                                </Border>
                                                                                                                <!--Button Command="{Binding OpenCommand}">
                                                                                                                </-->
                                                                                                                <Button Height="20" Width="20" Command="{Binding DeleteCommand}" HorizontalAlignment="Right" VerticalAlignment="Top">
                                                                                                                    <Image Source="/Images/Fpc/Delete16.png" Width="16"/>
                                                                                                                </Button>
                                                                                                            </Grid>
                                                                                                        </DataTemplate>
                                                                                                    </ItemsControl.Resources>
                                                                                                    <ItemsControl.ItemsPanel>
                                                                                                        <ItemsPanelTemplate>
                                                                                                            <StackPanel Orientation="Horizontal"/>
                                                                                                        </ItemsPanelTemplate>
                                                                                                    </ItemsControl.ItemsPanel>
                                                                                                </ItemsControl>
                                                                                            </Grid>
                                                                                        </Border>
                                                                                    </Border>
                                                                                </DataTemplate>
                                                                            </ItemsControl.ItemTemplate>
                                                                            <ItemsControl.ItemsPanel>
                                                                                <ItemsPanelTemplate>
                                                                                    <StackPanel Orientation="Horizontal"/>
                                                                                </ItemsPanelTemplate>
                                                                            </ItemsControl.ItemsPanel>
                                                                        </ItemsControl>
                                                                    </Grid>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </DataTrigger>

                                                    <DataTrigger Binding="{Binding IsEditMode}" Value="True">
                                                        <Setter TargetName="border" Property="BorderBrush">
                                                            <Setter.Value>
                                                                <SolidColorBrush Color="Yellow"/>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </DataTrigger>

                                                    <!-- PPTask Report Detailed View -->
                                                    <DataTrigger Binding="{Binding ViewMode}" Value="Report">
                                                        <Setter TargetName="border" Property="Background">
                                                            <Setter.Value>
                                                                <!-- block background color -->
                                                                <SolidColorBrush Color="{Binding ProductColor}"/>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Setter TargetName="innerControl" Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type Control}">
                                                                    <Grid TextBlock.Foreground="{Binding ForeColor}">
                                                                        <!-- block background texts -->
                                                                        <WrapPanel VerticalAlignment="Bottom">
                                                                            <DockPanel Visibility="{Binding IsReportFilled, Converter={StaticResource booleanToInvisibilityConverter}}" Background="#4FA4">
                                                                                <Image Source="/Images/PP/ReportWarning15.png" Height="15" DockPanel.Dock="Left"/>
                                                                                <TextBlock Text="{Binding ReportFillPercent}" Height="15" DockPanel.Dock="Left"/>
                                                                            </DockPanel>
                                                                            <Image Source="/Images/PP/Job.png" Margin="2,0" Height="16" Visibility="{Binding Job, Converter={StaticResource isNotNullToVisibility}}"/>
                                                                            <TextBlock Text="{Binding Code}" Height="16" Visibility="{Binding Job, Converter={StaticResource isNotNullToVisibility}}"/>
                                                                            <Image Source="/Images/PP/Rework.png" Margin="2,0" Height="15" Visibility="{Binding IsRework, Converter={StaticResource booleanToVisibilityConverter}}"/>
                                                                            <TextBlock Text="{Binding ProductCode}" TextWrapping="NoWrap" Height="15" Visibility="{Binding ElementName=ppTable, Path=DataContext.ShowProductCodes, Converter={StaticResource booleanToVisibilityConverter}}"/>
                                                                            <TextBlock Text="{Binding ProductName}" TextWrapping="NoWrap" Height="15" Visibility="{Binding ElementName=ppTable, Path=DataContext.ShowProductCodes, Converter={StaticResource booleanToInvisibilityConverter}}"/>
                                                                            <DockPanel VerticalAlignment="Top" Margin="2,0">
                                                                                <Image Source="/Images/PP/TargetPoint.png" Height="11" VerticalAlignment="Center" DockPanel.Dock="Left"/>
                                                                                <TextBlock Text="{Binding BlockTargetPoint}" Height="15"/>
                                                                            </DockPanel>
                                                                            <DockPanel VerticalAlignment="Top" Margin="2,0">
                                                                                <Image Source="/Images/PP/ProducedG1.png" Height="11" VerticalAlignment="Center" DockPanel.Dock="Left"/>
                                                                                <TextBlock Text="{Binding BlockProducedG1}" Height="15"/>
                                                                            </DockPanel>
                                                                        </WrapPanel>
                                                                        <!-- task list inside a block -->
                                                                        <ItemsControl ItemsSource="{Binding TaskList}">
                                                                            <ItemsControl.ItemTemplate>
                                                                                <DataTemplate>
                                                                                    <!-- task separator -->
                                                                                    <Border BorderBrush="Silver" BorderThickness="0,0,1,0" Margin="0,5">
                                                                                        <Border.Width>
                                                                                            <MultiBinding Converter="{StaticResource ppTaskBorderWidthConverter}">
                                                                                                <Binding Path="Duration"/>
                                                                                                <Binding ElementName="ppTable" Path="DataContext.HourZoom"/>
                                                                                            </MultiBinding>
                                                                                        </Border.Width>
                                                                                        <Border BorderBrush="WhiteSmoke" BorderThickness="0,0,1,0">
                                                                                            <Grid>
                                                                                                <!-- taskBackgroundTexts (TP, ProducedG1, OperCount) -->
                                                                                                <DockPanel VerticalAlignment="Top" x:Name="taskBackgroundTexts" ClipToBounds="True">
                                                                                                    <Image Source="/Images/PP/TargetPoint.png" Height="11" VerticalAlignment="Center" DockPanel.Dock="Left"/>
                                                                                                    <TextBlock Text="{Binding TaskTargetPoint}" Height="15" DockPanel.Dock="Left"/>
                                                                                                    <Image Source="/Images/PP/ProducedG1.png" Height="11" VerticalAlignment="Center" DockPanel.Dock="Left"/>
                                                                                                    <TextBlock Text="{Binding TaskProducedG1}" Height="15" DockPanel.Dock="Left"/>
                                                                                                    <Image Source="/Images/PP/Operator.png" Height="15" VerticalAlignment="Center" DockPanel.Dock="Left"/>
                                                                                                    <TextBlock Text="{Binding TaskOperatorCount}" Height="15" DockPanel.Dock="Left"/>
                                                                                                </DockPanel>
                                                                                                <!-- taskReports (inside each task) -->
                                                                                                <ItemsControl ItemsSource="{Binding TaskReports}" Opacity="0" x:Name="taskReports" Loaded="TaskReports_Loaded" Unloaded="TaskReports_Unloaded">
                                                                                                    <ItemsControl.Resources>
                                                                                                        <!-- taskReport holder -->
                                                                                                        <DataTemplate DataType="{x:Type vm:TaskReportHolderVm}">
                                                                                                            <Button Command="{Binding FocusCommand}">
                                                                                                                <Button.Width>
                                                                                                                    <MultiBinding Converter="{StaticResource ppTaskBorderWidthConverter}">
                                                                                                                        <Binding Path="Duration"/>
                                                                                                                        <Binding ElementName="ppTable" Path="DataContext.HourZoom"/>
                                                                                                                    </MultiBinding>
                                                                                                                </Button.Width>
                                                                                                                <StackPanel>
                                                                                                                    <Image Source="/Images/PP/Report.png" Width="16" x:Name="reportImage" HorizontalAlignment="Left"/>
                                                                                                                    <TextBlock Text="{Binding DurationSeconds, Converter={StaticResource secondsToStringConverter}}" HorizontalAlignment="Left"/>
                                                                                                                </StackPanel>
                                                                                                            </Button>
                                                                                                        </DataTemplate>
                                                                                                        <!-- taskReport -->
                                                                                                        <DataTemplate DataType="{x:Type vm:TaskReportVm}">
                                                                                                            <Grid>
                                                                                                                <Grid.Width>
                                                                                                                    <MultiBinding Converter="{StaticResource ppTaskBorderWidthConverter}">
                                                                                                                        <Binding Path="Duration"/>
                                                                                                                        <Binding ElementName="ppTable" Path="DataContext.HourZoom"/>
                                                                                                                    </MultiBinding>
                                                                                                                </Grid.Width>
                                                                                                                <Border BorderThickness="1,0" BorderBrush="Silver">
                                                                                                                    <Border.ToolTip>
                                                                                                                        <StackPanel>
                                                                                                                            <TextBlock Text="گزارش تولید"/>
                                                                                                                            <Image Source="/Images/PP/Report.png" Width="16"/>
                                                                                                                            <WrapPanel>
                                                                                                                                <TextBlock Text="مدت"/>
                                                                                                                                <TextBlock Text="{Binding DurationSeconds, Converter={StaticResource secondsToStringConverter}}"/>
                                                                                                                            </WrapPanel>
                                                                                                                            <WrapPanel>
                                                                                                                                <TextBlock Text="شروع"/>
                                                                                                                                <TextBlock Text="{Binding StartDate, Converter={StaticResource dateToLocalStringConverter}}"/>
                                                                                                                                <TextBlock Text="{Binding StartTime, Converter={StaticResource timeSpanToStringConverter}}"/>
                                                                                                                            </WrapPanel>
                                                                                                                            <WrapPanel>
                                                                                                                                <TextBlock Text="پایان"/>
                                                                                                                                <TextBlock Text="{Binding EndDate, Converter={StaticResource dateToLocalStringConverter}}"/>
                                                                                                                                <TextBlock Text="{Binding EndTime, Converter={StaticResource timeSpanToStringConverter}}"/>
                                                                                                                            </WrapPanel>
                                                                                                                            <WrapPanel>
                                                                                                                                <TextBlock Text="هدف"/>
                                                                                                                                <TextBlock Text="{Binding TargetPoint}"/>
                                                                                                                            </WrapPanel>
                                                                                                                            <WrapPanel>
                                                                                                                                <TextBlock Text="تولید سالم"/>
                                                                                                                                <TextBlock Text="{Binding ProducedG1}"/>
                                                                                                                            </WrapPanel>
                                                                                                                        </StackPanel>
                                                                                                                    </Border.ToolTip>
                                                                                                                    <StackPanel>
                                                                                                                        <Image Source="/Images/PP/Report.png" Width="16" x:Name="reportImage" HorizontalAlignment="Left"/>
                                                                                                                        <TextBlock Text="{Binding DurationSeconds, Converter={StaticResource secondsToStringConverter}}" HorizontalAlignment="Left" Background="#AAA"/>
                                                                                                                    </StackPanel>
                                                                                                                </Border>
                                                                                                                <!--Button Command="{Binding OpenCommand}">
                                                                                                                </-->
                                                                                                                <Button Height="20" Width="20" Command="{Binding DeleteCommand}" HorizontalAlignment="Right" VerticalAlignment="Top">
                                                                                                                    <Image Source="/Images/Fpc/Delete16.png" Width="16"/>
                                                                                                                </Button>
                                                                                                            </Grid>
                                                                                                        </DataTemplate>
                                                                                                    </ItemsControl.Resources>
                                                                                                    <ItemsControl.ItemsPanel>
                                                                                                        <ItemsPanelTemplate>
                                                                                                            <StackPanel Orientation="Horizontal"/>
                                                                                                        </ItemsPanelTemplate>
                                                                                                    </ItemsControl.ItemsPanel>
                                                                                                </ItemsControl>
                                                                                                <!-- hide/show reports' trigger -->
                                                                                                <Grid.Triggers>
                                                                                                    <EventTrigger RoutedEvent="MouseEnter">
                                                                                                        <BeginStoryboard>
                                                                                                            <Storyboard Duration="0:0:0.2">
                                                                                                                <ParallelTimeline>
                                                                                                                    <DoubleAnimation Storyboard.TargetName="taskReports" Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" To="1"/>
                                                                                                                    <DoubleAnimation Storyboard.TargetName="taskBackgroundTexts" Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" To="0"/>
                                                                                                                </ParallelTimeline>
                                                                                                            </Storyboard>
                                                                                                        </BeginStoryboard>
                                                                                                    </EventTrigger>
                                                                                                    <EventTrigger RoutedEvent="MouseLeave">
                                                                                                        <BeginStoryboard>
                                                                                                            <Storyboard Duration="0:0:0.5">
                                                                                                                <ParallelTimeline>
                                                                                                                    <DoubleAnimation Storyboard.TargetName="taskReports" Storyboard.TargetProperty="Opacity" Duration="0:0:0.5" To="0"/>
                                                                                                                    <DoubleAnimation Storyboard.TargetName="taskBackgroundTexts" Storyboard.TargetProperty="Opacity" Duration="0:0:0.5" To="1"/>
                                                                                                                </ParallelTimeline>
                                                                                                            </Storyboard>
                                                                                                        </BeginStoryboard>
                                                                                                    </EventTrigger>
                                                                                                </Grid.Triggers>
                                                                                            </Grid>
                                                                                        </Border>
                                                                                    </Border>
                                                                                </DataTemplate>
                                                                            </ItemsControl.ItemTemplate>
                                                                            <ItemsControl.ItemsPanel>
                                                                                <ItemsPanelTemplate>
                                                                                    <StackPanel Orientation="Horizontal"/>
                                                                                </ItemsPanelTemplate>
                                                                            </ItemsControl.ItemsPanel>
                                                                        </ItemsControl>
                                                                    </Grid>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <DataTrigger.EnterActions>
                                                            <BeginStoryboard x:Name="bsb">
                                                                <Storyboard>
                                                                    <DoubleAnimation Storyboard.TargetName="border" Storyboard.TargetProperty="Opacity" From="1" To="0.5" Duration="0:0:0.5" AutoReverse="True" RepeatBehavior="Forever"/>
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </DataTrigger.EnterActions>                              
                                                        <DataTrigger.ExitActions>
                                                            <StopStoryboard BeginStoryboardName="bsb"/>
                                                        </DataTrigger.ExitActions>
                                                    </DataTrigger>
                                                </DataTemplate.Triggers>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>

                                        <!-- Tasks ItemsPanel -->
                                        <ItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <Canvas/>
                                            </ItemsPanelTemplate>
                                        </ItemsControl.ItemsPanel>
                                    </ItemsControl>

                                    <!-- NPTs -->
                                    <ItemsControl ItemsSource="{Binding NPTs}" Height="42">
                                        <ItemsControl.ItemTemplate>

                                            <!-- ==================================== OneNPT ========================================= -->
                                            <DataTemplate DataType="{x:Type vm:NPTVm}">
                                                <Canvas>
                                                    <Canvas.Margin>
                                                        <MultiBinding Converter="{StaticResource ppTaskBorderMarginConverter}">
                                                            <Binding Path="StartDateTime"/>
                                                            <Binding ElementName="ppTable" Path="DataContext.HourZoom"/>
                                                        </MultiBinding>
                                                    </Canvas.Margin>
                                                    <Border x:Name="border" Loaded="PPItem_Loaded" Unloaded="PPItem_Unloaded" BorderBrush="Black" ClipToBounds="True"
													    BorderThickness="1" CornerRadius="2" VerticalAlignment="Stretch" Height="40" Margin="0,1">
                                                        <Border.Width>
                                                            <MultiBinding Converter="{StaticResource ppTaskBorderWidthConverter}">
                                                                <Binding Path="Duration"/>
                                                                <Binding ElementName="ppTable" Path="DataContext.HourZoom"/>
                                                            </MultiBinding>
                                                        </Border.Width>
                                                        <Border.ToolTip>
                                                            <ContentPresenter>
                                                                <ContentPresenter.ContentTemplateSelector>
                                                                    <TemplateSelectors:NPTViewSelector>
                                                                        <!--Setup tooltip-->
                                                                        <TemplateSelectors:NPTViewSelector.SetupTemplate>
                                                                            <DataTemplate>
                                                                                <StackPanel>
                                                                                    <TextBlock Text="آماده سازی"/>
                                                                                    <Separator/>
                                                                                    <WrapPanel>
                                                                                        <TextBlock Text="زمان شروع: " Foreground="DarkGray"/>
                                                                                        <TextBlock Text="{Binding StartDateTime, Converter={StaticResource dateToLocalStringConverter}}"/>
                                                                                    </WrapPanel>
                                                                                    <WrapPanel>
                                                                                        <TextBlock Text="زمان خاتمه: " Foreground="DarkGray"/>
                                                                                        <TextBlock Text="{Binding EndDateTime, Converter={StaticResource dateToLocalStringConverter}}"/>
                                                                                    </WrapPanel>
                                                                                    <WrapPanel>
                                                                                        <TextBlock Text="مدت آماده سازی: " Foreground="DarkGray"/>
                                                                                        <TextBlock Text="{Binding DurationSeconds, Converter={StaticResource secondsToStringConverter}}"/>
                                                                                    </WrapPanel>
                                                                                    <Separator/>
                                                                                    <WrapPanel>
                                                                                        <TextBlock Text="از محصول: " Foreground="DarkGray"/>
                                                                                        <Image Source="/Images/PP/Rework.png" Width="15" Visibility="{Binding FromProduct.Rework, Converter={StaticResource isNotNullToVisibility}}"/>
                                                                                        <Rectangle Fill="{Binding FromProduct.Product.Color}" Width="15"/>
                                                                                        <TextBlock Text="{Binding FromProduct.Name}" TextWrapping="Wrap"/>
                                                                                    </WrapPanel>
                                                                                    <WrapPanel>
                                                                                        <TextBlock Text="به محصول: " Foreground="DarkGray"/>
                                                                                        <Image Source="/Images/PP/Rework.png" Width="15" Visibility="{Binding ToProduct.Rework, Converter={StaticResource isNotNullToVisibility}}"/>
                                                                                        <Rectangle Fill="{Binding ToProduct.Product.Color}" Width="15"/>
                                                                                        <TextBlock Text="{Binding ToProduct.Name}" TextWrapping="Wrap"/>
                                                                                    </WrapPanel>
                                                                                    <Separator/>
                                                                                    <WrapPanel>
                                                                                        <TextBlock Text="مدت آغاز به کار: " Foreground="DarkGray"/>
                                                                                        <TextBlock Text="{Binding WarmupSeconds, Converter={StaticResource secondsToStringConverter}}"/>
                                                                                    </WrapPanel>
                                                                                    <WrapPanel>
                                                                                        <TextBlock Text="مدت تعویض: " Foreground="DarkGray"/>
                                                                                        <TextBlock Text="{Binding ChangeoverSeconds, Converter={StaticResource secondsToStringConverter}}"/>
                                                                                    </WrapPanel>
                                                                                </StackPanel>
                                                                            </DataTemplate>
                                                                        </TemplateSelectors:NPTViewSelector.SetupTemplate>
                                                                    </TemplateSelectors:NPTViewSelector>
                                                                </ContentPresenter.ContentTemplateSelector>
                                                            </ContentPresenter>
                                                        </Border.ToolTip>
                                                        <Border.ContextMenu>
                                                            <ContextMenu FlowDirection="RightToLeft">
                                                                <MenuItem Header="ویرایش کار غیر تولیدی" Command="{Binding EditItemCommand}"/>
                                                                <MenuItem Header="حذف کار غیر تولیدی" Command="{Binding DeleteItemCommand}"/>
                                                            </ContextMenu>
                                                        </Border.ContextMenu>
                                                        <Control Name="innerControl" ClipToBounds="True"/>
                                                        <Border.Effect>
                                                            <DropShadowEffect Opacity="0.8" ShadowDepth="0" Color="{Binding Message.HasException, Converter={StaticResource hasErrorToShadowColor}}"/>
                                                        </Border.Effect>
                                                        <Border.Background>
                                                            <LinearGradientBrush x:Name="acquiringHash" SpreadMethod="Repeat" StartPoint="0,0" EndPoint="10,10" MappingMode="Absolute">
                                                                <GradientStop Color="#999" Offset="0"/>
                                                                <GradientStop Color="#999" Offset="0.49"/>
                                                                <GradientStop Color="#CCC" Offset="0.5"/>
                                                                <GradientStop Color="#CCC" Offset="1"/>
                                                            </LinearGradientBrush>
                                                        </Border.Background>
                                                        <Border.Triggers>
                                                            <EventTrigger RoutedEvent="Loaded">
                                                                <BeginStoryboard>
                                                                    <Storyboard Duration="0:0:0.4" RepeatBehavior="Forever">
                                                                        <ParallelTimeline Duration="0:0:0.4">
                                                                            <PointAnimation Storyboard.TargetName="acquiringHash" 
																		    Storyboard.TargetProperty="StartPoint"
																		    From="0,0" To="10,10" Duration="0:0:0.4"/>
                                                                            <PointAnimation Storyboard.TargetName="acquiringHash" 
																		    Storyboard.TargetProperty="EndPoint"
																		    From="10,10" To="20,20" Duration="0:0:0.4"/>
                                                                        </ParallelTimeline>
                                                                    </Storyboard>
                                                                </BeginStoryboard>
                                                            </EventTrigger>
                                                        </Border.Triggers>
                                                    </Border>
                                                </Canvas>

                                                <DataTemplate.Triggers>
                                                    <!-- NPT Simple View -->
                                                    <DataTrigger Binding="{Binding ViewMode}" Value="Simple">
                                                        <Setter TargetName="border" Property="Background">
                                                            <Setter.Value>
                                                                <LinearGradientBrush  StartPoint="0,0.25" EndPoint="1,0.75">
                                                                    <GradientStop Color="{Binding FromProduct.Product.Color}" Offset="0"/>
                                                                    <GradientStop Color="{Binding FromProduct.Product.Color}" Offset="0.25"/>
                                                                    <GradientStop Color="#CCC" Offset="0.26"/>
                                                                    <GradientStop Color="#CCC" Offset="0.5"/>
                                                                    <GradientStop Color="{Binding ToProduct.Product.Color}" Offset="0.51"/>
                                                                    <GradientStop Color="{Binding ToProduct.Product.Color}" Offset="1"/>
                                                                </LinearGradientBrush>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Setter TargetName="innerControl" Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type Control}">
                                                                    <Image Source="/Images/PP/Setup.png" Height="16"/>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </DataTrigger>
                                                    
                                                    <DataTrigger Binding="{Binding IsEditMode}" Value="True">
                                                        <Setter TargetName="border" Property="BorderBrush">
                                                            <Setter.Value>
                                                                <SolidColorBrush Color="Yellow"/>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </DataTrigger>

                                                    <!-- NPT Report Simple View -->
                                                    <DataTrigger Binding="{Binding ViewMode}" Value="ReportSimple">
                                                        <Setter TargetName="border" Property="Background">
                                                            <Setter.Value>
                                                                <LinearGradientBrush  StartPoint="0,0.25" EndPoint="1,0.75">
                                                                    <GradientStop Color="{Binding FromProduct.Product.Color}" Offset="0"/>
                                                                    <GradientStop Color="{Binding FromProduct.Product.Color}" Offset="0.25"/>
                                                                    <GradientStop Color="#CCC" Offset="0.26"/>
                                                                    <GradientStop Color="#CCC" Offset="0.5"/>
                                                                    <GradientStop Color="{Binding ToProduct.Product.Color}" Offset="0.51"/>
                                                                    <GradientStop Color="{Binding ToProduct.Product.Color}" Offset="1"/>
                                                                </LinearGradientBrush>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Setter TargetName="innerControl" Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type Control}">
                                                                    <Grid>
                                                                        <!-- Overlay button to add report -->
                                                                        <Button x:Name="addbutton" Opacity="0" HorizontalAlignment="Left" Margin="0" ToolTip="ایجاد گزارش"
																			    Command="{Binding EditReportCommand}" 
																			    Visibility="{Binding Report, Converter={StaticResource isNullToVisibility}}">
                                                                            <StackPanel>
                                                                                <Image Source="/Images/PP/ReportAdd.png" Height="16"/>
                                                                                <Border Background="#4FFF" HorizontalAlignment="Stretch">
                                                                                    <TextBlock Text="فاقد گزارش"/>
                                                                                </Border>
                                                                            </StackPanel>
                                                                            <Button.Width>
                                                                                <MultiBinding Converter="{StaticResource ppTaskBorderWidthConverter}">
                                                                                    <Binding Path="Duration"/>
                                                                                    <Binding ElementName="ppTable" Path="DataContext.HourZoom"/>
                                                                                </MultiBinding>
                                                                            </Button.Width>
                                                                        </Button>
                                                                        <!-- Has Reports -->
                                                                        <Grid Visibility="{Binding Report, Converter={StaticResource isNotNullToVisibility}}">
                                                                            <Button x:Name="editbutton" Opacity="0" HorizontalAlignment="Left" Margin="0" ToolTip="مشاهده/ویرایش گزارش"
																				    Command="{Binding EditReportCommand}">
                                                                                <StackPanel>
                                                                                    <Image Source="/Images/PP/ReportView.png" Height="16"/>
                                                                                    <Border Background="#4FFF" HorizontalAlignment="Stretch">
                                                                                        <TextBlock Text="{Binding Report.DurationSeconds, Converter={StaticResource secondsToStringConverter}}"/>
                                                                                    </Border>
                                                                                </StackPanel>
                                                                                <Button.Width>
                                                                                    <MultiBinding Converter="{StaticResource ppTaskBorderWidthConverter}">
                                                                                        <Binding Path="Duration"/>
                                                                                        <Binding ElementName="ppTable" Path="DataContext.HourZoom"/>
                                                                                    </MultiBinding>
                                                                                </Button.Width>
                                                                            </Button>
                                                                        </Grid>
                                                                        <Grid.Triggers>
                                                                            <EventTrigger RoutedEvent="MouseEnter">
                                                                                <BeginStoryboard>
                                                                                    <Storyboard Duration="0:0:0.2">
                                                                                        <DoubleAnimation Storyboard.TargetName="addbutton"
																						    Storyboard.TargetProperty="Opacity"
																						    Duration="0:0:0.2"
																						    To="0.8"/>
                                                                                    </Storyboard>
                                                                                </BeginStoryboard>
                                                                            </EventTrigger>
                                                                            <EventTrigger RoutedEvent="MouseLeave">
                                                                                <BeginStoryboard>
                                                                                    <Storyboard Duration="0:0:0.7">
                                                                                        <DoubleAnimation Storyboard.TargetName="addbutton"
																						    Storyboard.TargetProperty="Opacity"
																						    Duration="0:0:0.7"
																						    To="0"/>
                                                                                    </Storyboard>
                                                                                </BeginStoryboard>
                                                                            </EventTrigger>
                                                                            <EventTrigger RoutedEvent="MouseEnter">
                                                                                <BeginStoryboard>
                                                                                    <Storyboard Duration="0:0:0.2">
                                                                                        <DoubleAnimation Storyboard.TargetName="editbutton"
																						    Storyboard.TargetProperty="Opacity"
																						    Duration="0:0:0.2"
																						    To="0.8"/>
                                                                                    </Storyboard>
                                                                                </BeginStoryboard>
                                                                            </EventTrigger>
                                                                            <EventTrigger RoutedEvent="MouseLeave">
                                                                                <BeginStoryboard>
                                                                                    <Storyboard Duration="0:0:0.7">
                                                                                        <DoubleAnimation Storyboard.TargetName="editbutton"
																						    Storyboard.TargetProperty="Opacity"
																						    Duration="0:0:0.7"
																						    To="0"/>
                                                                                    </Storyboard>
                                                                                </BeginStoryboard>
                                                                            </EventTrigger>
                                                                        </Grid.Triggers>
                                                                    </Grid>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </DataTrigger>

                                                </DataTemplate.Triggers>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>

                                        <!-- NPTs ItemsPanel -->
                                        <ItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <Canvas/>
                                            </ItemsPanelTemplate>
                                        </ItemsControl.ItemsPanel>
                                    </ItemsControl>
                                </Canvas>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>

                        <!--RowsOfItems(Tasks,NPTs) Template-->
                        <ItemsControl.Template>
                            <ControlTemplate>
                                <ScrollViewer Focusable="False" DockPanel.Dock="Right"
										    ScrollChanged="tasksScrolled"
										    Padding="{TemplateBinding Control.Padding}"
										    HorizontalScrollBarVisibility="Hidden"
										    VerticalScrollBarVisibility="Auto">
                                    <ItemsPresenter>
                                        <ItemsPresenter.Margin>
                                            <MultiBinding Converter="{StaticResource hoursPanelMarginConverter}">
                                                <Binding Path="HoursPassed"/>
                                                <Binding Path="HourZoom"/>
                                                <Binding Path="SelectedMonth.DaysFromStartOfYear"/>
                                            </MultiBinding>
                                        </ItemsPresenter.Margin>
                                    </ItemsPresenter>
                                </ScrollViewer>
                            </ControlTemplate>
                        </ItemsControl.Template>

                    </ItemsControl>
                    <!--ExceptionTooltips for Tasks,NPTs-->
                    <ItemsControl Grid.Row="6" Grid.Column="1" ItemsSource="{Binding PPItems}" ClipToBounds="False">
                        <!-- ==================================== OneRow Of Item(Tasks,NPTs) ========================================= -->
                        <ItemsControl.ItemTemplate>
                            <DataTemplate DataType="{x:Type vm:PPStationVm}">
                                <Canvas>
                                    <!-- Tasks ItemsControl -->
                                    <ItemsControl ItemsSource="{Binding Blocks}" Height="42" ClipToBounds="False" ItemTemplate="{StaticResource balloonTemplate}">
                                        <!-- Tasks ItemsPanel -->
                                        <ItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <Canvas/>
                                            </ItemsPanelTemplate>
                                        </ItemsControl.ItemsPanel>
                                    </ItemsControl>

                                    <!-- NPTs ItemsControl -->
                                    <ItemsControl ItemsSource="{Binding NPTs}" Height="42" ClipToBounds="False" ItemTemplate="{StaticResource balloonTemplate}">
                                        <!-- NPTs ItemsPanel -->
                                        <ItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <Canvas/>
                                            </ItemsPanelTemplate>
                                        </ItemsControl.ItemsPanel>
                                    </ItemsControl>
                                </Canvas>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>

                        <!--RowsOfTasks Template-->
                        <ItemsControl.Template>
                            <ControlTemplate>
                                    <ItemsPresenter ClipToBounds="False">
                                        <ItemsPresenter.Margin>
                                            <MultiBinding Converter="{StaticResource mainPanelMarginConverter}">
                                                <Binding Path="HoursPassed"/>
                                                <Binding Path="HourZoom"/>
                                                <Binding Path="SelectedMonth.DaysFromStartOfYear"/>
                                                <Binding Path="VerticalScreenOffset"/>
                                            </MultiBinding>
                                        </ItemsPresenter.Margin>
                                    </ItemsPresenter>
                            </ControlTemplate>
                        </ItemsControl.Template>

                    </ItemsControl>
                    <!--RowsOfNPTHolders ItemsControl-->
                </Grid>
            </ScrollViewer>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding TaskEditor.IsVisible}" Value="True">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard Duration="0:0:0.3" DecelerationRatio="1">
                                <ParallelTimeline>
                                    <DoubleAnimation Storyboard.TargetName="taskEditorPanel" Storyboard.TargetProperty="Height" Duration="0:0:0.3" To="600"/>
                                    <DoubleAnimation Storyboard.TargetName="taskEditorToolbarButtons" Storyboard.TargetProperty="Width" Duration="0:0:0.3" To="128"/>
                                </ParallelTimeline>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                    <DataTrigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard Duration="0:0:0.2" DecelerationRatio="1">
                                <ParallelTimeline>
                                    <DoubleAnimation Storyboard.TargetName="taskEditorPanel" Storyboard.TargetProperty="Height" Duration="0:0:0.2" To="0"/>
                                    <DoubleAnimation Storyboard.TargetName="taskEditorToolbarButtons" Storyboard.TargetProperty="Width" Duration="0:0:0.2" To="0"/>
                                </ParallelTimeline>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.ExitActions>
                </DataTrigger>
                <DataTrigger Binding="{Binding JobEditor.IsVisible}" Value="True">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard Duration="0:0:0.3" DecelerationRatio="1">
                                <DoubleAnimation Storyboard.TargetName="jobEditorPanel" Storyboard.TargetProperty="Height" Duration="0:0:0.3" To="600"/>
                                <DoubleAnimation Storyboard.TargetName="jobEditorToolbarButtons" Storyboard.TargetProperty="Width" Duration="0:0:0.3" To="92"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                    <DataTrigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard Duration="0:0:0.2" DecelerationRatio="1">
                                <DoubleAnimation Storyboard.TargetName="jobEditorPanel" Storyboard.TargetProperty="Height" Duration="0:0:0.2" To="0"/>
                                <DoubleAnimation Storyboard.TargetName="jobEditorToolbarButtons" Storyboard.TargetProperty="Width" Duration="0:0:0.2" To="0"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.ExitActions>
                </DataTrigger>
                <DataTrigger Binding="{Binding SelectedNPT.IsEditMode}" Value="True">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard Duration="0:0:0.3" DecelerationRatio="1">
                                <DoubleAnimation Storyboard.TargetName="nptEditorPanel" Storyboard.TargetProperty="Height" Duration="0:0:0.3" To="100"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                    <DataTrigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard Duration="0:0:0.2" DecelerationRatio="1">
                                <DoubleAnimation Storyboard.TargetName="nptEditorPanel" Storyboard.TargetProperty="Height" Duration="0:0:0.2" To="0"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.ExitActions>
                </DataTrigger>
                <DataTrigger Binding="{Binding ShowJobList}" Value="True">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard Duration="0:0:0.3" DecelerationRatio="1">
                                <DoubleAnimation Storyboard.TargetName="jobListPanel" Storyboard.TargetProperty="Height" Duration="0:0:0.3" To="400"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                    <DataTrigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard Duration="0:0:0.2" DecelerationRatio="1">
                                <DoubleAnimation Storyboard.TargetName="jobListPanel" Storyboard.TargetProperty="Height" Duration="0:0:0.2" To="0"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.ExitActions>
                </DataTrigger>
                <DataTrigger Binding="{Binding CurrentTaskReportBuilder.IsSelected}" Value="True">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard Duration="0:0:0.3" DecelerationRatio="1">
                                <DoubleAnimation Storyboard.TargetName="taskReportBuilderPanel" Storyboard.TargetProperty="Height" Duration="0:0:0.3" To="200"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                    <DataTrigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard Duration="0:0:0.2" DecelerationRatio="1">
                                <DoubleAnimation Storyboard.TargetName="taskReportBuilderPanel" Storyboard.TargetProperty="Height" Duration="0:0:0.2" To="0"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.ExitActions>
                </DataTrigger>
                <DataTrigger Binding="{Binding CurrentProcessReportBuilder.IsSelected}" Value="True">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard Duration="0:0:0.3" DecelerationRatio="1">
                                <DoubleAnimation Storyboard.TargetName="processReportBuilderPanel" Storyboard.TargetProperty="Height" Duration="0:0:0.3" To="600"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                    <DataTrigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard Duration="0:0:0.2" DecelerationRatio="1">
                                <DoubleAnimation Storyboard.TargetName="processReportBuilderPanel" Storyboard.TargetProperty="Height" Duration="0:0:0.2" To="0"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.ExitActions>
                </DataTrigger>
                <DataTrigger Binding="{Binding CurrentNPTReportBuilder.IsSelected}" Value="True">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard Duration="0:0:0.3" DecelerationRatio="1">
                                <DoubleAnimation Storyboard.TargetName="nptReportBuilderPanel" Storyboard.TargetProperty="Height" Duration="0:0:0.3" To="200"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                    <DataTrigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard Duration="0:0:0.2" DecelerationRatio="1">
                                <DoubleAnimation Storyboard.TargetName="nptReportBuilderPanel" Storyboard.TargetProperty="Height" Duration="0:0:0.2" To="0"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.ExitActions>
                </DataTrigger>
            </DataTemplate.Triggers>
		</DataTemplate>
        
        <!-- 3.2. Performance  -->

        <!-- 3.3. Indices  -->
        <DataTemplate x:Key="IndexTemplate" DataType="IndexViewModels:IndicesVm">
			<DataTemplate.Resources>
				<LinearGradientBrush x:Key="SlideWindowBackground" StartPoint="0,0" EndPoint="1,0.001">
					<GradientBrush.GradientStops>
						<GradientStopCollection>
							<GradientStop Color="White" Offset="0" />
							<GradientStop Color="#6FFF" Offset="0.5" />
							<GradientStop Color="#1FFF" Offset="0.6" />
							<GradientStop Color="Transparent" Offset="1"/>
						</GradientStopCollection>
					</GradientBrush.GradientStops>
				</LinearGradientBrush>
				<LinearGradientBrush x:Key="SlideWindowBorder" StartPoint="0,0" EndPoint="0,1">
					<GradientBrush.GradientStops>
						<GradientStopCollection>
							<GradientStop Color="#FFF" Offset="0.0"/>
							<GradientStop Color="#CCC" Offset="1.0"/>
						</GradientStopCollection>
					</GradientBrush.GradientStops>
				</LinearGradientBrush>
				<!-- Data Providers -->
				<ObjectDataProvider x:Key="IndexTypes"
                            MethodName="GetValues"
                            ObjectType="{x:Type System:Enum}">
					<ObjectDataProvider.MethodParameters>
						<x:Type TypeName="Common:IndexType" />
					</ObjectDataProvider.MethodParameters>
				</ObjectDataProvider>
				<ObjectDataProvider x:Key="IndexIntervals"
                            MethodName="GetValues"
                            ObjectType="{x:Type System:Enum}">
					<ObjectDataProvider.MethodParameters>
						<x:Type TypeName="Common:DateTimeIntervals" />
					</ObjectDataProvider.MethodParameters>
				</ObjectDataProvider>
				<!--Slider Repeat Button-->
				<Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
					<Setter Property="SnapsToDevicePixels" Value="True"/>
					<Setter Property="OverridesDefaultStyle" Value="true"/>
					<Setter Property="Focusable" Value="false"/>
					<Setter Property="Width" Value="40"/>
					<Setter Property="Delay" Value="0"/>
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="{x:Type RepeatButton}">
								<Rectangle Name="Border" Fill="Transparent"/>
								<ControlTemplate.Triggers>
									<Trigger Property="IsMouseOver" Value="true">
										<Setter TargetName="Border" Property="Fill" Value="{StaticResource ShadowTransparent}" />
									</Trigger>
									<Trigger Property="IsPressed" Value="true">
										<Setter TargetName="Border" Property="Fill" Value="{StaticResource ClickedTransparent}" />
									</Trigger>
								</ControlTemplate.Triggers>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
				<!--Slider Template-->
				<ControlTemplate x:Key="SliderTemplate" TargetType="{x:Type ScrollViewer}">
					<Grid Background="{TemplateBinding Background}" Height="600" >
						<ScrollContentPresenter 
					x:Name="PART_ScrollContentPresenter" 
					CanContentScroll="True"
					CanHorizontallyScroll="True" 
					ContentTemplate="{TemplateBinding ContentTemplate}"
					Content="{TemplateBinding Content}"
					Margin="{TemplateBinding Padding}"/>
						<ScrollBar
					x:Name="PART_HorizontalScrollBar" 
                    VerticalAlignment="Bottom"
					AutomationProperties.AutomationId="HorizontalScrollBar" 
					Maximum="{TemplateBinding ScrollableWidth}" 
					Minimum="0" 
					Orientation="Horizontal"
					Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" 
					Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
					ViewportSize="{TemplateBinding ViewportWidth}">
							<ScrollBar.Template>
								<ControlTemplate TargetType="ScrollBar">
									<Grid>
										<Grid.ColumnDefinitions>
											<ColumnDefinition MaxWidth="40"/>
											<ColumnDefinition Width="0.00001*"/>
											<ColumnDefinition MaxWidth="40"/>
										</Grid.ColumnDefinitions>
										<Border Grid.ColumnSpan="3" Background="#01000000" />
										<!--Little Window-->
										<Border
									Grid.Column="1"
									Cursor="ScrollWE"
									Background="{StaticResource SlideWindowBackground}"
									BorderBrush="{StaticResource SlideWindowBorder}"
									BorderThickness="2"
									CornerRadius="2"
									HorizontalAlignment="Center"
									Margin="0,-2"
									Width="{Binding RelativeSource={RelativeSource AncestorType=Virtualizing:DateTimeScrollViewer}, Path=LittleWindowWidth}">
										</Border>
										<!--Transparent Bar-->
										<Rectangle
									Grid.Column="1" 
									Margin="-1"
									Cursor="/Images/openhand.cur"
									Fill="Transparent"
									MouseMove="AreaMouseMove" MouseUp="AreaMouseUp"
									MouseDown="RectangleMouseDown"/>
										<!-- << | >> -->
										<RepeatButton
									Grid.Column="0"
									Cursor="ScrollW" 
									Style="{StaticResource ScrollBarLineButton}"
									Click="RepeatButtonLClick"/>
										<RepeatButton
									Grid.Column="3"
									Cursor="ScrollE" 
									Style="{StaticResource ScrollBarLineButton}"
									Click="RepeatButtonRClick"/>
									</Grid>
								</ControlTemplate>
							</ScrollBar.Template>
						</ScrollBar>
					</Grid>
				</ControlTemplate>
			</DataTemplate.Resources>
            <Border DataContext="{Binding RelativeSource={RelativeSource AncestorType=Views:SoheilSingularView}, Path=ViewModel}" Style="{StaticResource SoheilSingularViewBorder}">
                <I:Interaction.Behaviors>
                    <Behavior:ValidationExceptionBehavior />
                </I:Interaction.Behaviors>
                <DockPanel D:DataContext="{D:DesignInstance IndexViewModels:IndicesVm}">
                    <Border DockPanel.Dock="Top">
                        <WrapPanel>
                            <TextBlock Style="{StaticResource EntryBoxHeader}" Text="{Loc txtIndexType}" />
                            <ComboBox ItemsSource="{Binding Source={StaticResource IndexTypes}}" SelectedValue="{Binding Path=CurrentType}">
                                <I:Interaction.Triggers>
                                    <I:EventTrigger EventName="SelectionChanged">
                                        <I:InvokeCommandAction Command="{Binding InitializeProviderCommand}"/>
                                    </I:EventTrigger>
                                </I:Interaction.Triggers>
                            </ComboBox>
                            <TextBlock Style="{StaticResource EntryBoxHeader}" Text="{Loc txtIndexInterval}" />
                            <ComboBox ItemsSource="{Binding Source={StaticResource IndexIntervals}}" SelectedValue="{Binding Path=CurrentInterval}" >
                                <I:Interaction.Triggers>
                                    <I:EventTrigger EventName="SelectionChanged">
                                        <I:InvokeCommandAction Command="{Binding InitializeProviderCommand}"/>
                                    </I:EventTrigger>
                                </I:Interaction.Triggers>
                            </ComboBox>
                            <TextBox Text="{Binding HorizontalOffset, Mode=TwoWay}"></TextBox>
                        </WrapPanel>
                    </Border>
                    <DockPanel DockPanel.Dock="Bottom">
                        <DockPanel Width="50" DockPanel.Dock="Right">
                            <Button DockPanel.Dock="Bottom" Margin="2" Height="18" Command="{Binding NavigateBackCommand}" Content="←"></Button>
                            <ItemsControl x:Name="_ScaleNums" ItemsSource="{Binding Scales}">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Style="{StaticResource EntryBoxHeader}" 
                                                   Height="100" Width="50" Text="{Binding}"/>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </DockPanel>
                        <Border>
                            <Grid x:Name="adornedControl" >
                                <Grid.Resources>
                                    <Common:BindingProxy x:Key="Proxy" Data="{Binding}" />
                                </Grid.Resources>
                                <ItemsControl x:Name="_ScaleLines"
                                                    ItemsSource="{Binding ScaleLines}">
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <UniformGrid Height="100" Rows="2" Columns="1">
                                                <Canvas Background="{StaticResource ThemeDarkBrush}" />
                                                <Canvas Background="{StaticResource ThemeMediumBrush}" />
                                            </UniformGrid>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                                    <ItemsControl x:Name="_slider"
					                ItemsSource="{Binding Bars}"
                                    MouseMove="AreaMouseMove" MouseUp="AreaMouseUp"
                                    FlowDirection="LeftToRight"              
                                    VerticalAlignment="Bottom"
					                VirtualizingPanel.ScrollUnit="Pixel"
					                VirtualizingPanel.IsVirtualizing="True"
                                    VirtualizingPanel.VirtualizationMode="Recycling"
                                    ScrollViewer.IsDeferredScrollingEnabled="True"
					                ScrollViewer.CanContentScroll="True">
                                        <ItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <VirtualizingStackPanel Orientation="Horizontal"/>
                                            </ItemsPanelTemplate>
                                        </ItemsControl.ItemsPanel>
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate DataType="IndexViewModels:IndexBarVm">
                                                <Grid Width="80">
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="*"/>
                                                        <RowDefinition Height="30"/>
                                                        <RowDefinition Height="Auto"/>
                                                        <RowDefinition Height="20"/>
                                                    </Grid.RowDefinitions>
                                                <TextBlock HorizontalAlignment="Center" Text="{Binding Tip}" Foreground="{StaticResource TextBrush}" Grid.Row="1" Margin="1"/>
                                                <StackPanel Grid.Row="2"  >
                                                    <ItemsControl x:Name="indexBtns" Height="0" HorizontalAlignment="Center"
                                                                  ItemsSource="{Binding MenuItems}">
                                                        <ItemsControl.ItemTemplate>
                                                            <DataTemplate>
                                                                <Button Content="{Binding Text}"
                                                                        Background="{Binding Color}"
                                                                        Style="{StaticResource IndexButton}"
                                                                        Command= "{Binding Source={StaticResource Proxy}, Path=Data.NavigateInsideCommand}"
                                                                        CommandParameter="{Binding }" />
                                                            </DataTemplate>
                                                        </ItemsControl.ItemTemplate>
                                                        <ItemsControl.ItemsPanel>
                                                            <ItemsPanelTemplate>
                                                                <StackPanel Orientation="Horizontal"/>
                                                            </ItemsPanelTemplate>
                                                        </ItemsControl.ItemsPanel>
                                                    </ItemsControl>
                                                    <ToggleButton x:Name="_bar" 
                                                                  Foreground ="{Binding DetailsColor}"  
                                                                  Background="{Binding MainColor}" 
                                                                  Style="{StaticResource SimpleBar}" 
                                                                  Height="{Binding Value}" 
                                                                  Margin="5,0,5,0"
                                                                  Command="{Binding Source={StaticResource Proxy}, Path=Data.NavigateInsideCommand}"
                                                                  CommandParameter="{Binding }">
                                                    </ToggleButton>
                                                    <!--<I:Interaction.Triggers>
                                                        <I:EventTrigger EventName="MouseUp">
                                                            <I:InvokeCommandAction Command= "{Binding Source={StaticResource Proxy}, Path=Data.NavigateInsideCommand}"
                                                                                   CommandParameter="{Binding }"/>
                                                        </I:EventTrigger>
                                                    </I:Interaction.Triggers>-->
                                                    <StackPanel.Triggers>
                                                        <EventTrigger RoutedEvent="ToggleButton.Checked" SourceName="_bar">
                                                            <BeginStoryboard>
                                                                <Storyboard>
                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="indexBtns" 
                                                                            Storyboard.TargetProperty="Height">
                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="30" />
                                                                    </DoubleAnimationUsingKeyFrames>
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </EventTrigger>
                                                        <EventTrigger RoutedEvent="ToggleButton.Unchecked" SourceName="_bar">
                                                            <BeginStoryboard>
                                                                <Storyboard>
                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="indexBtns" 
                                                                            Storyboard.TargetProperty="Height">
                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0" />
                                                                    </DoubleAnimationUsingKeyFrames>
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </EventTrigger>
                                                    </StackPanel.Triggers>
                                                </StackPanel>    
                                                <Border Grid.Row="3" BorderBrush="{StaticResource ThemeLightBrush}" BorderThickness="1">
                                                    <TextBlock Text="{Binding Header}" HorizontalAlignment="Center"
                                                               Foreground="{StaticResource TextBrush}" 
                                                               Background="{StaticResource ThemeDarkBrush}" />
                                                </Border>
                                                <Canvas Grid.Row="0"/>
                                                </Grid>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                        <ItemsControl.Template>
                                            <ControlTemplate>
                                                <Border>
                                                    <Virtualizing:DateTimeScrollViewer 
							                    HorizontalScrollBarVisibility="Visible" 
                                                VerticalScrollBarVisibility="Disabled"
                                                Behaviors:ScrollViewerBinding.HorizontalOffset="{Binding HorizontalOffset, Mode=TwoWay}"
							                    
							                    Padding="{TemplateBinding Control.Padding}"
							                    Focusable="False"
							                    OverridesDefaultStyle="True"
							                    Template="{StaticResource SliderTemplate}">
                                                        <ItemsPresenter SnapsToDevicePixels="True"/>
                                                    </Virtualizing:DateTimeScrollViewer>
                                                </Border>
                                            </ControlTemplate>
                                        </ItemsControl.Template>
                                    </ItemsControl>
                            </Grid>
                        </Border>
                    </DockPanel>
                </DockPanel>
            </Border>
        </DataTemplate>

        <!--................................................ 5.Reports ...............................................-->

        <!-- 5.1. Cost Reports -->
        <DataTemplate x:Key="CostReportTemplate" DataType="Reports:CostReportsVm">
            <DataTemplate.Resources>
                <LinearGradientBrush x:Key="SlideWindowBackground" StartPoint="0,0" EndPoint="1,0.001">
                    <GradientBrush.GradientStops>
                        <GradientStopCollection>
                            <GradientStop Color="White" Offset="0" />
                            <GradientStop Color="#6FFF" Offset="0.5" />
                            <GradientStop Color="#1FFF" Offset="0.6" />
                            <GradientStop Color="Transparent" Offset="1"/>
                        </GradientStopCollection>
                    </GradientBrush.GradientStops>
                </LinearGradientBrush>
                <LinearGradientBrush x:Key="SlideWindowBorder" StartPoint="0,0" EndPoint="0,1">
                    <GradientBrush.GradientStops>
                        <GradientStopCollection>
                            <GradientStop Color="#FFF" Offset="0.0"/>
                            <GradientStop Color="#CCC" Offset="1.0"/>
                        </GradientStopCollection>
                    </GradientBrush.GradientStops>
                </LinearGradientBrush>
                <ObjectDataProvider x:Key="CostTypes"
                                    MethodName="GetValues"
                                    ObjectType="{x:Type System:Enum}">
                    <ObjectDataProvider.MethodParameters>
                        <x:Type TypeName="Common:CostType" />
                    </ObjectDataProvider.MethodParameters>
                </ObjectDataProvider>
                <ObjectDataProvider x:Key="IndexIntervals"
                            MethodName="GetValues"
                            ObjectType="{x:Type System:Enum}">
                    <ObjectDataProvider.MethodParameters>
                        <x:Type TypeName="Common:DateTimeIntervals" />
                    </ObjectDataProvider.MethodParameters>
                </ObjectDataProvider>
                <!--Slider Repeat Button-->
                <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
                    <Setter Property="SnapsToDevicePixels" Value="True"/>
                    <Setter Property="OverridesDefaultStyle" Value="true"/>
                    <Setter Property="Focusable" Value="false"/>
                    <Setter Property="Width" Value="40"/>
                    <Setter Property="Delay" Value="0"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type RepeatButton}">
                                <Rectangle Name="Border" Fill="Transparent"/>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="true">
                                        <Setter TargetName="Border" Property="Fill" Value="{StaticResource ShadowTransparent}" />
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="true">
                                        <Setter TargetName="Border" Property="Fill" Value="{StaticResource ClickedTransparent}" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
                <!--Slider Template-->
                <ControlTemplate x:Key="SliderTemplate" TargetType="{x:Type ScrollViewer}">
                    <Grid Background="{TemplateBinding Background}" Height="600" >
                        <ScrollContentPresenter 
					x:Name="PART_ScrollContentPresenter" 
					CanContentScroll="True"
					CanHorizontallyScroll="True" 
					ContentTemplate="{TemplateBinding ContentTemplate}"
					Content="{TemplateBinding Content}"
					Margin="{TemplateBinding Padding}"/>
                        <ScrollBar
					x:Name="PART_HorizontalScrollBar" 
                    VerticalAlignment="Bottom"
					AutomationProperties.AutomationId="HorizontalScrollBar" 
					Maximum="{TemplateBinding ScrollableWidth}" 
					Minimum="0" 
					Orientation="Horizontal"
					Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" 
					Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
					ViewportSize="{TemplateBinding ViewportWidth}">
                            <ScrollBar.Template>
                                <ControlTemplate TargetType="ScrollBar">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition MaxWidth="40"/>
                                            <ColumnDefinition Width="0.00001*"/>
                                            <ColumnDefinition MaxWidth="40"/>
                                        </Grid.ColumnDefinitions>
                                        <Border Grid.ColumnSpan="3" Background="#01000000" />
                                        <!--Little Window-->
                                        <Border
									Grid.Column="1"
									Cursor="ScrollWE"
									Background="{StaticResource SlideWindowBackground}"
									BorderBrush="{StaticResource SlideWindowBorder}"
									BorderThickness="2"
									CornerRadius="2"
									HorizontalAlignment="Center"
									Margin="0,-2"
									Width="{Binding RelativeSource={RelativeSource AncestorType=Virtualizing:DateTimeScrollViewer}, Path=LittleWindowWidth}">
                                        </Border>
                                        <!--Transparent Bar-->
                                        <Rectangle
									Grid.Column="1" 
									Margin="-1"
									Cursor="/Images/openhand.cur"
									Fill="Transparent"
									MouseMove="AreaMouseMove" MouseUp="AreaMouseUp"
									MouseDown="RectangleMouseDown"/>
                                        <!-- << | >> -->
                                        <RepeatButton
									Grid.Column="0"
									Cursor="ScrollW" 
									Style="{StaticResource ScrollBarLineButton}"
									Click="RepeatButtonLClick"/>
                                        <RepeatButton
									Grid.Column="3"
									Cursor="ScrollE" 
									Style="{StaticResource ScrollBarLineButton}"
									Click="RepeatButtonRClick"/>
                                    </Grid>
                                </ControlTemplate>
                            </ScrollBar.Template>
                        </ScrollBar>
                    </Grid>
                </ControlTemplate>
            </DataTemplate.Resources>
            <Border DataContext="{Binding RelativeSource={RelativeSource AncestorType=Views:SoheilSingularView}, Path=ViewModel}" Style="{StaticResource SoheilSingularViewBorder}">
                <I:Interaction.Behaviors>
                    <Behavior:ValidationExceptionBehavior />
                </I:Interaction.Behaviors>
                <DockPanel D:DataContext="{D:DesignInstance Reports:CostReportsVm}">
                    <Border DockPanel.Dock="Top">
                        <WrapPanel>
                            <TextBlock Style="{StaticResource EntryBoxHeader}" Text="{Loc txtIndexType}" />
                            <ComboBox ItemsSource="{Binding Source={StaticResource CostTypes}}" SelectedValue="{Binding Path=CurrentType}">
                                <I:Interaction.Triggers>
                                    <I:EventTrigger EventName="SelectionChanged">
                                        <I:InvokeCommandAction Command="{Binding InitializeProviderCommand}"/>
                                    </I:EventTrigger>
                                </I:Interaction.Triggers>
                            </ComboBox>
                            <TextBlock Style="{StaticResource EntryBoxHeader}" Text="{Loc txtIndexInterval}" />
                            <ComboBox ItemsSource="{Binding Source={StaticResource IndexIntervals}}" SelectedValue="{Binding Path=CurrentInterval}" >
                                <I:Interaction.Triggers>
                                    <I:EventTrigger EventName="SelectionChanged">
                                        <I:InvokeCommandAction Command="{Binding InitializeProviderCommand}"/>
                                    </I:EventTrigger>
                                </I:Interaction.Triggers>
                            </ComboBox>
                            <TextBox Text="{Binding HorizontalOffset, Mode=TwoWay}"></TextBox>
                        </WrapPanel>
                    </Border>
                    <DockPanel DockPanel.Dock="Bottom">
                        <DockPanel.Resources>
                            <Common:BindingProxy x:Key="Proxy" Data="{Binding ScaleHeight}" />
                        </DockPanel.Resources>
                        <DockPanel Width="50" DockPanel.Dock="Right">
                            <Button DockPanel.Dock="Bottom" Margin="2" Height="18" Command="{Binding NavigateBackCommand}" Content="←"></Button>
                            <ItemsControl x:Name="_ScaleNums" ItemsSource="{Binding Scales}">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Style="{StaticResource EntryBoxHeader}" 
                                                   Height="{Binding Source={StaticResource Proxy}, Path=Data}" Width="50" Text="{Binding}"/>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </DockPanel>
                        <Border>
                            <Grid x:Name="adornedControl" >
                                <Grid.Resources>
                                    <Common:BindingProxy x:Key="Proxy" Data="{Binding}" />
                                </Grid.Resources>
                                <ItemsControl x:Name="_ScaleLines"
                                                    ItemsSource="{Binding ScaleLines}">
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <UniformGrid Rows="2" Columns="1" Height="{Binding Source={StaticResource Proxy}, Path=Data.ScaleHeight}">
                                                <Canvas Background="{StaticResource ThemeDarkBrush}" />
                                                <Canvas Background="{StaticResource ThemeMediumBrush}" />
                                            </UniformGrid>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                                <ItemsControl x:Name="_slider"
					                ItemsSource="{Binding Bars}"
                                    MouseMove="AreaMouseMove" MouseUp="AreaMouseUp"
                                    FlowDirection="LeftToRight"              
                                    VerticalAlignment="Bottom"
					                VirtualizingPanel.ScrollUnit="Pixel"
					                VirtualizingPanel.IsVirtualizing="True"
                                    VirtualizingPanel.VirtualizationMode="Recycling"
                                    ScrollViewer.IsDeferredScrollingEnabled="True"
					                ScrollViewer.CanContentScroll="True">
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <VirtualizingStackPanel Orientation="Horizontal"/>
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate DataType="Reports:CostBarVm">
                                            <Grid Width="80">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="*"/>
                                                    <RowDefinition Height="30"/>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="20"/>
                                                </Grid.RowDefinitions>
                                                <TextBlock HorizontalAlignment="Center" Text="{Binding Tip}" Foreground="{StaticResource TextBrush}" Grid.Row="1" Margin="1"/>
                                                <StackPanel Grid.Row="2"  >
                                                    <ItemsControl x:Name="indexBtns" Height="0" HorizontalAlignment="Center"
                                                                  ItemsSource="{Binding MenuItems}">
                                                        <ItemsControl.ItemTemplate>
                                                            <DataTemplate>
                                                                <Button Content="{Binding Text}"
                                                                        Background="{Binding Color}"
                                                                        Style="{StaticResource IndexButton}"
                                                                        Command= "{Binding Source={StaticResource Proxy}, Path=Data.NavigateInsideCommand}"
                                                                        CommandParameter="{Binding }" />
                                                            </DataTemplate>
                                                        </ItemsControl.ItemTemplate>
                                                        <ItemsControl.ItemsPanel>
                                                            <ItemsPanelTemplate>
                                                                <StackPanel Orientation="Horizontal"/>
                                                            </ItemsPanelTemplate>
                                                        </ItemsControl.ItemsPanel>
                                                    </ItemsControl>
                                                    <ToggleButton x:Name="_bar" 
                                                                  Foreground ="{Binding DetailsColor}"  
                                                                  Background="{Binding MainColor}" 
                                                                  Style="{StaticResource SimpleBar}" 
                                                                  Height="{Binding Value}" 
                                                                  Margin="5,0,5,0"
                                                                  Command="{Binding Source={StaticResource Proxy}, Path=Data.NavigateInsideCommand}"
                                                                  CommandParameter="{Binding }">
                                                    </ToggleButton>
                                                    <StackPanel.Triggers>
                                                        <EventTrigger RoutedEvent="ToggleButton.Checked" SourceName="_bar">
                                                            <BeginStoryboard>
                                                                <Storyboard>
                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="indexBtns" 
                                                                            Storyboard.TargetProperty="Height">
                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="30" />
                                                                    </DoubleAnimationUsingKeyFrames>
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </EventTrigger>
                                                        <EventTrigger RoutedEvent="ToggleButton.Unchecked" SourceName="_bar">
                                                            <BeginStoryboard>
                                                                <Storyboard>
                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="indexBtns" 
                                                                            Storyboard.TargetProperty="Height">
                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0" />
                                                                    </DoubleAnimationUsingKeyFrames>
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </EventTrigger>
                                                    </StackPanel.Triggers>
                                                </StackPanel>
                                                <Border Grid.Row="3" BorderBrush="{StaticResource ThemeLightBrush}" BorderThickness="1">
                                                    <TextBlock Text="{Binding Header}" HorizontalAlignment="Center"
                                                               Foreground="{StaticResource TextBrush}" 
                                                               Background="{StaticResource ThemeDarkBrush}" />
                                                </Border>
                                                <Canvas Grid.Row="0"/>
                                            </Grid>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                    <ItemsControl.Template>
                                        <ControlTemplate>
                                            <Border>
                                                <Virtualizing:DateTimeScrollViewer 
							                    HorizontalScrollBarVisibility="Visible" 
                                                VerticalScrollBarVisibility="Disabled"
                                                Behaviors:ScrollViewerBinding.HorizontalOffset="{Binding HorizontalOffset, Mode=TwoWay}"
							                    
							                    Padding="{TemplateBinding Control.Padding}"
							                    Focusable="False"
							                    OverridesDefaultStyle="True"
							                    Template="{StaticResource SliderTemplate}">
                                                    <ItemsPresenter SnapsToDevicePixels="True"/>
                                                </Virtualizing:DateTimeScrollViewer>
                                            </Border>
                                        </ControlTemplate>
                                    </ItemsControl.Template>
                                </ItemsControl>
                            </Grid>
                        </Border>
                    </DockPanel>
                </DockPanel>
            </Border>
        </DataTemplate>

        <!-- 5.2. Actual Cost Reports -->
        <DataTemplate x:Key="ActualCostReportTemplate" DataType="Reports:ActualCostReportsVm">
            <DataTemplate.Resources>
                <LinearGradientBrush x:Key="SlideWindowBackground" StartPoint="0,0" EndPoint="1,0.001">
                    <GradientBrush.GradientStops>
                        <GradientStopCollection>
                            <GradientStop Color="White" Offset="0" />
                            <GradientStop Color="#6FFF" Offset="0.5" />
                            <GradientStop Color="#1FFF" Offset="0.6" />
                            <GradientStop Color="Transparent" Offset="1"/>
                        </GradientStopCollection>
                    </GradientBrush.GradientStops>
                </LinearGradientBrush>
                <LinearGradientBrush x:Key="SlideWindowBorder" StartPoint="0,0" EndPoint="0,1">
                    <GradientBrush.GradientStops>
                        <GradientStopCollection>
                            <GradientStop Color="#FFF" Offset="0.0"/>
                            <GradientStop Color="#CCC" Offset="1.0"/>
                        </GradientStopCollection>
                    </GradientBrush.GradientStops>
                </LinearGradientBrush>
                <ObjectDataProvider x:Key="CostTypes"
                                    MethodName="GetValues"
                                    ObjectType="{x:Type System:Enum}">
                    <ObjectDataProvider.MethodParameters>
                        <x:Type TypeName="Common:CostType" />
                    </ObjectDataProvider.MethodParameters>
                </ObjectDataProvider>
                <ObjectDataProvider x:Key="IndexIntervals"
                            MethodName="GetValues"
                            ObjectType="{x:Type System:Enum}">
                    <ObjectDataProvider.MethodParameters>
                        <x:Type TypeName="Common:DateTimeIntervals" />
                    </ObjectDataProvider.MethodParameters>
                </ObjectDataProvider>
                <!--Slider Repeat Button-->
                <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
                    <Setter Property="SnapsToDevicePixels" Value="True"/>
                    <Setter Property="OverridesDefaultStyle" Value="true"/>
                    <Setter Property="Focusable" Value="false"/>
                    <Setter Property="Width" Value="40"/>
                    <Setter Property="Delay" Value="0"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type RepeatButton}">
                                <Rectangle Name="Border" Fill="Transparent"/>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="true">
                                        <Setter TargetName="Border" Property="Fill" Value="{StaticResource ShadowTransparent}" />
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="true">
                                        <Setter TargetName="Border" Property="Fill" Value="{StaticResource ClickedTransparent}" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
                <!--Slider Template-->
                <ControlTemplate x:Key="SliderTemplate" TargetType="{x:Type ScrollViewer}">
                    <Grid Background="{TemplateBinding Background}" Height="600" >
                        <ScrollContentPresenter 
					x:Name="PART_ScrollContentPresenter" 
					CanContentScroll="True"
					CanHorizontallyScroll="True" 
					ContentTemplate="{TemplateBinding ContentTemplate}"
					Content="{TemplateBinding Content}"
					Margin="{TemplateBinding Padding}"/>
                        <ScrollBar
					x:Name="PART_HorizontalScrollBar" 
                    VerticalAlignment="Bottom"
					AutomationProperties.AutomationId="HorizontalScrollBar" 
					Maximum="{TemplateBinding ScrollableWidth}" 
					Minimum="0" 
					Orientation="Horizontal"
					Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" 
					Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
					ViewportSize="{TemplateBinding ViewportWidth}">
                            <ScrollBar.Template>
                                <ControlTemplate TargetType="ScrollBar">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition MaxWidth="40"/>
                                            <ColumnDefinition Width="0.00001*"/>
                                            <ColumnDefinition MaxWidth="40"/>
                                        </Grid.ColumnDefinitions>
                                        <Border Grid.ColumnSpan="3" Background="#01000000" />
                                        <!--Little Window-->
                                        <Border
									Grid.Column="1"
									Cursor="ScrollWE"
									Background="{StaticResource SlideWindowBackground}"
									BorderBrush="{StaticResource SlideWindowBorder}"
									BorderThickness="2"
									CornerRadius="2"
									HorizontalAlignment="Center"
									Margin="0,-2"
									Width="{Binding RelativeSource={RelativeSource AncestorType=Virtualizing:DateTimeScrollViewer}, Path=LittleWindowWidth}">
                                        </Border>
                                        <!--Transparent Bar-->
                                        <Rectangle
									Grid.Column="1" 
									Margin="-1"
									Cursor="/Images/openhand.cur"
									Fill="Transparent"
									MouseMove="AreaMouseMove" MouseUp="AreaMouseUp"
									MouseDown="RectangleMouseDown"/>
                                        <!-- << | >> -->
                                        <RepeatButton
									Grid.Column="0"
									Cursor="ScrollW" 
									Style="{StaticResource ScrollBarLineButton}"
									Click="RepeatButtonLClick"/>
                                        <RepeatButton
									Grid.Column="3"
									Cursor="ScrollE" 
									Style="{StaticResource ScrollBarLineButton}"
									Click="RepeatButtonRClick"/>
                                    </Grid>
                                </ControlTemplate>
                            </ScrollBar.Template>
                        </ScrollBar>
                    </Grid>
                </ControlTemplate>
            </DataTemplate.Resources>
            <Border DataContext="{Binding RelativeSource={RelativeSource AncestorType=Views:SoheilSingularView}, Path=ViewModel}" Style="{StaticResource SoheilSingularViewBorder}">
                <I:Interaction.Behaviors>
                    <Behavior:ValidationExceptionBehavior />
                </I:Interaction.Behaviors>
                <DockPanel D:DataContext="{D:DesignInstance Reports:ActualCostReportsVm}">
                    <Border DockPanel.Dock="Top">
                        <WrapPanel>
                            <TextBlock Style="{StaticResource EntryBoxHeader}" Text="{Loc txtIndexType}" />
                            <ComboBox ItemsSource="{Binding Source={StaticResource CostTypes}}" SelectedValue="{Binding Path=CurrentType}">
                                <I:Interaction.Triggers>
                                    <I:EventTrigger EventName="SelectionChanged">
                                        <I:InvokeCommandAction Command="{Binding InitializeProviderCommand}"/>
                                    </I:EventTrigger>
                                </I:Interaction.Triggers>
                            </ComboBox>
                            <TextBlock Style="{StaticResource EntryBoxHeader}" Text="{Loc txtIndexInterval}" />
                            <ComboBox ItemsSource="{Binding Source={StaticResource IndexIntervals}}" SelectedValue="{Binding Path=CurrentInterval}" >
                                <I:Interaction.Triggers>
                                    <I:EventTrigger EventName="SelectionChanged">
                                        <I:InvokeCommandAction Command="{Binding InitializeProviderCommand}"/>
                                    </I:EventTrigger>
                                </I:Interaction.Triggers>
                            </ComboBox>
                            <TextBox Text="{Binding HorizontalOffset, Mode=TwoWay}"></TextBox>
                        </WrapPanel>
                    </Border>
                    <DockPanel DockPanel.Dock="Bottom">
                        <DockPanel.Resources>
                            <Common:BindingProxy x:Key="Proxy" Data="{Binding ScaleHeight}" />
                        </DockPanel.Resources>
                        <DockPanel Width="50" DockPanel.Dock="Right">
                            <Button DockPanel.Dock="Bottom" Margin="2" Height="18" Command="{Binding NavigateBackCommand}" Content="←"></Button>
                            <ItemsControl x:Name="_ScaleNums" ItemsSource="{Binding Scales}">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Style="{StaticResource EntryBoxHeader}" 
                                                   Height="{Binding Source={StaticResource Proxy}, Path=Data}" Width="50" Text="{Binding}"/>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </DockPanel>
                        <Border>
                            <Grid x:Name="adornedControl" >
                                <Grid.Resources>
                                    <Common:BindingProxy x:Key="Proxy" Data="{Binding}" />
                                </Grid.Resources>
                                <ItemsControl x:Name="_ScaleLines"
                                                    ItemsSource="{Binding ScaleLines}">
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <UniformGrid Rows="2" Columns="1" Height="{Binding Source={StaticResource Proxy}, Path=Data.ScaleHeight}">
                                                <Canvas Background="{StaticResource ThemeDarkBrush}" />
                                                <Canvas Background="{StaticResource ThemeMediumBrush}" />
                                            </UniformGrid>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                                <ItemsControl x:Name="_slider"
					                ItemsSource="{Binding Bars}"
                                    MouseMove="AreaMouseMove" MouseUp="AreaMouseUp"
                                    FlowDirection="LeftToRight"              
                                    VerticalAlignment="Bottom"
					                VirtualizingPanel.ScrollUnit="Pixel"
					                VirtualizingPanel.IsVirtualizing="True"
                                    VirtualizingPanel.VirtualizationMode="Recycling"
                                    ScrollViewer.IsDeferredScrollingEnabled="True"
					                ScrollViewer.CanContentScroll="True">
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <VirtualizingStackPanel Orientation="Horizontal"/>
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate DataType="Reports:CostBarVm">
                                            <Grid Width="80">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="*"/>
                                                    <RowDefinition Height="30"/>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="20"/>
                                                </Grid.RowDefinitions>
                                                <TextBlock HorizontalAlignment="Center" Text="{Binding Tip}" Foreground="{StaticResource TextBrush}" Grid.Row="1" Margin="1"/>
                                                <StackPanel Grid.Row="2"  >
                                                    <ItemsControl x:Name="indexBtns" Height="0" HorizontalAlignment="Center"
                                                                  ItemsSource="{Binding MenuItems}">
                                                        <ItemsControl.ItemTemplate>
                                                            <DataTemplate>
                                                                <Button Content="{Binding Text}"
                                                                        Background="{Binding Color}"
                                                                        Style="{StaticResource IndexButton}"
                                                                        Command= "{Binding Source={StaticResource Proxy}, Path=Data.NavigateInsideCommand}"
                                                                        CommandParameter="{Binding }" />
                                                            </DataTemplate>
                                                        </ItemsControl.ItemTemplate>
                                                        <ItemsControl.ItemsPanel>
                                                            <ItemsPanelTemplate>
                                                                <StackPanel Orientation="Horizontal"/>
                                                            </ItemsPanelTemplate>
                                                        </ItemsControl.ItemsPanel>
                                                    </ItemsControl>
                                                    <ToggleButton x:Name="_bar" 
                                                                  Foreground ="{Binding DetailsColor}"  
                                                                  Background="{Binding MainColor}" 
                                                                  Style="{StaticResource SimpleBar}" 
                                                                  Height="{Binding Value}" 
                                                                  Margin="5,0,5,0"
                                                                  Command="{Binding Source={StaticResource Proxy}, Path=Data.NavigateInsideCommand}"
                                                                  CommandParameter="{Binding }">
                                                    </ToggleButton>
                                                    <StackPanel.Triggers>
                                                        <EventTrigger RoutedEvent="ToggleButton.Checked" SourceName="_bar">
                                                            <BeginStoryboard>
                                                                <Storyboard>
                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="indexBtns" 
                                                                            Storyboard.TargetProperty="Height">
                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="30" />
                                                                    </DoubleAnimationUsingKeyFrames>
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </EventTrigger>
                                                        <EventTrigger RoutedEvent="ToggleButton.Unchecked" SourceName="_bar">
                                                            <BeginStoryboard>
                                                                <Storyboard>
                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="indexBtns" 
                                                                            Storyboard.TargetProperty="Height">
                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0" />
                                                                    </DoubleAnimationUsingKeyFrames>
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </EventTrigger>
                                                    </StackPanel.Triggers>
                                                </StackPanel>
                                                <Border Grid.Row="3" BorderBrush="{StaticResource ThemeLightBrush}" BorderThickness="1">
                                                    <TextBlock Text="{Binding Header}" HorizontalAlignment="Center"
                                                               Foreground="{StaticResource TextBrush}" 
                                                               Background="{StaticResource ThemeDarkBrush}" />
                                                </Border>
                                                <Canvas Grid.Row="0"/>
                                            </Grid>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                    <ItemsControl.Template>
                                        <ControlTemplate>
                                            <Border>
                                                <Virtualizing:DateTimeScrollViewer 
							                    HorizontalScrollBarVisibility="Visible" 
                                                VerticalScrollBarVisibility="Disabled"
                                                Behaviors:ScrollViewerBinding.HorizontalOffset="{Binding HorizontalOffset, Mode=TwoWay}"
							                    
							                    Padding="{TemplateBinding Control.Padding}"
							                    Focusable="False"
							                    OverridesDefaultStyle="True"
							                    Template="{StaticResource SliderTemplate}">
                                                        <ItemsPresenter SnapsToDevicePixels="True"/>
                                                </Virtualizing:DateTimeScrollViewer>
                                                </Border>
                                            </ControlTemplate>
                                        </ItemsControl.Template>
                                    </ItemsControl>
                            </Grid>
                        </Border>
                    </DockPanel>
                </DockPanel>
            </Border>
        </DataTemplate>


		
        <!--................................................ 4.Options ...............................................-->

        <!-- 5.1. Settings and Configurations -->

		
        <!-- 5.2. Help and Support  -->

        <!-- 5.3. About  -->

        <!--..........................................................................................................-->
		
		<TemplateSelectors:SingularViewListSelector x:Key="ListTemplateSelector"
													IndicesVmTemplate="{StaticResource IndexTemplate}"
													PPTableVmTemplate="{StaticResource PPTableTemplate}"
													SetupTimesVmTemplate="{StaticResource SetupTimesTemplate}"
													CostReportsVmTemplate="{StaticResource CostReportTemplate}"
													ActualCostReportsVmTemplate="{StaticResource ActualCostReportTemplate}"/>
	</UserControl.Resources>
    <Grid>
        <Border Height="{Binding RelativeSource={RelativeSource AncestorType=Grid}, Path=ActualHeight}"
                HorizontalAlignment="Stretch"
                BorderThickness="0">
            <Border BorderBrush="{StaticResource ThemeDarkBrush}" BorderThickness="1">
                <ContentControl x:Name="_itemContentView" 
                                Content="{Binding RelativeSource={RelativeSource AncestorType=Views:SoheilSingularView}, 
                                Path=ViewModel, Mode=TwoWay }"
                                ContentTemplateSelector="{StaticResource ListTemplateSelector}"/>
            </Border>
        </Border>
    </Grid>
</UserControl>
