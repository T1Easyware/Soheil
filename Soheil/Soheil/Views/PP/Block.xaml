<UserControl x:Class="Soheil.Views.PP.Block"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			xmlns:vm="clr-namespace:Soheil.Core.ViewModels.PP;assembly=Soheil.Core"
			xmlns:report="clr-namespace:Soheil.Core.ViewModels.PP.Report;assembly=Soheil.Core"
			 xmlns:common="clr-namespace:Soheil.Common;assembly=Soheil.Common"
			 xmlns:local="clr-namespace:Soheil.Views.PP"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:I="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
			 x:Name="root"
             mc:Ignorable="d" d:DesignHeight="50" d:DesignWidth="300">
	<UserControl.Resources>
		
		<Style x:Key="taskOverlay" TargetType="Button">
			<Setter Property="OverridesDefaultStyle" Value="True"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<!-- task overlay template -->
						<Border BorderBrush="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=DataContext.ForeColor}" BorderThickness="0,0,1,0">
							<Border.Background>
								<LinearGradientBrush x:Name="taskBackgroundColor" Opacity="0" StartPoint="0,0" EndPoint="0,1">
									<GradientStop Color="#DDD" Offset="0" />
									<GradientStop Color="#5FFF" Offset="0.15" />
									<GradientStop Color="Transparent" Offset="0.5" x:Name="taskBackgroundMainColor"/>
									<GradientStop Color="#5FFF" Offset="0.95" />
									<GradientStop Color="#DDD" Offset="1" />
								</LinearGradientBrush>
							</Border.Background>
							<ContentControl Content="{TemplateBinding Content}" Opacity="0.5" x:Name="content"/>
						</Border>
						<ControlTemplate.Triggers>
							<EventTrigger RoutedEvent="MouseEnter">
								<BeginStoryboard>
									<Storyboard Duration="0:0:0.1">
										<DoubleAnimation Storyboard.TargetName="content" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.1"/>
										<DoubleAnimation Storyboard.TargetName="taskBackgroundColor" Storyboard.TargetProperty="Opacity" To="0.6" Duration="0:0:0.1"/>
									</Storyboard>
								</BeginStoryboard>
							</EventTrigger>
							<EventTrigger RoutedEvent="MouseLeave">
								<BeginStoryboard>
									<Storyboard Duration="0:0:0.1">
										<DoubleAnimation Storyboard.TargetName="content" Storyboard.TargetProperty="Opacity" To="0.5" Duration="0:0:0.1"/>
										<DoubleAnimation Storyboard.TargetName="taskBackgroundColor" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.1"/>
									</Storyboard>
								</BeginStoryboard>
							</EventTrigger>
							<EventTrigger RoutedEvent="PreviewMouseLeftButtonDown">
								<BeginStoryboard>
									<Storyboard Duration="0:0:0.1">
										<DoubleAnimation Storyboard.TargetName="taskBackgroundColor" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.05"/>
										<ColorAnimation Storyboard.TargetName="taskBackgroundMainColor" Storyboard.TargetProperty="Color" To="#9FFF" Duration="0:0:0.1"/>
									</Storyboard>
								</BeginStoryboard>
							</EventTrigger>
							<EventTrigger RoutedEvent="PreviewMouseLeftButtonUp">
								<BeginStoryboard>
									<Storyboard Duration="0:0:0.1">
										<ColorAnimation Storyboard.TargetName="taskBackgroundMainColor" Storyboard.TargetProperty="Color" To="Transparent" Duration="0:0:0.1"/>
									</Storyboard>
								</BeginStoryboard>
							</EventTrigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
	</UserControl.Resources>
	<I:Interaction.Triggers>
		<I:EventTrigger EventName="MouseDoubleClick">
			<I:InvokeCommandAction Command="{Binding EditReportCommand}"/>
		</I:EventTrigger>
	</I:Interaction.Triggers>
	<UserControl.Margin>
		<MultiBinding Converter="{StaticResource ppBlockBorderMarginConverter}">
			<Binding Path="StartDateTime"/>
			<Binding ElementName="root" Path="PPTable.HourZoom"/>
			<Binding Path="VIndex"/>
		</MultiBinding>
	</UserControl.Margin>
	<UserControl.Width>
		<MultiBinding Converter="{StaticResource ppTaskBorderWidthConverter}">
			<Binding Path="Duration"/>
			<Binding ElementName="root" Path="PPTable.HourZoom"/>
		</MultiBinding>
	</UserControl.Width>
	
	
	<Border Background="{Binding ProductColor, Converter={StaticResource colorFixer}}" BorderBrush="{Binding Message.HasException, Converter={StaticResource hasErrorToShadowColor}}" BorderThickness="1" CornerRadius="2" VerticalAlignment="Stretch" Height="40" Margin="0,1"
			ToolTipService.ShowDuration="60000" ToolTipService.InitialShowDelay="100" ToolTipService.HasDropShadow="True" Tag="{Binding ElementName=lgb}">

		<!-- RightClick menu -->
		<Border.ContextMenu>
			<ContextMenu FlowDirection="RightToLeft">
				<MenuItem Header="گزارش" Command="{Binding EditReportCommand}"/>
				<MenuItem Header="بارگذاری مجدد" Command="{Binding ReloadBlockCommand}"/>
				<Separator/>
				<MenuItem Header="ویرایش Task" Command="{Binding EditItemCommand}"/>
				<MenuItem Header="افزودن Task به ویرایشگر" Command="{Binding AddBlockToEditorCommand}"/>
				<MenuItem Header="حذف Task" Command="{Binding DeleteItemCommand}"/>
				<MenuItem Header="حذف Task و گزارشها" Command="{Binding DeleteBlockWithReportsCommand}"/>
				<Separator/>
				<MenuItem Header="ویرایش Job" Command="{Binding EditJobCommand}"/>
				<MenuItem Header="افزودن Job به ویرایشگر" Command="{Binding AddJobToEditorCommand}"/>
				<MenuItem Header="حذف Job" Command="{Binding DeleteJobCommand}"/>
			</ContextMenu>
		</Border.ContextMenu>
		
		<!-- Block Tooltip -->
		<Border.ToolTip>
			<StackPanel Margin="2" FlowDirection="RightToLeft">
				<StackPanel.Resources>
					<Style x:Key="headers" TargetType="TextBlock">
						<Setter Property="Foreground" Value="Gray"/>
						<Setter Property="Margin" Value="0,11,0,0"/>
						<Setter Property="FontSize" Value="12"/>
					</Style>
					<Style x:Key="titles" TargetType="TextBlock">
						<Setter Property="Foreground" Value="Gray"/>
						<Setter Property="Margin" Value="4,0"/>
						<Setter Property="FontSize" Value="12"/>
						<Setter Property="VerticalAlignment" Value="Center"/>
					</Style>
					<Style TargetType="TextBlock">
						<Setter Property="Foreground" Value="Black"/>
						<Setter Property="Margin" Value="4,0"/>
						<Setter Property="VerticalAlignment" Value="Center"/>
						<Setter Property="HorizontalAlignment" Value="Right"/>
						<Setter Property="FontSize" Value="14"/>
						<Setter Property="FontWeight" Value="Bold"/>
					</Style>
				</StackPanel.Resources>

				<TextBlock Text="{Loc txtProductPlan}" Style="{StaticResource headers}" Margin="0"/>
				<Separator/>
				
				<DockPanel>
					<Image Style="{StaticResource TaskImage}"/>
					<TextBlock Text="{Loc ttCode}" Style="{StaticResource titles}"/>
					<TextBlock Text="{Loc ttBlock}" Style="{StaticResource titles}"/>
					<TextBlock Text="{Binding Model.Code}" FlowDirection="LeftToRight"/>
				</DockPanel>
				<StackPanel Visibility="{Binding Job, Converter={StaticResource isNotNullToVisibility}}">
					<DockPanel>
						<Image Style="{StaticResource JobImage}"/>
						<TextBlock Text="{Loc ttHasJob}" Style="{StaticResource titles}"/>
						<TextBlock Text="{Binding Job.Code}" FlowDirection="LeftToRight"/>
					</DockPanel>
					<DockPanel>
						<TextBlock Text="{Loc txtDescription}" Style="{StaticResource titles}"/>
						<TextBlock Text="{Binding Job.Description}"/>
					</DockPanel>
				</StackPanel>

				<TextBlock Text="{Loc txtTime}" Style="{StaticResource headers}"/>
				<Separator/>

				<DockPanel>
					<TextBlock Text="{Loc txtStartDate}" Style="{StaticResource titles}"/>
					<TextBlock Text="{Binding StartDateTime, Converter={StaticResource dateTimeToCompactConverter}}" FlowDirection="RightToLeft"/>
				</DockPanel>
				<DockPanel>
					<TextBlock Text="{Loc txtEndDate}" Style="{StaticResource titles}"/>
					<TextBlock Text="{Binding Model.EndDateTime, Converter={StaticResource dateTimeToCompactConverter}}" FlowDirection="RightToLeft"/>
				</DockPanel>
				<DockPanel>
					<TextBlock Text="{Loc txtDuration}" Style="{StaticResource titles}"/>
					<TextBlock Text="{Binding DurationSeconds, Converter={StaticResource secondsToStringConverter}}" FlowDirection="LeftToRight"/>
				</DockPanel>

				<TextBlock Text="{Loc txtProduct}" Style="{StaticResource headers}"/>
				<Separator/>
				
				<DockPanel LastChildFill="False">
					<TextBlock Text="{Binding ProductName}" DockPanel.Dock="Left"/>
					<TextBlock Text="{Binding ProductCode}" DockPanel.Dock="Right" FlowDirection="LeftToRight"/>
				</DockPanel>
				<DockPanel LastChildFill="False" Visibility="{Binding IsRework, Converter={StaticResource booleanToVisibilityConverter}}">
					<Image Style="{StaticResource ReworkImage}" DockPanel.Dock="Left"/>
					<TextBlock Text="{Binding Model.StateStation.State.OnProductRework.Rework.Name}" DockPanel.Dock="Left"/>
					<TextBlock Text="{Binding Model.StateStation.State.OnProductRework.Rework.Code}" DockPanel.Dock="Right" FlowDirection="LeftToRight"/>
				</DockPanel>

				<TextBlock Text="{Loc txtProductPlan}" Style="{StaticResource headers}"/>
				<Separator/>

				<DockPanel>
					<Image Style="{StaticResource TargetPointImage}"/>
					<TextBlock Text="{Loc txtTargetPoint}" Style="{StaticResource titles}"/>
					<TextBlock Text="{Binding BlockTargetPoint}"/>
				</DockPanel>
				<DockPanel>
					<Image Style="{StaticResource ProducedG1Image}"/>
					<TextBlock Text="{Loc txtProducedG1}" Style="{StaticResource titles}"/>
					<TextBlock Text="{Binding BlockProducedG1}"/>
				</DockPanel>

				<TextBlock Text="{Loc txtReports}" Style="{StaticResource headers}"/>
				<Separator/>
				
				<DockPanel Visibility="{Binding IsReportFilled, Converter={StaticResource booleanToInvisibilityConverter}}">
					<Image Style="{StaticResource ReportWarningImage}"/>
					<TextBlock Text="{Loc ttReportFillPercent}" Style="{StaticResource titles}"/>
					<TextBlock Text="{Binding ReportFillPercent}"/>
				</DockPanel>
				<DockPanel Visibility="{Binding IsReportFilled, Converter={StaticResource booleanToVisibilityConverter}}">
					<Image Style="{StaticResource ReportImage}"/>
					<TextBlock Text="{Loc ttReportCompleted}"/>
				</DockPanel>

			</StackPanel>
		</Border.ToolTip>
		
		<!-- main content -->
		<Grid ClipToBounds="False" TextBlock.Foreground="{Binding ForeColor}">
			<Rectangle Width="{Binding RelativeSource={RelativeSource AncestorType=Border}, Path=ActualWidth}">
				<Rectangle.Fill>
					<LinearGradientBrush StartPoint="0,0" EndPoint="1,0" x:Name="lgb">
						<GradientStop Color="Transparent" Offset="-.5"/>
						<GradientStop Color="#9FFF" Offset="-.4"/>
						<GradientStop Color="Transparent" Offset=".5"/>
						<GradientStop Color="#9FFF" Offset="1.4"/>
						<GradientStop Color="Transparent" Offset="1.5"/>
					</LinearGradientBrush>
				</Rectangle.Fill>
			</Rectangle>
			
			<!-- block background texts -->
			<StackPanel Orientation="Horizontal" VerticalAlignment="Bottom" HorizontalAlignment="Center" ClipToBounds="True">
				<DockPanel Visibility="{Binding IsReportFilled, Converter={StaticResource booleanToInvisibilityConverter}}" Margin="0,0,2,0">
					<TextBlock Text="{Binding ReportFillPercent}" VerticalAlignment="Center"/>
					<Image Style="{StaticResource ReportWarningImage}" VerticalAlignment="Center"/>
				</DockPanel>
				<Image Style="{StaticResource JobImage}" Margin="2,0" Visibility="{Binding Job, Converter={StaticResource isNotNullToVisibility}}"/>
				<TextBlock Text="{Binding Code}" Height="16" Visibility="{Binding Job, Converter={StaticResource isNotNullToVisibility}}"/>
				<Image Style="{StaticResource ReworkImage}" Margin="2,0" Visibility="{Binding IsRework, Converter={StaticResource booleanToVisibilityConverter}}"/>
				<TextBlock Text="{Binding ProductCode}" Visibility="{Binding ElementName=root, Path=PPTable.ShowProductCodes, Converter={StaticResource booleanToVisibilityConverter}}" TextWrapping="NoWrap" VerticalAlignment="Center"/>
				<TextBlock Text="{Binding ProductName}" Visibility="{Binding ElementName=root, Path=PPTable.ShowProductCodes, Converter={StaticResource booleanToInvisibilityConverter}}" TextWrapping="NoWrap" VerticalAlignment="Center"/>
				<Image Style="{StaticResource TargetPointImage}" VerticalAlignment="Center"/>
				<TextBlock Text="{Binding BlockTargetPoint}" VerticalAlignment="Center"/>
				<Image Style="{StaticResource ProducedG1Image}" VerticalAlignment="Center"/>
				<TextBlock Text="{Binding BlockProducedG1}" VerticalAlignment="Center"/>
			</StackPanel>

			<Button Margin="0,0,0,20" Style="{StaticResource taskOverlay}" Command="{Binding EditReportCommand}" x:Name="reportButton" Opacity="0">
				<TextBlock Text="گزارش تولید" HorizontalAlignment="Center"/>
			</Button>


			<!-- Show Insert Setup Button -->
			<Button Margin="-20,0" HorizontalAlignment="Left" ClipToBounds="False" Command="{Binding InsertSetupBefore}">
				<Button.Visibility>
					<MultiBinding Converter="{StaticResource logicalAndToVisibility}">
						<Binding ElementName="root" Path="PPTable.ShowInsertSetupButton"/>
						<Binding Path="CanAddSetupBefore"/>
					</MultiBinding>
				</Button.Visibility>
				<Button.Template>
					<ControlTemplate>
						<Grid Opacity="0.5" x:Name="grid">
							<Ellipse x:Name="ellipse" Height="40" Width="40" Fill="#222" Stroke="#444"/>
							<Image Style="{StaticResource AddSetupImage}"/>
							<Grid.Triggers>
								<EventTrigger RoutedEvent="MouseEnter">
									<BeginStoryboard>
										<Storyboard Duration="0:0:0.2">
											<DoubleAnimation Storyboard.TargetName="grid" Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" To="1"/>
										</Storyboard>
									</BeginStoryboard>
								</EventTrigger>
								<EventTrigger RoutedEvent="MouseLeave">
									<BeginStoryboard>
										<Storyboard Duration="0:0:0.3">
											<DoubleAnimation Storyboard.TargetName="grid" Storyboard.TargetProperty="Opacity" Duration="0:0:0.3" To="0.5"/>
										</Storyboard>
									</BeginStoryboard>
								</EventTrigger>
								<EventTrigger RoutedEvent="MouseDown">
									<BeginStoryboard>
										<Storyboard>
											<ColorAnimation Storyboard.TargetName="ellipse" Storyboard.TargetProperty="(Ellipse.Fill).(SolidColorBrush.Color)" From="#0FF" To="#222" Duration="0:0:0.5"/>
										</Storyboard>
									</BeginStoryboard>
								</EventTrigger>
							</Grid.Triggers>
						</Grid>
					</ControlTemplate>
				</Button.Template>
				<Button.ToolTip>
					<StackPanel>
						<WrapPanel>
							<Image Style="{StaticResource AddSetupImage}"/>
							<TextBlock Text="درج خودکار آماده سازی جدید در اینجا" VerticalAlignment="Bottom"/>
						</WrapPanel>
						<!--TextBlock Foreground="DarkGray" FontSize="10" Text="برای درج خودکار، دوبار کلیک کنید"/-->
						<!--TextBlock Foreground="DarkGray" FontSize="10" Text="برای درج دستی، یکبار کلیک کنید و سپس روی محصول قبلی کلیک کنید"/-->
						<TextBlock Foreground="DarkGray" FontSize="10" Text="آیتمهایی که در این ایستگاه بعد از این آماده سازی قرار دارند، بطور خودکار در زمان جابجا می شوند"/>
					</StackPanel>
				</Button.ToolTip>
			</Button>
			<Popup>
				
			</Popup>
		</Grid>

		<Border.Triggers>
			<EventTrigger RoutedEvent="MouseEnter">
				<BeginStoryboard>
					<Storyboard Duration="0:0:.1">
						<DoubleAnimation Storyboard.TargetName="reportButton" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:.1"/>
					</Storyboard>
				</BeginStoryboard>
			</EventTrigger>
			<EventTrigger RoutedEvent="MouseLeave">
				<BeginStoryboard>
					<Storyboard Duration="0:0:.3">
						<DoubleAnimation Storyboard.TargetName="reportButton" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:.3"/>
					</Storyboard>
				</BeginStoryboard>
			</EventTrigger>
		</Border.Triggers>
		<!-- Triggers for different view modes -->
		<Border.Style>
			<Style TargetType="Border">
				<Style.Triggers>
					<!-- PPTask is in Edit mode -->
					<DataTrigger Binding="{Binding IsEditMode}" Value="True">
						<Setter Property="Border.BorderBrush">
							<Setter.Value>
								<SolidColorBrush Color="Yellow"/>
							</Setter.Value>
						</Setter>
					</DataTrigger>
					<!-- PPTask is in JobSelected mode -->
					<DataTrigger Binding="{Binding IsJobSelected}" Value="True">
						<Setter Property="BorderBrush">
							<Setter.Value>
								<LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
									<GradientStop Color="Magenta" Offset="0.4"/>
									<GradientStop Color="Cyan" Offset="0.6"/>
								</LinearGradientBrush>
							</Setter.Value>
						</Setter>
						<Setter Property="BorderThickness" Value="2"/>
					</DataTrigger>
					<!-- Block Simple View (shows tasks inside-->
					<DataTrigger Binding="{Binding ViewMode}" Value="Simple">
					</DataTrigger>
					<!-- PPTask Report Detailed View -->
					<DataTrigger Binding="{Binding ViewMode}" Value="Report">
						<DataTrigger.EnterActions>
							<BeginStoryboard x:Name="bsb">
								<Storyboard>
									<DoubleAnimation DecelerationRatio="1" Storyboard.TargetProperty="Tag.GradientStops[1].Offset" Duration="0:0:2" AutoReverse="False" RepeatBehavior="Forever" From="-.4" To="1.4"/>
									<ColorAnimation  DecelerationRatio="0" Storyboard.TargetProperty="Tag.GradientStops[2].Color"  Duration="0:0:1"  AutoReverse="True" RepeatBehavior="Forever" From="Transparent" To="#BFFF"/>
									<DoubleAnimation DecelerationRatio="1" Storyboard.TargetProperty="Tag.GradientStops[3].Offset" Duration="0:0:2" AutoReverse="False" RepeatBehavior="Forever" From="1.4" To="-.4"/>
								</Storyboard>
							</BeginStoryboard>
						</DataTrigger.EnterActions>
						<DataTrigger.ExitActions>
							<StopStoryboard BeginStoryboardName="bsb"/>
						</DataTrigger.ExitActions>
					</DataTrigger>
				</Style.Triggers>
			</Style>
		</Border.Style>
	</Border>
</UserControl>
