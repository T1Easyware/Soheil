<UserControl x:Class="Soheil.Views.PP.Block"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			xmlns:vm="clr-namespace:Soheil.Core.ViewModels.PP;assembly=Soheil.Core"
			xmlns:report="clr-namespace:Soheil.Core.ViewModels.PP.Report;assembly=Soheil.Core"
			 xmlns:local="clr-namespace:Soheil.Views.PP"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:I="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
			 x:Name="root"
             mc:Ignorable="d" d:DesignHeight="50" d:DesignWidth="300">
	<I:Interaction.Triggers>
		<I:EventTrigger EventName="MouseDoubleClick">
			<I:InvokeCommandAction Command="{Binding EditReportCommand}"/>
		</I:EventTrigger>
	</I:Interaction.Triggers>
	<UserControl.Margin>
		<MultiBinding Converter="{StaticResource ppTaskBorderMarginConverter}">
			<Binding Path="StartDateTime"/>
			<Binding ElementName="root" Path="PPTable.HourZoom"/>
		</MultiBinding>
	</UserControl.Margin>
	<UserControl.Width>
		<MultiBinding Converter="{StaticResource ppTaskBorderWidthConverter}">
			<Binding Path="Duration"/>
			<Binding ElementName="root" Path="PPTable.HourZoom"/>
		</MultiBinding>
	</UserControl.Width>
	<Border Background="{Binding ProductColor, Converter={StaticResource colorFixer}}" BorderBrush="Black" BorderThickness="1" CornerRadius="2" VerticalAlignment="Stretch" Height="40" Margin="0,1">
		<Border.ContextMenu>
			<ContextMenu FlowDirection="RightToLeft">
				<MenuItem Header="گزارش" Command="{Binding EditReportCommand}"/>
				<MenuItem Header="بارگذاری مجدد" Command="{Binding ReloadBlockCommand}"/>
				<Separator/>
				<MenuItem Header="ویرایش Task" Command="{Binding EditItemCommand}"/>
				<MenuItem Header="افزودن Task به ویرایشگر" Command="{Binding AddBlockToEditorCommand}"/>
				<MenuItem Header="حذف Task" Command="{Binding DeleteItemCommand}"/>
				<Separator/>
				<MenuItem Header="ویرایش Job" Command="{Binding EditJobCommand}"/>
				<MenuItem Header="افزودن Job به ویرایشگر" Command="{Binding AddJobToEditorCommand}"/>
				<MenuItem Header="حذف Job" Command="{Binding DeleteJobCommand}"/>
			</ContextMenu>
		</Border.ContextMenu>
		<Border.Effect>
			<DropShadowEffect Opacity="0.8" ShadowDepth="0" Color="{Binding Message.HasException, Converter={StaticResource hasErrorToShadowColor}}"/>
		</Border.Effect>
		<Border.ToolTip>
			<StackPanel Margin="2" FlowDirection="RightToLeft">
				<TextBlock Text="{Loc ttBlock}" HorizontalAlignment="Center"/>
				<Separator/>
				
				<DockPanel>
					<Image Style="{StaticResource TaskImage}" Margin="4,0"/>
					<TextBlock Text="{Loc txtCode}" VerticalAlignment="Center"/>
					<TextBlock Text="{Binding Code}" VerticalAlignment="Center" Margin="4,0"/>
				</DockPanel>

				<DockPanel Visibility="{Binding Job, Converter={StaticResource isNotNullToVisibility}}">
					<Image Style="{StaticResource JobImage}" Margin="4,0"/>
					<TextBlock Text="{Loc ttHasJob}" VerticalAlignment="Center"/>
					<TextBlock Text="{Binding Job.Description}" VerticalAlignment="Center" Margin="4,0"/>
				</DockPanel>

				<DockPanel>
					<TextBlock Text="{Loc txtStartDate}" VerticalAlignment="Center"/>
					<TextBlock Text="{Binding StartDateTime}" VerticalAlignment="Center" Margin="4,0"/>
				</DockPanel>
				<DockPanel>
					<TextBlock Text="{Loc txtEndDate}" VerticalAlignment="Center"/>
					<TextBlock Text="{Binding EndDateTime}" VerticalAlignment="Center" Margin="4,0"/>
				</DockPanel>
				
				<DockPanel>
					<Image Style="{StaticResource ReworkImage}" Margin="4,0" Visibility="{Binding IsRework, Converter={StaticResource booleanToVisibilityConverter}}"/>
					<TextBlock Text="{Binding ProductCode}" VerticalAlignment="Center"/>
					<TextBlock Text="{Binding ProductName}" VerticalAlignment="Center" Margin="4,0"/>
				</DockPanel>
				
				<Separator/>

				<DockPanel>
					<Image Style="{StaticResource TargetPointImage}" Margin="4,0" VerticalAlignment="Center"/>
					<TextBlock Text="{Loc txtTargetPoint}" VerticalAlignment="Center"/>
					<TextBlock Text="{Binding BlockTargetPoint}" VerticalAlignment="Center" Margin="4,0"/>
				</DockPanel>
				<DockPanel>
					<Image Style="{StaticResource ProducedG1Image}" Margin="4,0" VerticalAlignment="Center"/>
					<TextBlock Text="{Loc txtProducedG1}" VerticalAlignment="Center"/>
					<TextBlock Text="{Binding BlockProducedG1}" VerticalAlignment="Center" Margin="4,0"/>
				</DockPanel>

				<DockPanel Visibility="{Binding IsReportFilled, Converter={StaticResource booleanToInvisibilityConverter}}">
					<Image Style="{StaticResource ReportWarningImage}" Margin="4,0"/>
					<TextBlock Text="{Loc ttReportFillPercent}" VerticalAlignment="Center"/>
					<TextBlock Text="{Binding ReportFillPercent}" VerticalAlignment="Center" Margin="4,0"/>
				</DockPanel>
				<DockPanel Visibility="{Binding IsReportFilled, Converter={StaticResource booleanToVisibilityConverter}}">
					<Image Style="{StaticResource ReportImage}" Margin="4,0"/>
					<TextBlock Text="{Loc ttReportCompleted}" VerticalAlignment="Center"/>
				</DockPanel>

			</StackPanel>
		</Border.ToolTip>
		<!-- main content -->
		<Grid ClipToBounds="False" TextBlock.Foreground="{Binding ForeColor}">
			<!-- block background texts -->
			<WrapPanel VerticalAlignment="Bottom" HorizontalAlignment="Center">
				<DockPanel Visibility="{Binding IsReportFilled, Converter={StaticResource booleanToInvisibilityConverter}}" Background="#4FA4">
					<Image Style="{StaticResource ReportWarningImage}" DockPanel.Dock="Left"/>
					<TextBlock Text="{Binding ReportFillPercent}" Height="15" DockPanel.Dock="Left"/>
				</DockPanel>
				<Image Style="{StaticResource JobImage}" Margin="2,0" Visibility="{Binding Job, Converter={StaticResource isNotNullToVisibility}}"/>
				<TextBlock Text="{Binding Code}" Height="16" Visibility="{Binding Job, Converter={StaticResource isNotNullToVisibility}}"/>
				<Image Style="{StaticResource ReworkImage}" Margin="2,0" Visibility="{Binding IsRework, Converter={StaticResource booleanToVisibilityConverter}}"/>
				<TextBlock Text="{Binding ProductCode}" TextWrapping="NoWrap" Height="15" Visibility="{Binding ElementName=root, Path=PPTable.ShowProductCodes, Converter={StaticResource booleanToVisibilityConverter}}"/>
				<TextBlock Text="{Binding ProductName}" TextWrapping="NoWrap" Height="15" Visibility="{Binding ElementName=root, Path=PPTable.ShowProductCodes, Converter={StaticResource booleanToInvisibilityConverter}}"/>
				<DockPanel VerticalAlignment="Top" Margin="2,0">
					<Image Style="{StaticResource TargetPointImage}" VerticalAlignment="Center" DockPanel.Dock="Left"/>
					<TextBlock Text="{Binding BlockTargetPoint}" Height="15"/>
				</DockPanel>
				<DockPanel VerticalAlignment="Top" Margin="2,0">
					<Image Style="{StaticResource ProducedG1Image}" VerticalAlignment="Center" DockPanel.Dock="Left"/>
					<TextBlock Text="{Binding BlockProducedG1}" Height="15"/>
				</DockPanel>
			</WrapPanel>
			<!-- task list inside a block -->
			<ItemsControl ItemsSource="{Binding TaskList}">
				<ItemsControl.ItemTemplate>
					<DataTemplate>
						<!-- task separator -->
						<Border BorderBrush="Silver" BorderThickness="0,0,1,0" Margin="0,5">
							<Border.Width>
								<MultiBinding Converter="{StaticResource ppTaskBorderWidthConverter}">
									<Binding Path="Duration"/>
									<Binding ElementName="root" Path="PPTable.HourZoom"/>
								</MultiBinding>
							</Border.Width>
							<Border BorderBrush="WhiteSmoke" BorderThickness="0,0,1,0">
								<Grid>
									<!-- taskBackgroundTexts (TP, ProducedG1, OperCount) -->
									<DockPanel VerticalAlignment="Top" HorizontalAlignment="Center" x:Name="taskBackgroundTexts" ClipToBounds="True">
										<Image Style="{StaticResource TargetPointImage}" VerticalAlignment="Center" DockPanel.Dock="Left"/>
										<TextBlock Text="{Binding TaskTargetPoint}" Height="15" DockPanel.Dock="Left"/>
										<Image Style="{StaticResource ProducedG1Image}" VerticalAlignment="Center" DockPanel.Dock="Left"/>
										<TextBlock Text="{Binding TaskProducedG1}" Height="15" DockPanel.Dock="Left"/>
										<Image Style="{StaticResource OperatorImage}" VerticalAlignment="Center" DockPanel.Dock="Left"/>
										<TextBlock Text="{Binding TaskOperatorCount}" Height="15" DockPanel.Dock="Left"/>
									</DockPanel>
									<!-- taskReports (inside each task) -->
									<ItemsControl ItemsSource="{Binding TaskReports}" Opacity="0" x:Name="taskReports" Loaded="TaskReports_Loaded" Unloaded="TaskReports_Unloaded">
										<ItemsControl.Resources>
											<!-- taskReport holder -->
											<DataTemplate DataType="{x:Type report:TaskReportHolderVm}">
												<Button Command="{Binding FocusCommand}">
													<Button.Width>
														<MultiBinding Converter="{StaticResource ppTaskBorderWidthConverter}">
															<Binding Path="Duration"/>
															<Binding ElementName="root" Path="PPTable.HourZoom"/>
														</MultiBinding>
													</Button.Width>
													<StackPanel>
														<Image Style="{StaticResource ReportImage}" x:Name="reportImage" HorizontalAlignment="Left"/>
														<TextBlock Text="{Binding DurationSeconds, Converter={StaticResource secondsToStringConverter}}" HorizontalAlignment="Left"/>
													</StackPanel>
												</Button>
											</DataTemplate>
											<!-- taskReport -->
											<DataTemplate DataType="{x:Type report:TaskReportVm}">
												<Grid>
													<Grid.Width>
														<MultiBinding Converter="{StaticResource ppTaskBorderWidthConverter}">
															<Binding Path="Duration"/>
															<Binding ElementName="root" Path="PPTable.HourZoom"/>
														</MultiBinding>
													</Grid.Width>
													<Border BorderThickness="1,0" BorderBrush="Silver">
														<Border.ToolTip>
															<StackPanel>
																<TextBlock Text="گزارش تولید"/>
																<Image Style="{StaticResource ReportImage}"/>
																<WrapPanel>
																	<TextBlock Text="مدت"/>
																	<TextBlock Text="{Binding DurationSeconds, Converter={StaticResource secondsToStringConverter}}"/>
																</WrapPanel>
																<WrapPanel>
																	<TextBlock Text="شروع"/>
																	<TextBlock Text="{Binding StartDate, Converter={StaticResource dateToLocalStringConverter}}"/>
																	<TextBlock Text="{Binding StartTime, Converter={StaticResource timeSpanToStringConverter}}"/>
																</WrapPanel>
																<WrapPanel>
																	<TextBlock Text="پایان"/>
																	<TextBlock Text="{Binding EndDate, Converter={StaticResource dateToLocalStringConverter}}"/>
																	<TextBlock Text="{Binding EndTime, Converter={StaticResource timeSpanToStringConverter}}"/>
																</WrapPanel>
																<WrapPanel>
																	<TextBlock Text="هدف"/>
																	<TextBlock Text="{Binding TargetPoint}"/>
																</WrapPanel>
																<WrapPanel>
																	<TextBlock Text="تولید سالم"/>
																	<TextBlock Text="{Binding ProducedG1}"/>
																</WrapPanel>
															</StackPanel>
														</Border.ToolTip>
														<StackPanel>
															<Image Style="{StaticResource ReportImage}" x:Name="reportImage" HorizontalAlignment="Left"/>
															<TextBlock Text="{Binding DurationSeconds, Converter={StaticResource secondsToStringConverter}}" HorizontalAlignment="Left"/>
														</StackPanel>
													</Border>
													<Button Height="20" Width="20" Command="{Binding OpenCommand}" HorizontalAlignment="Right" VerticalAlignment="Top">
														<Image Style="{StaticResource Delete16Image}"/>
													</Button>
												</Grid>
											</DataTemplate>
										</ItemsControl.Resources>
										<ItemsControl.ItemsPanel>
											<ItemsPanelTemplate>
												<StackPanel Orientation="Horizontal"/>
											</ItemsPanelTemplate>
										</ItemsControl.ItemsPanel>
									</ItemsControl>
								</Grid>
							</Border>
						</Border>
					</DataTemplate>
				</ItemsControl.ItemTemplate>
				<ItemsControl.ItemsPanel>
					<ItemsPanelTemplate>
						<StackPanel Orientation="Horizontal"/>
					</ItemsPanelTemplate>
				</ItemsControl.ItemsPanel>
			</ItemsControl>
			<!-- Show Insert Setup Button -->
			<Button Margin="-20,0" HorizontalAlignment="Left" ClipToBounds="False"  Command="{Binding InsertSetupBefore}">
				<Button.Visibility>
					<MultiBinding Converter="{StaticResource logicalAndToVisibility}">
						<Binding ElementName="root" Path="PPTable.ShowInsertSetupButton"/>
						<Binding Path="CanAddSetupBefore"/>
					</MultiBinding>
				</Button.Visibility>
				<Button.Template>
					<ControlTemplate>
						<Grid Opacity="0.5" x:Name="grid">
							<Ellipse Height="40" Width="40" Fill="#222" Stroke="#444"/>
							<Ellipse x:Name="ellipse" Height="40" Width="40" Fill="White" Opacity="0"/>
							<Image Style="{StaticResource AddSetupImage}"/>
							<Grid.Triggers>
								<EventTrigger RoutedEvent="MouseEnter">
									<BeginStoryboard>
										<Storyboard Duration="0:0:0.2">
											<DoubleAnimation Storyboard.TargetName="grid" Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" To="1"/>
										</Storyboard>
									</BeginStoryboard>
								</EventTrigger>
								<EventTrigger RoutedEvent="MouseLeave">
									<BeginStoryboard>
										<Storyboard Duration="0:0:0.3">
											<DoubleAnimation Storyboard.TargetName="grid" Storyboard.TargetProperty="Opacity" Duration="0:0:0.3" To="0.5"/>
										</Storyboard>
									</BeginStoryboard>
								</EventTrigger>
								<EventTrigger RoutedEvent="MouseDown">
									<BeginStoryboard>
										<Storyboard>
											<DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ellipse" From="1" To="0" Duration="0:0:0.5"/>
										</Storyboard>
									</BeginStoryboard>
								</EventTrigger>
							</Grid.Triggers>
						</Grid>
					</ControlTemplate>
				</Button.Template>
				<Button.ToolTip>
					<StackPanel>
						<WrapPanel>
							<Image Style="{StaticResource AddSetupImage}"/>
							<TextBlock Text="درج خودکار آماده سازی جدید در اینجا" VerticalAlignment="Bottom"/>
						</WrapPanel>
						<TextBlock Foreground="DarkGray" FontSize="10" Text="آیتمهایی که در این ایستگاه بعد از این آماده سازی قرار دارند، بطور خودکار در زمان جابجا می شوند"/>
					</StackPanel>
				</Button.ToolTip>
				<Button.Effect>
					<DropShadowEffect Opacity="0.8" ShadowDepth="0" Color="{Binding Message.HasException, Converter={StaticResource hasErrorToShadowColor}}"/>
				</Button.Effect>
			</Button>
		</Grid>

		<!-- Triggers for different view modes -->
		<Border.Style>
			<Style TargetType="Border">
				<Style.Triggers>
					<!-- PPTask is in Edit mode -->
					<DataTrigger Binding="{Binding IsEditMode}" Value="True">
						<Setter Property="Border.BorderBrush">
							<Setter.Value>
								<SolidColorBrush Color="Yellow"/>
							</Setter.Value>
						</Setter>
					</DataTrigger>
					<!-- PPTask is in JobSelected mode -->
					<DataTrigger Binding="{Binding IsJobSelected}" Value="True">
						<Setter Property="BorderBrush">
							<Setter.Value>
								<LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
									<GradientStop Color="Magenta" Offset="0.4"/>
									<GradientStop Color="Cyan" Offset="0.6"/>
								</LinearGradientBrush>
							</Setter.Value>
						</Setter>
						<Setter Property="BorderThickness" Value="2"/>
					</DataTrigger>
					<!-- Block Simple View (shows tasks inside-->
					<DataTrigger Binding="{Binding ViewMode}" Value="Simple">
					</DataTrigger>
					<!-- PPTask Report Detailed View -->
					<DataTrigger Binding="{Binding ViewMode}" Value="Report">
						<DataTrigger.EnterActions>
							<BeginStoryboard x:Name="bsb">
								<Storyboard>
									<DoubleAnimation Storyboard.TargetProperty="Opacity" From="1" To="0.5" Duration="0:0:0.5" AutoReverse="True" RepeatBehavior="Forever"/>
								</Storyboard>
							</BeginStoryboard>
						</DataTrigger.EnterActions>
						<DataTrigger.ExitActions>
							<StopStoryboard BeginStoryboardName="bsb"/>
						</DataTrigger.ExitActions>
					</DataTrigger>
				</Style.Triggers>
			</Style>
		</Border.Style>
	</Border>
</UserControl>
