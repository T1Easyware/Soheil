<UserControl x:Class="Soheil.Views.PP.BlockEditor"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:vm="clr-namespace:Soheil.Core.ViewModels.PP;assembly=Soheil.Core" 
             xmlns:ppevm="clr-namespace:Soheil.Core.ViewModels.PP.Editor;assembly=Soheil.Core" 
			 xmlns:local="clr-namespace:Soheil.Views.PP"
             xmlns:cal="http://schemas.microsoft.com/wpf/2008/toolkit" 
             xmlns:sys="clr-namespace:System;assembly=mscorlib" 
             xmlns:fpcView="clr-namespace:Soheil.Views.Fpc" 
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
			 xmlns:CustomControls="clr-namespace:Soheil.Controls.CustomControls;assembly=Soheil.Controls"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             mc:Ignorable="d"
             d:DesignHeight="300" d:DesignWidth="1050" FlowDirection="RightToLeft">
	<UserControl.Resources>
		<Style TargetType="Border" x:Key="tipTabBorderStyle">
			<Setter Property="Background" Value="#AAA"/>
			<Setter Property="CornerRadius" Value="3,3,0,0"/>
			<Setter Property="BorderBrush" Value="White"/>
			<Setter Property="BorderThickness" Value="1.5,1.5,1.5,0"/>
			<Setter Property="Margin" Value="2,0"/>
		</Style>
	</UserControl.Resources>
	
	<ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Disabled">
		
		<Grid Margin="8">
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto"/>
				<RowDefinition Height="*"/>
				<RowDefinition Height="25"/>
			</Grid.RowDefinitions>
			<Grid.Visibility>
				<MultiBinding Converter="{StaticResource isEqualToVisibilityConverter2}">
					<Binding Path="StateStation"/>
					<Binding Path="SelectedStateStation"/>
				</MultiBinding>
			</Grid.Visibility>
			<!-- Start of Block -->
			<Border>
				<DockPanel VerticalAlignment="Center" LastChildFill="False" Style="{StaticResource Panel3DEffectStyle}">
					<Border Style="{StaticResource tipTabBorderStyle}">
						<WrapPanel>
							<TextBlock Text="{Loc PPE_TaskTP}" FontSize="14" FontWeight="Bold" Foreground="White"/>
							<Grid MinWidth="60" Margin="5,0">
								<!-- TP -->
								<TextBox Grid.Column="0" Text="{Binding BlockTargetPoint, UpdateSourceTrigger=PropertyChanged}" ToolTip="{Loc PPE_TaskTP}" TextAlignment="Right" VerticalAlignment="Center"/>
								<Image Style="{StaticResource TargetPointImage}" Margin="4,0" HorizontalAlignment="Left" IsHitTestVisible="False"/>
							</Grid>
						</WrapPanel>
					</Border>

					<Canvas Width="10"/>

					<Border Style="{StaticResource tipTabBorderStyle}">
						<WrapPanel>
							<ToggleButton Margin="3" ToolTip="{Loc PPE_AfterLast}" IsChecked="{Binding IsLastSpace}">
								<WrapPanel>
									<Image Style="{StaticResource PPE_AfterLast}"/>
									<TextBlock Text="{Loc PPE_AfterLast}" Visibility="{Binding IsLastSpace, Converter={StaticResource booleanToVisibilityConverter}}"/>
								</WrapPanel>
							</ToggleButton>
							<ToggleButton Margin="3" ToolTip="{Loc PPE_Parallel}" IsChecked="{Binding IsParallel}">
								<WrapPanel>
									<Image Style="{StaticResource PPE_Parallel}"/>
									<TextBlock Text="{Loc PPE_Parallel}" Visibility="{Binding IsParallel, Converter={StaticResource booleanToVisibilityConverter}}"/>
								</WrapPanel>
							</ToggleButton>
							<ToggleButton Margin="3" ToolTip="{Loc PPE_FirstEmptySpace}" IsChecked="{Binding IsFirstSpace}">
								<WrapPanel>
									<Image Style="{StaticResource PPE_FirstEmptySpace}"/>
									<TextBlock Text="{Loc PPE_FirstEmptySpace}" Visibility="{Binding IsFirstSpace, Converter={StaticResource booleanToVisibilityConverter}}"/>
								</WrapPanel>
							</ToggleButton>
						</WrapPanel>
					</Border>
					<Border Style="{StaticResource tipTabBorderStyle}"  Visibility="{Binding IsFirstSpace, Converter={StaticResource booleanToVisibilityConverter}}">
						<WrapPanel>
							<TextBlock Text="{Loc txtDate}" Width="35" VerticalAlignment="Center" Foreground="{StaticResource TextBrush}"/>
							<cal:DatePicker SelectedDate="{Binding EditorStartDate}" DisplayDate="{Binding EditorStartDate}"/>
							<TextBlock Margin="10,0,0,0" Text="{Loc txtTime}" Width="40" VerticalAlignment="Center" Foreground="{StaticResource TextBrush}"/>
							<CustomControls:TimeBox Time="{Binding EditorStartTime, Mode=TwoWay}"/>
						</WrapPanel>
					</Border>
				</DockPanel>
			</Border>
			<!-- processes -->
			<Grid Background="Silver" Grid.Row="1">
				<Grid.Effect>
					<DropShadowEffect ShadowDepth="0"/>
				</Grid.Effect>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition Width="*"/>
				</Grid.ColumnDefinitions>

				<DockPanel MinWidth="400" MaxWidth="600" Margin="2,5,7,0">
					<TextBlock Text="فعالیتها:" DockPanel.Dock="Top" FontSize="14" FontWeight="Bold" Margin="5,0"/>
					<!-- toolbar -->
					<Grid DockPanel.Dock="Top">
						<Grid.ColumnDefinitions>
							<ColumnDefinition MinWidth="50"/>
							<ColumnDefinition Width="3*"/>
							<ColumnDefinition Width="4*"/>
							<ColumnDefinition Width="60"/>
						</Grid.ColumnDefinitions>
						<TextBlock Text="مدت/هدف:" VerticalAlignment="Center" TextWrapping="Wrap"/>
						<!-- same qty -->
						<ToggleButton Grid.Column="1" IsChecked="{Binding IsTargetPointFixed}"
								  ToolTip="{Loc PPE_SameQtyForActivites}">
							<DockPanel>
								<Image Style="{StaticResource QuantityImage}" Margin="5,0" IsHitTestVisible="False"/>
								<TextBox IsEnabled="{Binding IsTargetPointFixed}" Text="{Binding FixedTargetPoint, UpdateSourceTrigger=PropertyChanged}" MinWidth="50"/>
							</DockPanel>
						</ToggleButton>
						<!-- same time -->
						<ToggleButton Grid.Column="2" IsChecked="{Binding IsDurationFixed}"
								  ToolTip="{Loc PPE_SameTimeForActivites}">
							<WrapPanel>
								<Image Style="{StaticResource DurationImage}" Margin="5,0" IsHitTestVisible="False"/>
								<CustomControls:DurationBox DurationSeconds="{Binding FixedDurationSeconds, Mode=TwoWay}" IsReadOnly="{Binding IsDurationFixed, Converter={StaticResource inverter}}"/>
							</WrapPanel>
						</ToggleButton>
						<!-- defer -->
						<ToggleButton Grid.Column="3" IsChecked="{Binding IsDeferred}"
								  ToolTip="{Loc PPE_DeferToActivites}">
							<WrapPanel>
								<Image Style="{StaticResource IndependentTPImage}" Margin="5,0" IsHitTestVisible="False"/>
							</WrapPanel>
						</ToggleButton>
					</Grid>
					<Grid DockPanel.Dock="Top">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="60"/>
							<ColumnDefinition Width="*"/>
							<ColumnDefinition Width="Auto"/>
							<ColumnDefinition Width="Auto"/>
							<ColumnDefinition Width="60"/>
						</Grid.ColumnDefinitions>
						<TextBlock Text="زمان شروع:" TextWrapping="Wrap" VerticalAlignment="Center"/>
						<WrapPanel Grid.Column="1">
							<CustomControls:TimeBox Time="{Binding StartTimeForAll, Mode=TwoWay}" Margin="0,0,5,0"/>
							<cal:DatePicker SelectedDate="{Binding StartDateForAll}" DisplayDate="{Binding StartDateForAll}"/>
						</WrapPanel>
						<Button Margin="0,1" Grid.Column="2" Content="{Loc txtToday}" Command="{Binding SelectTodayCommand}" Style="{StaticResource Button3DTextStyle}"/>
						<Button Margin="0,1" Grid.Column="3" Content="{Loc txtAdd1Day}" Command="{Binding SelectTomorrowCommand}" Style="{StaticResource Button3DTextStyle}"/>
						<Button Command="{Binding SetStartForAllCommand}" Grid.Column="4" ToolTip="{Loc PPE_SameStartTimeForActivities}">
							<Image Style="{StaticResource PPE_SetStart}"/>
						</Button>
					</Grid>
					<Grid DockPanel.Dock="Top">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto"/>
							<ColumnDefinition Width="Auto"/>
							<ColumnDefinition Width="*"/>
							<ColumnDefinition Width="60"/>
							<ColumnDefinition Width="60"/>
						</Grid.ColumnDefinitions>
						<TextBlock Text="تغییر شروع:" Grid.Column="0" VerticalAlignment="Center"/>
						<CustomControls:DurationBox Time="{Binding StartOffsetForAll, Mode=TwoWay}" Grid.Column="1" Margin="5,0"/>
						<Button Command="{Binding SetOffsetForAllCommand}" ToolTip="{Loc PPE_SameStartOffsetForActivities}" Grid.Column="3">
							<Image Style="{StaticResource PPE_SetOffset}"/>
						</Button>
						<Button Command="{Binding SetOffsetForAllCommand}" CommandParameter="-" ToolTip="{Loc PPE_SameStartOffsetForActivitiesNegative}" Grid.Column="4">
							<Image Style="{StaticResource PPE_SetOffset}" FlowDirection="RightToLeft"/>
						</Button>
					</Grid>
					<!-- Activity List -->
					<ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
						<ItemsControl ItemsSource="{Binding ActivityList}" Background="#1000" Margin="2">
							<ItemsControl.ItemTemplate>
								<DataTemplate DataType="{x:Type ppevm:ActivityEditorVm}">
									<Border Background="#1FFF" BorderBrush="White" BorderThickness="1" CornerRadius="1" Margin="1">
										<DockPanel>
											<!-- One Activity -->
											<StackPanel Width="100">
												<!-- Name & Code -->
												<TextBlock Text="{Binding Name}" TextWrapping="Wrap" DockPanel.Dock="Top"/>
												<TextBlock Text="{Binding Code}" TextWrapping="Wrap" DockPanel.Dock="Left" Foreground="Gray"/>
												<!-- choices helper -->
												<WrapPanel>
													<TextBlock Text="نفرساعتها: "/>
													<ItemsControl ItemsSource="{Binding Choices}">
														<ItemsControl.ItemTemplate>
															<DataTemplate>
																<Border BorderBrush="DarkGray" BorderThickness="1" CornerRadius="2" Margin="1">
																	<Border.Background>
																		<Binding Path="IsMany" Converter="{StaticResource booleanToBrushConverter}">
																			<Binding.ConverterParameter>
																				<x:Array Type="Brush">
																					<SolidColorBrush Color="#990" />
																					<SolidColorBrush Color="Silver"/>
																				</x:Array>
																			</Binding.ConverterParameter>
																		</Binding>
																	</Border.Background>
																	<TextBlock Text="{Binding ManHour}"/>
																	<Border.ToolTip>
																		<!--loc farsi intended layout:-->
																		<!--نفرساعت       |         2-->
																		<UniformGrid Rows="3" Columns="2">
																			<TextBlock Text="{Loc txtManHour}" Foreground="Gray"/>
																			<TextBlock Text="{Binding ManHour}" FlowDirection="LeftToRight"/>
																			<TextBlock Text="{Loc txtCycleTimeSec}" Foreground="Gray"/>
																			<TextBlock Text="{Binding CycleTime}" FlowDirection="LeftToRight"/>
																			<TextBlock Text="{Loc txtIsMany}" Grid.RowSpan="2" Visibility="{Binding IsMany, Converter={StaticResource booleanToVisibilityConverter}}"/>
																		</UniformGrid>
																	</Border.ToolTip>
																</Border>
															</DataTemplate>
														</ItemsControl.ItemTemplate>
														<ItemsControl.ItemsPanel>
															<ItemsPanelTemplate>
																<UniformGrid Rows="1"/>
															</ItemsPanelTemplate>
														</ItemsControl.ItemsPanel>
													</ItemsControl>
												</WrapPanel>
												<!-- Add button -->
												<Button Command="{Binding AddProcessCommand}" DockPanel.Dock="Bottom" HorizontalAlignment="Right">
													<WrapPanel>
														<TextBlock Text="{Loc txtNew}" Foreground="#033"/>
														<Image Style="{StaticResource Add16Image}"/>
													</WrapPanel>
												</Button>
											</StackPanel>
											<!-- Processes -->
											<ItemsControl ItemsSource="{Binding ProcessList}">
												<ItemsControl.ItemTemplate>
													<DataTemplate DataType="{x:Type ppevm:ProcessEditorVm}">
														<!-- One Process -->
														<local:ProcessEditor DataContext="{Binding}"/>
													</DataTemplate>
												</ItemsControl.ItemTemplate>
											</ItemsControl>
										</DockPanel>
									</Border>
								</DataTemplate>
							</ItemsControl.ItemTemplate>
						</ItemsControl>
					</ScrollViewer>
				</DockPanel>
			
				<GridSplitter Grid.Column="0" Width="5" Background="#6AA" BorderBrush="White" BorderThickness="1,0"/>
			
				<ScrollViewer Grid.Column="1" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Disabled" Margin="2,5,2,0">
					<local:OperatorManager DataContext="{Binding OperatorManager}" IsEnabled="{Binding IsEnabled}"/>
				</ScrollViewer>
			</Grid>
			<!-- status bar -->
			<StatusBar Grid.Row="2" Background="#999">
				<!-- additional readonly info -->
				<WrapPanel TextBlock.Foreground="Black">
					<WrapPanel.Resources>
						<Style TargetType="TextBlock">
							<Setter Property="Margin" Value="5,2"/>
							<Setter Property="MinWidth" Value="10"/>
						</Style>
						<Style TargetType="StackPanel">
							<Setter Property="Margin" Value="5,0,10,0"/>
							<Setter Property="Background" Value="#1FFF"/>
							<Setter Property="Orientation" Value="Horizontal"/>
							<Style.Triggers>
								<EventTrigger RoutedEvent="MouseEnter">
									<BeginStoryboard>
										<Storyboard Duration="0:0:1">
											<ColorAnimation Storyboard.TargetProperty="Background.(SolidColorBrush.Color)" To="#4FFF" Duration="0:0:1"/>
										</Storyboard>
									</BeginStoryboard>
								</EventTrigger>
								<EventTrigger RoutedEvent="MouseLeave">
									<BeginStoryboard>
										<Storyboard Duration="0:0:1">
											<ColorAnimation Storyboard.TargetProperty="Background.(SolidColorBrush.Color)" To="#1FFF" Duration="0:0:1"/>
										</Storyboard>
									</BeginStoryboard>
								</EventTrigger>
							</Style.Triggers>
						</Style>
						<Style TargetType="StatusBarItem">
							<Setter Property="Padding" Value="0"/>
							<Setter Property="Height" Value="20"/>
						</Style>
					</WrapPanel.Resources>
					<StatusBarItem>
						<StackPanel>
							<TextBlock Text="{Loc txtStartTime}"/>
							<TextBlock Text="{Binding StartTime, Converter={StaticResource timeSpanToStringConverter}}" FlowDirection="LeftToRight"/>
							<TextBlock Text="{Binding StartDate, Converter={StaticResource dateToLocalStringConverter}}"/>
						</StackPanel>
					</StatusBarItem>
					<StatusBarItem>
						<StackPanel>
							<TextBlock Text="{Loc txtEndTime}"/>
							<TextBlock Text="{Binding EndTime, Converter={StaticResource timeSpanToStringConverter}}" FlowDirection="LeftToRight"/>
							<TextBlock Text="{Binding EndDate, Converter={StaticResource dateToLocalStringConverter}}"/>
						</StackPanel>
					</StatusBarItem>
					<StatusBarItem>
						<StackPanel>
							<TextBlock Text="{Loc txtDuration}"/>
							<TextBlock Text="{Binding Duration, Converter={StaticResource fullTimeSpanToStringConverter}}" FlowDirection="LeftToRight"/>
						</StackPanel>
					</StatusBarItem>

					<Border Visibility="{Binding Message.HasException, Converter={StaticResource booleanToVisibilityConverter}}" BorderBrush="#6EE2" Background="#5300" CornerRadius="2" BorderThickness="1" Margin="4,0" ClipToBounds="False">
						<TextBlock Text="{Binding Message.MainExceptionText}" ToolTip="{Binding Message.FullExceptionText}" Foreground="#EE2" Margin="2,-3" VerticalAlignment="Center" ClipToBounds="False"/>
					</Border>
				</WrapPanel>
			</StatusBar>

		</Grid>
	</ScrollViewer>

</UserControl>
