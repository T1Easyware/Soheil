<UserControl x:Class="Soheil.Views.PP.Setup"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
			xmlns:vm="clr-namespace:Soheil.Core.ViewModels.PP;assembly=Soheil.Core"
             xmlns:I="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
			 xmlns:local="clr-namespace:Soheil.Views.PP"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
			 x:Name="root"
             mc:Ignorable="d" d:DesignHeight="50" d:DesignWidth="300">
	<UserControl.Margin>
		<MultiBinding Converter="{StaticResource ppTaskBorderMarginConverter}">
			<Binding Path="StartDateTime"/>
			<Binding ElementName="root" Path="PPTable.HourZoom"/>
		</MultiBinding>
	</UserControl.Margin>
	<UserControl.Width>
		<MultiBinding Converter="{StaticResource ppTaskBorderWidthConverter}">
			<Binding Path="Duration"/>
			<Binding ElementName="root" Path="PPTable.HourZoom"/>
		</MultiBinding>
	</UserControl.Width>
	<Border BorderBrush="Black" ClipToBounds="True" BorderThickness="1" CornerRadius="2" VerticalAlignment="Stretch" Height="40" Margin="0,1">
		<Border.Background>
			<LinearGradientBrush  StartPoint="0,0.25" EndPoint="1,0.75">
				<GradientStop Color="{Binding FromProduct.Product.Color}" Offset="0"/>
				<GradientStop Color="{Binding FromProduct.Product.Color}" Offset="0.25"/>
				<GradientStop Color="#CCC" Offset="0.26"/>
				<GradientStop Color="#CCC" Offset="0.5"/>
				<GradientStop Color="{Binding ToProduct.Product.Color}" Offset="0.51"/>
				<GradientStop Color="{Binding ToProduct.Product.Color}" Offset="1"/>
			</LinearGradientBrush>
		</Border.Background>
		<Border.ToolTip>
			<StackPanel>
				<TextBlock Text="آماده سازی"/>
				<Separator/>
				<WrapPanel>
					<TextBlock Text="زمان شروع: " Foreground="DarkGray"/>
					<TextBlock Text="{Binding StartDateTime, Converter={StaticResource dateToLocalStringConverter}}"/>
				</WrapPanel>
				<WrapPanel>
					<TextBlock Text="زمان خاتمه: " Foreground="DarkGray"/>
					<TextBlock Text="{Binding EndDateTime, Converter={StaticResource dateToLocalStringConverter}}"/>
				</WrapPanel>
				<WrapPanel>
					<TextBlock Text="مدت آماده سازی: " Foreground="DarkGray"/>
					<TextBlock Text="{Binding DurationSeconds, Converter={StaticResource secondsToStringConverter}}"/>
				</WrapPanel>
				<Separator/>
				<WrapPanel>
					<TextBlock Text="از محصول: " Foreground="DarkGray"/>
					<Image Style="{StaticResource ReworkImage}" Visibility="{Binding FromProduct.Rework, Converter={StaticResource isNotNullToVisibility}}"/>
					<Rectangle Fill="{Binding FromProduct.Product.Color}" Width="15"/>
					<TextBlock Text="{Binding FromProduct.Name}" TextWrapping="Wrap"/>
				</WrapPanel>
				<WrapPanel>
					<TextBlock Text="به محصول: " Foreground="DarkGray"/>
					<Image Style="{StaticResource ReworkImage}" Visibility="{Binding ToProduct.Rework, Converter={StaticResource isNotNullToVisibility}}"/>
					<Rectangle Fill="{Binding ToProduct.Product.Color}" Width="15"/>
					<TextBlock Text="{Binding ToProduct.Name}" TextWrapping="Wrap"/>
				</WrapPanel>
				<Separator/>
				<WrapPanel>
					<TextBlock Text="مدت آغاز به کار: " Foreground="DarkGray"/>
					<TextBlock Text="{Binding WarmupSeconds, Converter={StaticResource secondsToStringConverter}}"/>
				</WrapPanel>
				<WrapPanel>
					<TextBlock Text="مدت تعویض: " Foreground="DarkGray"/>
					<TextBlock Text="{Binding ChangeoverSeconds, Converter={StaticResource secondsToStringConverter}}"/>
				</WrapPanel>
			</StackPanel>
		</Border.ToolTip>
		<Border.ContextMenu>
			<ContextMenu FlowDirection="RightToLeft">
				<MenuItem Header="ویرایش راه اندازی" Command="{Binding EditItemCommand}"/>
				<MenuItem Header="حذف راه اندازی" Command="{Binding DeleteItemCommand}"/>
			</ContextMenu>
		</Border.ContextMenu>
		<Border.Effect>
			<DropShadowEffect Opacity="0.8" ShadowDepth="0" Color="{Binding Message.HasException, Converter={StaticResource hasErrorToShadowColor}}"/>
		</Border.Effect>

		<!-- main contents -->
		<!-- Style & Triggers for different view modes -->
		<Control>
			<Control.Style>
				<Style TargetType="Control">
					<Style.Triggers>
						<!-- NPT Simple View -->
						<DataTrigger Binding="{Binding ViewMode}" Value="Simple">
							<Setter Property="Template">
								<Setter.Value>
									<ControlTemplate>
										<Image Style="{StaticResource SetupImage}"/>
									</ControlTemplate>
								</Setter.Value>
							</Setter>
						</DataTrigger>
						<!-- NPT Report Simple View -->
						<DataTrigger Binding="{Binding ViewMode}" Value="ReportSimple">
							<Setter Property="Template">
								<Setter.Value>
									<ControlTemplate TargetType="{x:Type Control}">
										<Grid>
											<!-- Overlay button to add report -->
											<Button x:Name="addbutton" Opacity="0" HorizontalAlignment="Left" Margin="0" ToolTip="ایجاد گزارش"
											    Command="{Binding EditReportCommand}" 
											    Visibility="{Binding Report, Converter={StaticResource isNullToVisibility}}">
												<StackPanel>
													<Image Style="{StaticResource AddReportImage}"/>
													<Border Background="#4FFF" HorizontalAlignment="Stretch">
														<TextBlock Text="فاقد گزارش"/>
													</Border>
												</StackPanel>
												<Button.Width>
													<MultiBinding Converter="{StaticResource ppTaskBorderWidthConverter}">
														<Binding Path="Duration"/>
														<Binding ElementName="root" Path="PPTable.HourZoom"/>
													</MultiBinding>
												</Button.Width>
											</Button>
											<!-- Has Reports -->
											<Grid Visibility="{Binding Report, Converter={StaticResource isNotNullToVisibility}}">
												<Button x:Name="editbutton" Opacity="0" HorizontalAlignment="Left" Margin="0" ToolTip="مشاهده/ویرایش گزارش"
													Command="{Binding EditReportCommand}">
													<StackPanel>
														<Image Style="{StaticResource ViewReportImage}"/>
														<Border Background="#4FFF" HorizontalAlignment="Stretch">
															<TextBlock Text="{Binding Report.DurationSeconds, Converter={StaticResource secondsToStringConverter}}"/>
														</Border>
													</StackPanel>
													<Button.Width>
														<MultiBinding Converter="{StaticResource ppTaskBorderWidthConverter}">
															<Binding Path="Duration"/>
															<Binding ElementName="root" Path="PPTable.HourZoom"/>
														</MultiBinding>
													</Button.Width>
												</Button>
											</Grid>
											<Grid.Triggers>
												<EventTrigger RoutedEvent="MouseEnter">
													<BeginStoryboard>
														<Storyboard Duration="0:0:0.2">
															<DoubleAnimation Storyboard.TargetName="addbutton" Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" To="0.8"/>
														</Storyboard>
													</BeginStoryboard>
												</EventTrigger>
												<EventTrigger RoutedEvent="MouseLeave">
													<BeginStoryboard>
														<Storyboard Duration="0:0:0.7">
															<DoubleAnimation Storyboard.TargetName="addbutton" Storyboard.TargetProperty="Opacity" Duration="0:0:0.7" To="0"/>
														</Storyboard>
													</BeginStoryboard>
												</EventTrigger>
												<EventTrigger RoutedEvent="MouseEnter">
													<BeginStoryboard>
														<Storyboard Duration="0:0:0.2">
															<DoubleAnimation Storyboard.TargetName="editbutton" Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" To="0.8"/>
														</Storyboard>
													</BeginStoryboard>
												</EventTrigger>
												<EventTrigger RoutedEvent="MouseLeave">
													<BeginStoryboard>
														<Storyboard Duration="0:0:0.7">
															<DoubleAnimation Storyboard.TargetName="editbutton" Storyboard.TargetProperty="Opacity" Duration="0:0:0.7" To="0"/>
														</Storyboard>
													</BeginStoryboard>
												</EventTrigger>
											</Grid.Triggers>
										</Grid>
									</ControlTemplate>
								</Setter.Value>
							</Setter>
						</DataTrigger>
					</Style.Triggers>
				</Style>
			</Control.Style>
		</Control>

		<!-- Style & Triggers for edit mode -->
		<Border.Style>
			<Style TargetType="Border">
				<Style.Triggers>
					<DataTrigger Binding="{Binding IsEditMode}" Value="True">
						<Setter Property="BorderBrush">
							<Setter.Value>
								<SolidColorBrush Color="Yellow"/>
							</Setter.Value>
						</Setter>
					</DataTrigger>
				</Style.Triggers>
			</Style>
		</Border.Style>
	</Border>
</UserControl>
