<UserControl x:Class="Soheil.Views.PP.PPTaskEditor"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:vm="clr-namespace:Soheil.Core.ViewModels.PP;assembly=Soheil.Core" 
             xmlns:ppevm="clr-namespace:Soheil.Core.ViewModels.PP.Editor;assembly=Soheil.Core" 
             xmlns:cal="clr-namespace:Arash.PersianDateControls;assembly=PersianDateControls" 
             xmlns:sys="clr-namespace:System;assembly=mscorlib" 
             xmlns:fpcView="clr-namespace:Soheil.Views.Fpc" 
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
        xmlns:cc="clr-namespace:Soheil.Controls.CustomControls;assembly=Soheil.Controls"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             mc:Ignorable="d"
             d:DesignHeight="300" d:DesignWidth="300" FlowDirection="RightToLeft">
	<UserControl.Resources>
        <Style TargetType="TextBlock" x:Key="verticalHeader">
            <Setter Property="TextAlignment" Value="Center"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="FontSize" Value="8"/>
            <Setter Property="LayoutTransform">
                <Setter.Value>
                    <RotateTransform Angle="90"/>
                </Setter.Value>
            </Setter>
        </Style>

        <HierarchicalDataTemplate ItemsSource="{Binding Products}" DataType="{x:Type vm:ProductGroupVm}">
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition Width="10"/>
					<ColumnDefinition Width="*"/>
				</Grid.ColumnDefinitions>
				<TextBlock Text="{Binding Name}"/>
				<TextBlock Text="{Binding Code}" Grid.Column="2" Foreground="Gray"/>
			</Grid>
		</HierarchicalDataTemplate>
		<DataTemplate DataType="{x:Type vm:ProductVm}">
			<Grid MouseDown="Product_MouseDown">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="15"/>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition Width="10"/>
					<ColumnDefinition Width="*"/>
				</Grid.ColumnDefinitions>
				<Rectangle Margin="2">
					<Rectangle.Fill>
						<SolidColorBrush Color="{Binding Color}"/>
					</Rectangle.Fill>
				</Rectangle>
				<TextBlock Text="{Binding Name}" Grid.Column="1"/>
				<TextBlock Text="{Binding Code}" Grid.Column="3" Foreground="Gray"/>
			</Grid>
		</DataTemplate>

        <!-- states list -->
        <DataTemplate x:Key="blockItemTemplate" DataType="{x:Type ppevm:PPEditorBlock}">
			<DockPanel MouseDown="blockListItem_MouseDown">
				<Border Margin="2" Width="15" DockPanel.Dock="Left" VerticalAlignment="Stretch">
					<Border.Background>
                        <SolidColorBrush Color="{Binding State.ProductRework.Product.Color}"/>
					</Border.Background>
					<TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Text="*" 
							   Visibility="{Binding HasUnsavedChanges, Converter={StaticResource booleanToVisibilityConverter}}">
						<TextBlock.Foreground>
                            <SolidColorBrush Color="{Binding State.ProductRework.Product.Color, Converter={StaticResource highContrastForecolor}}"/>
						</TextBlock.Foreground>
					</TextBlock>
				</Border>
				<Button Name="deleteButton" Command="{Binding DeleteBlockFromList}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=DataContext}" DockPanel.Dock="Right" VerticalAlignment="Bottom" Opacity="0">
					<Image Style="{StaticResource deleteImage}"/>
				</Button>
                <TextBlock Text="{Binding State.ProductRework.Product.Name}" DockPanel.Dock="Top"/>
                <TextBlock Text="{Binding State.Name}" DockPanel.Dock="Left"/>
                <TextBlock Text="{Binding State.Code}" Foreground="Gray" Margin="5,0,0,0"/>
				<DockPanel.Triggers>
					<EventTrigger RoutedEvent="Mouse.MouseEnter">
						<BeginStoryboard>
							<Storyboard Duration="0:0:0.2">
								<DoubleAnimation Duration="0:0:0.2" Storyboard.TargetName="deleteButton" Storyboard.TargetProperty="Opacity" To="1"/>
							</Storyboard>
						</BeginStoryboard>
					</EventTrigger>
					<EventTrigger RoutedEvent="Mouse.MouseLeave">
						<BeginStoryboard>
							<Storyboard Duration="0:0:0.75">
								<DoubleAnimation Duration="0:0:0.75" Storyboard.TargetName="deleteButton" Storyboard.TargetProperty="Opacity" To="0"/>
							</Storyboard>
						</BeginStoryboard>
					</EventTrigger>
				</DockPanel.Triggers>
			</DockPanel>
		</DataTemplate>
        <Style x:Key="blockListContainerStyle"  TargetType="ListBoxItem">
			<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
			<Style.Triggers>
				<Trigger Property="IsSelected" Value="False">
					<Setter Property="Opacity" Value="0.5"/>
					<Setter Property="TextBlock.Foreground" Value="White"/>
				</Trigger>
			</Style.Triggers>
		</Style>


        <!--..................-->
        <!-- TaskEditor Panel -->
        <!--..................-->
        
        <!-- general operator -->
		<DataTemplate DataType="{x:Type ppevm:PPEditorOperator}" x:Key="allOperatorsTemplate">
			<Button Height="25" Name="btn" HorizontalAlignment="Stretch" Click="SelectOperator"
					IsEnabled="{Binding IsSelected, Converter={StaticResource inverter}}">
				<Button.Visibility>
					<MultiBinding Converter="{StaticResource filterMaker}">
						<Binding Path="Code"/>
						<Binding Path="Name"/>
						<Binding ElementName="filterText" Path="Text"/>
					</MultiBinding>
				</Button.Visibility>
				<WrapPanel HorizontalAlignment="Left" TextBlock.Foreground="Black">
					<TextBlock Name="txtCode" Text="{Binding Code}" Foreground="Gray"/>
					<TextBlock Name="txtName" Text="{Binding Name}" Margin="5,0,0,0"/>
				</WrapPanel>
			</Button>
			<DataTemplate.Triggers>
				<DataTrigger Binding="{Binding IsSelected}" Value="True">
					<Setter TargetName="txtCode" Property="Foreground" Value="Silver"/>
					<Setter TargetName="txtName" Property="Foreground" Value="Gray"/>
				</DataTrigger>
				<Trigger SourceName="btn" Property="Visibility" Value="Hidden">
					<Trigger.EnterActions>
						<BeginStoryboard>
							<Storyboard Duration="0:0:0.5">
								<DoubleAnimation 
									Storyboard.TargetName="btn" 
									Storyboard.TargetProperty="Height" 
									To="0" Duration="0:0:0.5"/>
							</Storyboard>
						</BeginStoryboard>
					</Trigger.EnterActions>
					<Trigger.ExitActions>
						<BeginStoryboard>
							<Storyboard Duration="0:0:0.5">
								<DoubleAnimation 
									Storyboard.TargetName="btn" 
									Storyboard.TargetProperty="Height" 
									To="25" Duration="0:0:0.5"/>
							</Storyboard>
						</BeginStoryboard>
					</Trigger.ExitActions>
				</Trigger>
			</DataTemplate.Triggers>
		</DataTemplate>
        <!-- selected operator -->
		<DataTemplate DataType="{x:Type ppevm:PPEditorOperator}" x:Key="selectedOperatorsTemplate">
			<StackPanel Name="root">
				<Button Height="25" Name="btn_deselect" HorizontalAlignment="Stretch" Click="DeselectOperator"
					Visibility="{Binding IsSelected, Converter={StaticResource booleanToVisibilityConverter}}">
					<WrapPanel HorizontalAlignment="Left">
						<TextBlock Text="{Binding Code}" Foreground="Gray"/>
						<TextBlock Text="{Binding Name}" Margin="5,0,0,0"/>
						<TextBlock Text="{Binding Role, Converter={StaticResource operatorRoleTextConverter}}" Margin="5,0,0,0" Foreground="Lime"/>
					</WrapPanel>
				</Button>
				<StackPanel Name="rolesPanel" Height="0">
					<Border BorderThickness="1,0,1,1" CornerRadius="0,0,5,5" Margin="0,0,0,2"
						Background="Silver" BorderBrush="DimGray"
						HorizontalAlignment="Center">
						<WrapPanel>
							<ToggleButton IsChecked="{Binding Role, Converter={StaticResource operatorRoleIsValue}, ConverterParameter=0}" MinWidth="55" Content="اصلی"/>
							<ToggleButton IsChecked="{Binding Role, Converter={StaticResource operatorRoleIsValue}, ConverterParameter=1}" MinWidth="55" Content="جایگزین"/>
							<ToggleButton IsChecked="{Binding Role, Converter={StaticResource operatorRoleIsValue}, ConverterParameter=2}" MinWidth="55" Content="کمکی"/>
						</WrapPanel>
					</Border>
				</StackPanel>
			</StackPanel>
			<DataTemplate.Triggers>
				<EventTrigger SourceName="root" RoutedEvent="MouseEnter">
					<BeginStoryboard>
						<Storyboard Duration="0:0:0.2">
							<DoubleAnimation 
									Storyboard.TargetName="rolesPanel" 
									Storyboard.TargetProperty="Height" 
									To="25" Duration="0:0:0.2"/>
						</Storyboard>
					</BeginStoryboard>
				</EventTrigger>
				<EventTrigger SourceName="root" RoutedEvent="MouseLeave">
					<BeginStoryboard>
						<Storyboard Duration="0:0:0.2">
							<DoubleAnimation 
									Storyboard.TargetName="rolesPanel" 
									Storyboard.TargetProperty="Height" 
									To="0" Duration="0:0:0.2"/>
						</Storyboard>
					</BeginStoryboard>
				</EventTrigger>
				<Trigger SourceName="btn_deselect" Property="Visibility" Value="Hidden">
					<Setter TargetName="rolesPanel" Property="Height" Value="0"/>
					<Trigger.EnterActions>
						<BeginStoryboard>
							<Storyboard Duration="0:0:0.5">
								<DoubleAnimation 
										Storyboard.TargetName="btn_deselect" 
										Storyboard.TargetProperty="Height" 
										To="0" Duration="0:0:0.5"/>
							</Storyboard>
						</BeginStoryboard>
					</Trigger.EnterActions>
					<Trigger.ExitActions>
						<BeginStoryboard>
							<Storyboard Duration="0:0:0.5">
								<DoubleAnimation 
										Storyboard.TargetName="btn_deselect" 
										Storyboard.TargetProperty="Height" 
										To="25" Duration="0:0:0.5"/>
							</Storyboard>
						</BeginStoryboard>
					</Trigger.ExitActions>
				</Trigger>
			</DataTemplate.Triggers>
		</DataTemplate>

        <!-- activity -->
        <DataTemplate DataType="{x:Type ppevm:PPEditorProcess}" x:Key="activityTabTemplate">
			<Border Background="{StaticResource activityBackBrush}">
				<DockPanel MinHeight="150">
					<!-- Machines Border -->
					<Border DockPanel.Dock="Left" BorderBrush="DimGray" CornerRadius="3" BorderThickness="1" Background="#B0B05F" Margin="4">
						<DockPanel>
							<Border DockPanel.Dock="Top" BorderBrush="DimGray" CornerRadius="3,3,0,0" BorderThickness="0,0,0,1" Background="#444427">
								<TextBlock Text="دستگاههای استفاده شده" Margin="1" HorizontalAlignment="Center" Foreground="Silver"/>
							</Border>
							<ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
								<ItemsControl ItemsSource="{Binding MachineList}" Margin="2">
									<ItemsControl.ItemTemplate>
										<DataTemplate DataType="{x:Type ppevm:PPEditorMachine}">
											<ToggleButton IsChecked="{Binding IsUsed}">
												<WrapPanel>
													<TextBlock Text="{Binding Code}" Foreground="Gray"/>
													<TextBlock Text="{Binding Name}" Margin="10,0,10,0"/>
												</WrapPanel>
											</ToggleButton>
										</DataTemplate>
									</ItemsControl.ItemTemplate>
								</ItemsControl>
							</ScrollViewer>
						</DockPanel>
					</Border>
					<!-- Operators Border -->
					<Border BorderBrush="DimGray" BorderThickness="1" CornerRadius="3" Background="#618BC9" Margin="4">
						<DockPanel>
							<Border DockPanel.Dock="Top" BorderBrush="DimGray" CornerRadius="3,3,0,0" BorderThickness="0,0,0,1" Background="#232E40">
								<TextBlock Text="اپراتورهای استفاده شده" Margin="1" HorizontalAlignment="Center" Foreground="Silver"/>
							</Border>
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*"/>
									<ColumnDefinition Width="4"/>
									<ColumnDefinition Width="*"/>
								</Grid.ColumnDefinitions>
								<DockPanel>
									<DockPanel DockPanel.Dock="Top">
										<TextBlock DockPanel.Dock="Left" Text="جستجو" VerticalAlignment="Center" Margin="2"/>
										<TextBox Name="filterText" Margin="2"/>
									</DockPanel>
									<ScrollViewer Margin="2" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
										<ItemsControl ItemsSource="{Binding OperatorList}" ItemTemplate="{StaticResource allOperatorsTemplate}" HorizontalContentAlignment="Stretch"/>
									</ScrollViewer>
								</DockPanel>
								<GridSplitter Grid.Column="1" Width="4" Background="#F7BD" ResizeBehavior="PreviousAndNext" ResizeDirection="Columns"/>
								<DockPanel Grid.Column="2">
									<DockPanel DockPanel.Dock="Top">
										<TextBlock DockPanel.Dock="Left" Text="نفرساعت استاندارد = " VerticalAlignment="Center" Margin="2"/>
										<TextBlock Text="{Binding ManHour}" VerticalAlignment="Center" Margin="2"/>
									</DockPanel>
									<ScrollViewer Margin="2" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" MaxHeight="175" VerticalAlignment="Top">
										<ItemsControl ItemsSource="{Binding OperatorList}" ItemTemplate="{StaticResource selectedOperatorsTemplate}" HorizontalContentAlignment="Stretch" VerticalAlignment="Top" VerticalContentAlignment="Top"/>
									</ScrollViewer>
								</DockPanel>
							</Grid>
						</DockPanel>
					</Border>
				</DockPanel>
			</Border>
		</DataTemplate>


        <!-- task details -->
        <DataTemplate DataType="{x:Type ppevm:PPEditorTask}" x:Key="taskDetailsTemplate">
            <!-- 1 Task (Portion of a block) -->
            <DockPanel Background="Silver" x:Name="root">
                <DockPanel.Effect>
                    <DropShadowEffect ShadowDepth="0"/>
                </DockPanel.Effect>
                <!-- Top half -->
                <DockPanel DockPanel.Dock="Left">
                    <!-- TP -->
                    <DockPanel DockPanel.Dock="Top">
                        <Border DockPanel.Dock="Left" BorderBrush="{StaticResource taskDateStuffBorderBrush}" Background="{StaticResource taskDateStuffHeaderBackground}" BorderThickness="1" CornerRadius="5,0,0,5" Height="{Binding ElementName=durationContents, Path=ActualHeight}" Margin="2,2,0,2">
                            <TextBlock Text="{Loc PPE_DurationOrTP}" Style="{StaticResource verticalHeader}"/>
                        </Border>
                        <Border BorderBrush="{StaticResource taskDateStuffBorderBrush}" Background="{StaticResource taskDateStuffInsideBackground}" CornerRadius="0,5,5,0" BorderThickness="1" Margin="0,2,4,2" x:Name="durationContents">
                            <StackPanel>
                                <WrapPanel>
                                    <TextBlock Text="{Loc PPE_TaskTP}" VerticalAlignment="Center"/>
                                    <TextBox Text="{Binding TaskTargetPoint, UpdateSourceTrigger=PropertyChanged}" MinWidth="30"/>
                                </WrapPanel>
                                <RadioButton Margin="1" IsChecked="{Binding IsSameTimeForActivitiesSelected}">
                                    <WrapPanel>
                                        <TextBlock Text="{Loc PPE_SameTimeForActivites}" VerticalAlignment="Center"/>
                                        <TextBox IsEnabled="{Binding IsSameTimeForActivitiesSelected}" Text="{Binding SameTimeForActivities, Converter={StaticResource timeSpanToStringConverter}, UpdateSourceTrigger=PropertyChanged}" MinWidth="30" FlowDirection="LeftToRight"/>
                                    </WrapPanel>
                                </RadioButton>
                                <RadioButton Margin="1" IsChecked="{Binding IsSameQtyForActivitiesSelected}">
                                    <WrapPanel>
                                        <TextBlock Text="{Loc PPE_SameQtyForActivites}" VerticalAlignment="Center"/>
                                        <TextBox IsEnabled="{Binding IsSameQtyForActivitiesSelected}" Text="{Binding SameQtyForActivities, UpdateSourceTrigger=PropertyChanged}" MinWidth="30"/>
                                    </WrapPanel>
                                </RadioButton>
                                <RadioButton Margin="1" IsChecked="{Binding IsDeferToActivitiesSelected}">
                                    <WrapPanel Height="20">
                                        <TextBlock Text="{Loc PPE_DeferToActivites}" VerticalAlignment="Center"/>
                                    </WrapPanel>
                                </RadioButton>
                            </StackPanel>
                        </Border>
                    </DockPanel>
                    <!-- Activities DataGrid -->
                    <TextBlock DockPanel.Dock="Top" Text="{Loc txtActivities}"/>
                    <DataGrid Margin="4" ItemsSource="{Binding ProcessList}" Padding="4" VerticalAlignment="Top" AutoGenerateColumns="False"
                              SelectedItem="{Binding SelectedProcess}"
                              RowDetailsVisibilityMode="VisibleWhenSelected">
                        <DataGrid.Columns>
                            <DataGridTextColumn IsReadOnly="True" Binding="{Binding Name}" Header="{Loc txtActivity}"/>
                            <DataGridTemplateColumn Header="{Loc txtManHours}">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <DockPanel>
                                            <Image Source="/Images/warning.png" Width="16" Visibility="{Binding Message.HasException, Converter={StaticResource booleanToVisibilityConverter}}" ToolTip="{Binding Message.FullExceptionText}"/>
                                            <ItemsControl ItemsSource="{Binding Choices}">
                                                <ItemsControl.ItemTemplate>
                                                    <DataTemplate>
                                                        <Border BorderBrush="DarkGray" BorderThickness="1" CornerRadius="2" Margin="1">
                                                            <Border.Background>
                                                                <MultiBinding Converter="{StaticResource isEqualToBrushConverter}">
                                                                    <Binding Path="Parent.SelectedChoice"/>
                                                                    <Binding Path="."/>
                                                                    <MultiBinding.ConverterParameter>
                                                                        <x:Array Type="Brush">
                                                                            <SolidColorBrush Color="#088" />
                                                                            <SolidColorBrush Color="Silver"/>
                                                                        </x:Array>
                                                                    </MultiBinding.ConverterParameter>
                                                                </MultiBinding>
                                                            </Border.Background>
                                                            <TextBlock Text="{Binding ManHour}"/>
                                                            <Border.ToolTip>
                                                                <!--loc farsi intended layout:-->
                                                                <!--نفرساعت       |         2-->
                                                                <UniformGrid Rows="2" Columns="2">
                                                                    <TextBlock Text="{Loc txtManHour}" Foreground="Gray"/>
                                                                    <TextBlock Text="{Binding ManHour}" FlowDirection="LeftToRight"/>
                                                                    <TextBlock Text="{Loc txtCycleTimeSec}" Foreground="Gray"/>
                                                                    <TextBlock Text="{Binding CycleTime}" FlowDirection="LeftToRight"/>
                                                                </UniformGrid>
                                                            </Border.ToolTip>
                                                        </Border>
                                                    </DataTemplate>
                                                </ItemsControl.ItemTemplate>
                                                <ItemsControl.ItemsPanel>
                                                    <ItemsPanelTemplate>
                                                        <UniformGrid Rows="1"/>
                                                    </ItemsPanelTemplate>
                                                </ItemsControl.ItemsPanel>
                                            </ItemsControl>
                                        </DockPanel>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTextColumn Binding="{Binding TargetPoint}" IsReadOnly="{Binding DoesParentDeferToActivities, Converter={StaticResource inverter}}" Header="{Loc txtTargetPoint}"/>
                            <!--DataGridTextColumn IsReadOnly="True" Binding="{Binding OperatorList}" Header="{Loc txtOperators}"/>
                            <DataGridTextColumn IsReadOnly="True" Binding="{Binding SelectedChoice.CycleTime}" Header="{Loc txtCycleTime}"/>
                            <DataGridTextColumn Binding="{Binding DurationSeconds, Converter={StaticResource secondsToStringConverter}}" Header="{Loc txtDuration}"/-->
                        </DataGrid.Columns>
                        <DataGrid.RowDetailsTemplate>
                            <DataTemplate>
                                <UniformGrid Rows="1" Columns="6" Background="Silver" TextBlock.Foreground="Black">
                                    <TextBlock Text="{Loc txtOperators}" Foreground="Gray"/>
                                    <TextBlock Text="{Binding SelectedOperatorsCount}"/>
                                    <TextBlock Text="{Loc txtCycleTime}" Foreground="Gray"/>
                                    <TextBlock Text="{Binding SelectedChoice.CycleTime}"/>
                                    <TextBlock Text="{Loc txtDuration}" Foreground="Gray"/>
                                    <TextBlock Text="{Binding DurationSeconds, Converter={StaticResource secondsToStringConverter}}" FlowDirection="LeftToRight"/>
                                </UniformGrid>
                            </DataTemplate>
                        </DataGrid.RowDetailsTemplate>
                    </DataGrid>
                </DockPanel>
                <ContentPresenter Content="{Binding SelectedProcess}" ContentTemplate="{StaticResource activityTabTemplate}"/>
            </DockPanel>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding HasUnsavedChanges}" Value="True">
                    <Setter TargetName="root" Property="Background">
                        <Setter.Value>
                            <SolidColorBrush Color="Yellow"/>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>
        
    </UserControl.Resources>

	<DockPanel>
        <!-- select product and state(block) -->
		<Border DockPanel.Dock="Left" Margin="5,5,0,5" BorderBrush="{StaticResource HeaderBorderBrush}" BorderThickness="1" CornerRadius="1">
			<DockPanel>
				<TextBlock Text="محصول را انتخاب کنید" DockPanel.Dock="Top" Foreground="Silver"/>
				<TreeView DockPanel.Dock="Top"
						  ItemsSource="{Binding AllProductGroups}" 
						  MinHeight="100" 
						  Background="{StaticResource HeaderBackground}"
						  SelectedItemChanged="Product_SelectionChanged"/>
				<TextBlock Text="مرحله تولید را انتخاب کنید" DockPanel.Dock="Top" Foreground="Silver"/>
				<ListBox ItemsSource="{Binding BlockList}" 
						 ItemTemplate="{StaticResource blockItemTemplate}" 
						 ItemContainerStyle="{StaticResource blockListContainerStyle}"
						 Background="{StaticResource HeaderBackground}"
						 SelectedItem="{Binding SelectedBlock}"
						 MinHeight="100"/>
			</DockPanel>
		</Border>
        <!-- top header (buttons and selected block indicator) -->
		<Border DockPanel.Dock="Top" Margin="5" BorderThickness="1" CornerRadius="1" Height="45" Padding="5"
				Background="{StaticResource HeaderBackground}" BorderBrush="{StaticResource HeaderBorderBrush}">
			<DockPanel>
                <!-- buttons -->
                <!--Button DockPanel.Dock="Left" Content="پاک کردن این مرحله" Command="{Binding ResetCurrentBlockCommand}"/>
                <Button DockPanel.Dock="Left" Content="پاک کردن همه مراحل" Command="{Binding ClearAllCommand}"/>
                <Button DockPanel.Dock="Right" Content="انصراف و خروج" Command="{Binding ExitCommand}"/>
                <Button DockPanel.Dock="Right" Content="ذخیره همه برنامه ها و خروج" Command="{Binding SaveAllCommand}"/-->
                <!--Button DockPanel.Dock="Right" Content="ذخیره برنامه انتخاب شده" Command="{Binding SaveCommand}" IsEnabled="{Binding SelectedState, Converter={StaticResource isNull}}"/-->

                <!-- indicator -->
                <TextBlock Text="{Binding SelectedProduct.Name}" DockPanel.Dock="Left" Margin="2" Foreground="White" VerticalAlignment="Center"/>
				<TextBlock Text="{Binding SelectedProduct.Code}" DockPanel.Dock="Left" Margin="2" Foreground="Gray" VerticalAlignment="Center"/>
                <Rectangle Width="10" Height="10" Margin="2" VerticalAlignment="Center">
					<Rectangle.Fill>
						<SolidColorBrush Color="{Binding SelectedProduct.Color}"/>
					</Rectangle.Fill>
				</Rectangle>
				<Canvas/>
			</DockPanel>
		</Border>
        <!-- workspace -->
		<Border BorderBrush="{StaticResource HeaderBorderBrush}" Background="{StaticResource HeaderBackground}"
				BorderThickness="1" CornerRadius="1" Padding="1" Margin="5,0,5,5">
			<Grid>
                <!-- fpc viewer -->
                <Grid Visibility="{Binding ShowFpc, Converter={StaticResource booleanToVisibilityConverter}}">
                    <fpcView:FpcStateView DataContext="{Binding FpcViewer}"/>
                </Grid>
                <!-- Block editor -->
                <DockPanel Margin="8" Visibility="{Binding ShowFpc, Converter={StaticResource booleanToInvisibilityConverter}}">
                    <!-- station -->
                    <WrapPanel DockPanel.Dock="Top" DataContext="{Binding SelectedBlock}">
                        <TextBlock Text="ایستگاه" Foreground="Silver"/>
                        <ComboBox ItemsSource="{Binding State.StateStationList}"
                                  DisplayMemberPath="Name" MinWidth="120"
                                  SelectedItem="{Binding SelectedStateStation}"/>
                        <Border BorderBrush="#F80" BorderThickness="1" CornerRadius="1">
                            <Border.Visibility>
                                <MultiBinding Converter="{StaticResource isEqualToInvisibilityConverter2}">
                                    <Binding Path="StateStation"/>
                                    <Binding Path="SelectedStateStation"/>
                                </MultiBinding>
                            </Border.Visibility>
                            <Grid>
                                <DockPanel Visibility="{Binding StateStation, Converter={StaticResource isNotNullToVisibility}}">
                                    <Button DockPanel.Dock="Left" Content="تغییر ایستگاه" Command="{Binding ChangeStationCommand}"/>
                                    <Button TextBlock.FontSize="8" DockPanel.Dock="Right" Content="انصراف از تغییر ایستگاه" Command="{Binding DontChangeStationCommand}" VerticalAlignment="Center"/>
                                    <TextBlock Text="باعث از بین رفتن اطلاعات این برنامه میشود" Foreground="Orange" VerticalAlignment="Center"/>
                                </DockPanel>
                                <Button Content="انتخاب ایستگاه" Command="{Binding ChangeStationCommand}"  Visibility="{Binding StateStation, Converter={StaticResource isNullToVisibility}}"/>
                            </Grid>
                        </Border>
                    </WrapPanel>
                    <!-- block data -->
                    <DockPanel DockPanel.Dock="Top" DataContext="{Binding SelectedBlock}">
                        <DockPanel.Visibility>
                            <MultiBinding Converter="{StaticResource isEqualToVisibilityConverter2}">
                                <Binding Path="StateStation"/>
                                <Binding Path="SelectedStateStation"/>
                            </MultiBinding>
                        </DockPanel.Visibility>
                        <!-- Start of Block -->
                        <DockPanel DockPanel.Dock="Left">
                            <Border DockPanel.Dock="Left" BorderBrush="{StaticResource taskDateStuffBorderBrush}" Background="{StaticResource taskDateStuffHeaderBackground}" BorderThickness="1" CornerRadius="5,0,0,5" Height="{Binding ElementName=startDateContents, Path=ActualHeight}" Margin="4,2,0,2">
                                <TextBlock Text="زمان شروع برنامه" Style="{StaticResource verticalHeader}"/>
                            </Border>
                            <Border BorderBrush="{StaticResource taskDateStuffBorderBrush}" Background="{StaticResource taskDateStuffInsideBackground}" CornerRadius="0,5,5,0" BorderThickness="1" Margin="0,2,2,2" x:Name="startDateContents">
                                <StackPanel>
                                    <CheckBox Margin="3" Content="{Loc PPE_FirstEmptySpace}" IsChecked="{Binding IsAutoStart}"/>
                                    <WrapPanel VerticalAlignment="Center" Visibility="{Binding IsAutoStart, Converter={StaticResource booleanToInvisibilityConverter}}">
                                        <TextBlock Margin="3" Text="{Loc txtDate}" Width="35" VerticalAlignment="Center" Foreground="{StaticResource TextBrush}"/>
                                        <cal:PersianDatePicker SelectedDate="{Binding StartDate}"/>
                                        <Button Margin="3" Content="{Loc txtToday}" Command="{Binding SelectTodayCommand}"/>
                                        <Button Margin="3" Content="{Loc txtTomorrow}" Command="{Binding SelectTomorrowCommand}"/>
                                        <TextBlock Margin="3" Text="{Loc txtTime}" Width="40" VerticalAlignment="Center" Foreground="{StaticResource TextBrush}"/>
                                        <TextBox Text="{Binding StartTime, Converter={StaticResource timeSpanToStringConverter}, UpdateSourceTrigger=PropertyChanged}" FlowDirection="LeftToRight"/>
                                        <Button Margin="3" Content="{Loc PPE_StartOfNextHour}" Command="{Binding SelectNextHourCommand}" ToolTip="{Loc PPE_StartOfNextHourTooltip}"/>
                                        <Button Margin="3" Content="{Loc PPE_NextHour}" Command="{Binding AddOneHourCommand}"/>
                                    </WrapPanel>
                                </StackPanel>
                            </Border>
                        </DockPanel>
                        <!-- additional readonly info -->
                        <WrapPanel DockPanel.Dock="Left" TextBlock.Foreground="Silver">
                            <WrapPanel.Resources>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Margin" Value="2"/>
                                    <Setter Property="MinWidth" Value="10"/>
                                </Style>
                            </WrapPanel.Resources>
                            <TextBlock Text="{Loc txtEndTime}"/>
                            <TextBlock Text="{Binding EndTime, Converter={StaticResource timeSpanToStringConverter}}" Background="#4FFF" FlowDirection="LeftToRight"/>
                            <TextBlock Text="{Binding EndDate, Converter={StaticResource dateToPersianDateConverter}}" Background="#4FFF"/>
                            <TextBlock Text=" "/>
                            <TextBlock Text="{Loc txtDuration}"/>
                            <TextBlock Text="{Binding Duration, Converter={StaticResource timeSpanToStringConverter}}" Background="#4FFF" FlowDirection="LeftToRight"/>
                            <TextBlock Text=" "/>
                            <TextBlock Text="{Loc PPE_SumOfTP}"/>
                            <TextBlock Text="{Binding BlockTargetPoint}" Background="#4FFF"/>
                        </WrapPanel>
                        <Border Visibility="{Binding Message.HasException, Converter={StaticResource booleanToVisibilityConverter}}" BorderBrush="#6EE2" Background="#2FFF" CornerRadius="2" BorderThickness="1" Margin="4">
                            <TextBlock Text="{Binding Message.FullExceptionText}" Foreground="#EE2"/>
                        </Border>
                    </DockPanel>
                    <!-- task ranges -->
                    <TabControl ItemsSource="{Binding SelectedBlock.TaskList}">
                        <TabControl.Visibility>
                            <MultiBinding Converter="{StaticResource isEqualToVisibilityConverter2}">
                                <Binding Path="SelectedBlock.StateStation"/>
                                <Binding Path="SelectedBlock.SelectedStateStation"/>
                            </MultiBinding>
                        </TabControl.Visibility>
                        <!-- headers -->
                        <TabControl.ItemContainerStyle>
                            <Style TargetType="TabItem">
                                <!-- each tab header ItemTemplate-->
                                <Setter Property="HeaderTemplate">
                                    <Setter.Value>
                                        <DataTemplate>
                                            <DataTemplate.Resources>
                                                <DataTemplate DataType="{x:Type ppevm:PPEditorTask}">
                                                    <!-- TabHeader for real Tasks -->
                                                    <Border Background="#3000" BorderBrush="#8000" BorderThickness="2" CornerRadius="2" Margin="2" Padding="2">
                                                        <StackPanel>
                                                            <Button Command="{Binding DeleteTaskCommand}">
                                                                <WrapPanel>
                                                                    <Image Source="/Images/Fpc/Delete16.png" Width="16"/>
                                                                    <TextBlock Text="{Loc txtDelete}" Foreground="Crimson"/>
                                                                </WrapPanel>
                                                            </Button>
                                                            <TextBlock Text="{Binding Duration, Converter={StaticResource timeSpanToStringConverter}}" FlowDirection="LeftToRight"/>
                                                            <!--TextBlock Text="{Loc PPE_InvalidDuration}" Foreground="Red" Visibility="{Binding IsDurationValid, Converter={StaticResource booleanToInvisibilityConverter}}"/-->
                                                            <DockPanel>
                                                                <Image DockPanel.Dock="Left" Source="/Images/PP/TargetPoint.png" Width="11"/>
                                                                <TextBlock Text="{Binding TaskTargetPoint}"/>
                                                            </DockPanel>
                                                        </StackPanel>
                                                    </Border>
                                                </DataTemplate>
                                                <DataTemplate DataType="{x:Type ppevm:PPEditorTaskHolder}">
                                                    <!-- TabHeader for TaskHolders -->
                                                    <Grid>
                                                        <Button Background="#3000" BorderBrush="GreenYellow" BorderThickness="2" Command="{Binding CreateNewTaskCommand}" Padding="12">
                                                            <DockPanel>
                                                                <Image DockPanel.Dock="Left" Source="/Images/Fpc/Add16.png" Width="16"/>
                                                                <TextBlock Text="{Loc txtNew}" Foreground="Black"/>
                                                            </DockPanel>
                                                        </Button>
                                                    </Grid>
                                                </DataTemplate>
                                            </DataTemplate.Resources>
                                            <ContentPresenter Content="{Binding}"/>
                                        </DataTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="IsSelected" Value="{Binding IsSelected}"/>
                            </Style>
                        </TabControl.ItemContainerStyle>
                        <!-- each tab ItemTemplate-->
                        <TabControl.ContentTemplate>
                            <DataTemplate>
                                <DataTemplate.Resources>
                                    <DataTemplate DataType="{x:Type ppevm:PPEditorTask}">
                                        <!-- each task -->
                                        <Grid>
                                            <ContentPresenter Content="{Binding}" ContentTemplate="{StaticResource taskDetailsTemplate}"/>
                                            <Grid Background="#8000" Visibility="{Binding IsDeleteTaskMessageVisible, Converter={StaticResource booleanToVisibilityConverter}}">
                                                <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center" Background="#8044">
                                                    <TextBlock Text="{Loc msgDeleteTask}" Foreground="WhiteSmoke" FontWeight="Bold" FontSize="14" Margin="5"/>
                                                    <WrapPanel>
                                                        <Button Command="{Binding ConfirmDeleteTaskCommand}" Margin="5">
                                                            <WrapPanel>
                                                                <Image Source="/Images/Fpc/Delete16.png" Width="16"/>
                                                                <TextBlock Text="{Loc txtDelete}" Foreground="Crimson"/>
                                                            </WrapPanel>
                                                        </Button>
                                                        <Button Command="{Binding CancelDeleteTaskCommand}" Content="{Loc txtCancel}" Margin="5"/>
                                                    </WrapPanel>
                                                </StackPanel>
                                            </Grid>
                                        </Grid>
                                    </DataTemplate>
                                    <DataTemplate DataType="{x:Type ppevm:PPEditorTaskHolder}">
                                        <WrapPanel>
                                            <Button Background="#3000" BorderBrush="GreenYellow" BorderThickness="2" Command="{Binding CreateNewTaskCommand}" Padding="12">
                                                <DockPanel>
                                                    <Image DockPanel.Dock="Left" Source="/Images/Fpc/Add16.png" Width="16"/>
                                                    <TextBlock Text="{Loc txtNew}" Foreground="Black"/>
                                                </DockPanel>
                                            </Button>
                                        </WrapPanel>
                                    </DataTemplate>
                                </DataTemplate.Resources>
                                <ContentPresenter Content="{Binding}"/>
                            </DataTemplate>
                        </TabControl.ContentTemplate>
                    </TabControl>
                </DockPanel>
			</Grid>
		</Border>
	</DockPanel>
</UserControl>
