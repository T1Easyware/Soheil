<UserControl x:Class="Soheil.Views.SoheilSplitView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:Behavior="clr-namespace:Soheil.Core.DataValidation.Behavior;assembly=Soheil.Core"
             xmlns:Common="clr-namespace:Soheil.Common;assembly=Soheil.Common"
             xmlns:ControlBehaviors="clr-namespace:Soheil.Controls.Behaviors;assembly=Soheil.Controls"
             xmlns:Converters="clr-namespace:Soheil.Controls.Converters;assembly=Soheil.Controls"
             xmlns:D="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:I="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:Mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:System="clr-namespace:System;assembly=mscorlib"
             xmlns:TemplateSelectors="clr-namespace:Soheil.TemplateSelectors"
             xmlns:ViewModels="clr-namespace:Soheil.Core.ViewModels;assembly=Soheil.Core"
             xmlns:Views="clr-namespace:Soheil.Views"
             xmlns:FpcViews="clr-namespace:Soheil.Views.Fpc"
             xmlns:MultiCommands="clr-namespace:Soheil.Core.Commands.MultipleCommands;assembly=Soheil.Core"
             xmlns:Controls="clr-namespace:Soheil.Controls;assembly=Soheil.Controls"
             xmlns:Base="clr-namespace:Soheil.Core.Base;assembly=Soheil.Core" 
             xmlns:Interfaces="clr-namespace:Soheil.Core.Interfaces;assembly=Soheil.Core"
             xmlns:CustomControls="clr-namespace:Soheil.Controls.CustomControls;assembly=Soheil.Controls"
             xmlns:ColorPicker="clr-namespace:Soheil.Controls.CustomControls.ColorPicker;assembly=Soheil.Controls"
             D:DesignHeight="{Binding RelativeSource={RelativeSource AncestorType=Control},
                                      Path=ActualHeight}"
             D:DesignWidth="{Binding RelativeSource={RelativeSource AncestorType=Control},
                                     Path=ActualWidth}"
             Mc:Ignorable="D">
    <UserControl.Resources>
        <SolidColorBrush x:Key="ViewColor">Gainsboro</SolidColorBrush>
        <SolidColorBrush x:Key="PrintColor">MediumOrchid</SolidColorBrush>
        <SolidColorBrush x:Key="UpdateColor">Gold</SolidColorBrush>
        <SolidColorBrush x:Key="InsertColor">DodgerBlue</SolidColorBrush>
        <SolidColorBrush x:Key="FullColor">LimeGreen</SolidColorBrush>
        <Converters:InsertAccessTypeConverter x:Key="InsertConverter"/>
        <Converters:UpdateAccessTypeConverter x:Key="UpdateConverter"/>
        <Converters:PrintAccessTypeConverter x:Key="PrintConverter"/>
        <Converters:ViewAccessTypeConverter x:Key="ViewConverter"/>
        <Converters:FullAccessTypeConverter x:Key="FullConverter"/>
        <Converters:ItemExtendedConverter x:Key="ItemExpandedConverter" />
        <Converters:ReverseVisibilityConverter x:Key="ReverseVisibilityConverter" />
        <Converters:ColumnVisibilityConverter x:Key="VisibilityConverter" />
        <Converters:ComparisonConverter x:Key="ComparisonConverter" />
        <Converters:ComparisonVisibilityConverter x:Key="ComparisonVisibilityConverter" />
        <Converters:DateTimeConverter x:Key="DtConverter" />
        <Converters:MultiParameterConverter x:Key="MultiParamConverter" />
        <Converters:CostMultiValueConverter x:Key="MultiCostConverter" />
        <Converters:AccessTypeColorConverter x:Key="AccessColorConverter" />
        <Converters:ColorToBrushConverter x:Key="ColorConverter" />
		<Converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <!--..........................................................................................................-->

        <!-- Data Providers -->
        <ObjectDataProvider x:Key="AlignmentValues"
                            MethodName="GetValues"
                            ObjectType="{x:Type System:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="Common:Status" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="CostSourceValues"
                            MethodName="GetValues"
                            ObjectType="{x:Type System:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="Common:CostSourceType" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="IluoValues"
                            MethodName="GetValues"
                            ObjectType="{x:Type System:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="Common:ILUO" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="AccessValues"
                            MethodName="GetValues"
                            ObjectType="{x:Type System:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="Common:AccessType" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="CauseLevels"
                            MethodName="GetValues"
                            ObjectType="{x:Type System:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="Common:CauseLevel" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider MethodName="GetType" 
                ObjectType="{x:Type System:Type}" x:Key="ColorsTypeOdp">
            <ObjectDataProvider.MethodParameters>
                <System:String>System.Windows.Media.Colors, PresentationCore,
                    Version=3.0.0.0, Culture=neutral, 
                    PublicKeyToken=31bf3856ad364e35</System:String>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider ObjectInstance="{StaticResource ColorsTypeOdp}"
                            x:Key="ColorPropertiesOdp">
            <ObjectDataProvider.MethodName><![CDATA[GetProperties]]></ObjectDataProvider.MethodName>
        </ObjectDataProvider>

        <!-- General Templates -->
        <ControlTemplate x:Key="ConfirmExcludeButton">
            <ToggleButton Style="{StaticResource ConfirmCancelButton}" Content="X" Margin="5,0,-3,0">
                <I:Interaction.Triggers>
                    <I:EventTrigger EventName="Indeterminate">
                        <I:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType=Views:SoheilSplitView}, Path=ViewModel.CurrentContent.CurrentLink.ExcludeCommand}"
                                        CommandParameter="{Binding}" />
                    </I:EventTrigger>
                </I:Interaction.Triggers>
            </ToggleButton>
        </ControlTemplate>    
        <!--.............................................. Navigation Templates ..........................................-->

        <!-- User-Position -->
        <DataTemplate x:Key="UserPositionTemplate">
            <WrapPanel>
                <ContentControl Template="{StaticResource ConfirmExcludeButton}"/>
                <Button
                    Command="{Binding RelativeSource={RelativeSource AncestorType=Views:SoheilSplitView}, Path=ViewModel.CurrentContent.CurrentLink.ViewDetailsCommand}"
                    CommandParameter="{Binding}">
                    <ContentPresenter>
                        <ContentPresenter.ContentTemplate>
                            <DataTemplate DataType="ViewModels:UserPositionVM">
                                <StackPanel>
                                    <TextBlock Text="{Binding Path=PositionCode}" />
                                    <TextBlock Text="{Binding Path=PositionName}" />
                                </StackPanel>
                            </DataTemplate>
                        </ContentPresenter.ContentTemplate>
                    </ContentPresenter>
                </Button>
            </WrapPanel>
        </DataTemplate>
        <DataTemplate x:Key="PositionUserTemplate">
            <WrapPanel>
                <ContentControl Template="{StaticResource ConfirmExcludeButton}"/>
                <Button
                    Command="{Binding RelativeSource={RelativeSource AncestorType=Views:SoheilSplitView}, Path=ViewModel.CurrentContent.CurrentLink.ViewDetailsCommand}"
                    CommandParameter="{Binding}">

                    <ContentPresenter>
                        <ContentPresenter.ContentTemplate>
                            <DataTemplate DataType="ViewModels:UserPositionVM">
                                <StackPanel>
                                    <TextBlock Text="{Binding Path=UserCode}" />
                                    <TextBlock Text="{Binding Path=UserName}" />
                                </StackPanel>
                            </DataTemplate>
                        </ContentPresenter.ContentTemplate>
                    </ContentPresenter>
                </Button>
            </WrapPanel>
        </DataTemplate>

        <!-- User-AccessRule -->
        <DataTemplate x:Key="UserAccessRuleTemplate">
            <WrapPanel>
                <ContentControl Template="{StaticResource ConfirmExcludeButton}"/>
                <Button
                    Command="{Binding RelativeSource={RelativeSource AncestorType=Views:SoheilSplitView}, Path=ViewModel.CurrentContent.CurrentLink.ViewDetailsCommand}"
                    CommandParameter="{Binding}">
                    <ContentPresenter>
                        <ContentPresenter.ContentTemplate>
                            <DataTemplate DataType="ViewModels:UserAccessRuleVM">
                                <StackPanel>
                                    <TextBlock Text="{Binding Path=AccessRuleCode}" />
                                    <TextBlock Text="{Binding Path=AccessRuleName}" />
                                </StackPanel>
                            </DataTemplate>
                        </ContentPresenter.ContentTemplate>
                    </ContentPresenter>
                </Button>
            </WrapPanel>
        </DataTemplate>

        <!-- Position-AccessRule -->
        <DataTemplate x:Key="PositionAccessRuleTemplate">
            <WrapPanel>
                <ContentControl Template="{StaticResource ConfirmExcludeButton}"/>
                <Button
                    Command="{Binding RelativeSource={RelativeSource AncestorType=Views:SoheilSplitView}, Path=ViewModel.CurrentContent.CurrentLink.ViewDetailsCommand}"
                    CommandParameter="{Binding}">

                    <ContentPresenter>
                        <ContentPresenter.ContentTemplate>
                            <DataTemplate DataType="ViewModels:PositionAccessRuleVM">
                                <StackPanel>
                                    <TextBlock Text="{Binding Path=AccessRuleCode}" />
                                    <TextBlock Text="{Binding Path=AccessRuleName}" />
                                </StackPanel>
                            </DataTemplate>
                        </ContentPresenter.ContentTemplate>
                    </ContentPresenter>
                </Button>
            </WrapPanel>
        </DataTemplate>

        <!-- Product-Defection -->
        <DataTemplate x:Key="ProductDefectionTemplate">
            <WrapPanel>
                <ContentControl Template="{StaticResource ConfirmExcludeButton}"/>
                <Button
                    Command="{Binding RelativeSource={RelativeSource AncestorType=Views:SoheilSplitView}, Path=ViewModel.CurrentContent.CurrentLink.ViewDetailsCommand}"
                    CommandParameter="{Binding}">
                    <ContentPresenter>
                        <ContentPresenter.ContentTemplate>
                            <DataTemplate DataType="ViewModels:ProductDefectionVM">
                                <StackPanel>
                                    <TextBlock Text="{Binding Path=DefectionCode}" />
                                    <TextBlock Text="{Binding Path=DefectionName}" />
                                </StackPanel>
                            </DataTemplate>
                        </ContentPresenter.ContentTemplate>
                    </ContentPresenter>
                </Button>
            </WrapPanel>
        </DataTemplate>
        <DataTemplate x:Key="DefectionProductTemplate">
            <WrapPanel>
                <ContentControl Template="{StaticResource ConfirmExcludeButton}"/>
                <Button
                    Command="{Binding RelativeSource={RelativeSource AncestorType=Views:SoheilSplitView}, Path=ViewModel.CurrentContent.CurrentLink.ViewDetailsCommand}"
                    CommandParameter="{Binding}">
                    <ContentPresenter>
                        <ContentPresenter.ContentTemplate>
                            <DataTemplate DataType="ViewModels:ProductDefectionVM">
                                <StackPanel>
                                    <TextBlock Text="{Binding Path=ProductCode}" />
                                    <TextBlock Text="{Binding Path=ProductName}" />
                                </StackPanel>
                            </DataTemplate>
                        </ContentPresenter.ContentTemplate>
                    </ContentPresenter>
                </Button>
            </WrapPanel>
        </DataTemplate>

        <!-- Product-Rework -->
        <DataTemplate x:Key="ProductReworkTemplate">
            <WrapPanel>
                <ContentControl Template="{StaticResource ConfirmExcludeButton}"/>
                <Button
                    Command="{Binding RelativeSource={RelativeSource AncestorType=Views:SoheilSplitView}, Path=ViewModel.CurrentContent.CurrentLink.ViewDetailsCommand}"
                    CommandParameter="{Binding}">
                    <ContentPresenter>
                        <ContentPresenter.ContentTemplate>
                            <DataTemplate DataType="ViewModels:ProductReworkVM">
                                <StackPanel>
                                    <TextBlock Text="{Binding Path=ReworkCode}" />
                                    <TextBlock Text="{Binding Path=ReworkName}" />
                                    <TextBlock Text="{Binding Path=Code}" />
                                    <TextBlock Text="{Binding Path=Name}" />
                                </StackPanel>
                            </DataTemplate>
                        </ContentPresenter.ContentTemplate>
                    </ContentPresenter>
                </Button>
            </WrapPanel>
        </DataTemplate>
        <DataTemplate x:Key="ReworkProductTemplate">
            <WrapPanel>
                <ContentControl Template="{StaticResource ConfirmExcludeButton}"/>
                <Button
                    Command="{Binding RelativeSource={RelativeSource AncestorType=Views:SoheilSplitView}, Path=ViewModel.CurrentContent.CurrentLink.ViewDetailsCommand}"
                    CommandParameter="{Binding}">
                    <ContentPresenter>
                        <ContentPresenter.ContentTemplate>
                            <DataTemplate DataType="ViewModels:ProductReworkVM">
                                <StackPanel>
                                    <TextBlock Text="{Binding Path=ProductCode}" />
                                    <TextBlock Text="{Binding Path=ProductName}" />
                                    <TextBlock Text="{Binding Path=Code}" />
                                    <TextBlock Text="{Binding Path=Name}" />
                                </StackPanel>
                            </DataTemplate>
                        </ContentPresenter.ContentTemplate>
                    </ContentPresenter>
                </Button>
            </WrapPanel>
        </DataTemplate>

        <!-- Activity-Operator -->
        <DataTemplate x:Key="ActivityOperatorTemplate">
            <WrapPanel>
                <ContentControl Template="{StaticResource ConfirmExcludeButton}"/>
                <Button
                    Command="{Binding RelativeSource={RelativeSource AncestorType=Views:SoheilSplitView}, Path=ViewModel.CurrentContent.CurrentLink.ViewDetailsCommand}"
                    CommandParameter="{Binding}">
                    <ContentPresenter>
                        <ContentPresenter.ContentTemplate>
                            <DataTemplate DataType="ViewModels:ActivityOperatorVM">
                                <StackPanel>
                                    <TextBlock Text="{Binding Path=OperatorCode}" />
                                    <TextBlock Text="{Binding Path=OperatorName}" />
                                    <TextBlock Text="{Binding Path=SkillPoint}" />
                                </StackPanel>
                            </DataTemplate>
                        </ContentPresenter.ContentTemplate>
                    </ContentPresenter>
                </Button>
            </WrapPanel>
        </DataTemplate>
        <DataTemplate x:Key="GeneralActivitySkillTemplate">
            <WrapPanel>
                <ContentControl Template="{StaticResource ConfirmExcludeButton}"/>
                <Button
                    Command="{Binding RelativeSource={RelativeSource AncestorType=Views:SoheilSplitView}, Path=ViewModel.CurrentContent.CurrentLink.ViewDetailsCommand}"
                    CommandParameter="{Binding}">
                    <ContentPresenter>
                        <ContentPresenter.ContentTemplate>
                            <DataTemplate DataType="ViewModels:ActivityOperatorVM">
                                <StackPanel>
                                    <TextBlock Text="{Binding Path=ActivityCode}" />
                                    <TextBlock Text="{Binding Path=ActivityName}" />
                                    <TextBlock Text="{Binding Path=SkillPoint}" />
                                </StackPanel>
                            </DataTemplate>
                        </ContentPresenter.ContentTemplate>
                    </ContentPresenter>
                </Button>
            </WrapPanel>
        </DataTemplate>

        <!-- Station-Machine -->
        <DataTemplate x:Key="StationMachineTemplate">
            <WrapPanel>
                <ContentControl Template="{StaticResource ConfirmExcludeButton}"/>
                <Button
                    Command="{Binding RelativeSource={RelativeSource AncestorType=Views:SoheilSplitView}, Path=ViewModel.CurrentContent.CurrentLink.ViewDetailsCommand}"
                    CommandParameter="{Binding}">
                    <ContentPresenter>
                        <ContentPresenter.ContentTemplate>
                            <DataTemplate DataType="ViewModels:StationMachineVM">
                                <StackPanel>
                                    <TextBlock Text="{Binding Path=MachineCode}" />
                                    <TextBlock Text="{Binding Path=MachineName}" />
                                </StackPanel>
                            </DataTemplate>
                        </ContentPresenter.ContentTemplate>
                    </ContentPresenter>
                </Button>
            </WrapPanel>
        </DataTemplate>
        <DataTemplate x:Key="MachineStationTemplate">
            <WrapPanel>
                <ContentControl Template="{StaticResource ConfirmExcludeButton}"/>
                <Button
                    Command="{Binding RelativeSource={RelativeSource AncestorType=Views:SoheilSplitView}, Path=ViewModel.CurrentContent.CurrentLink.ViewDetailsCommand}"
                    CommandParameter="{Binding}">
                    <ContentPresenter>
                        <ContentPresenter.ContentTemplate>
                            <DataTemplate DataType="ViewModels:StationMachineVM">
                                <StackPanel>
                                    <TextBlock Text="{Binding Path=StationCode}" />
                                    <TextBlock Text="{Binding Path=StationName}" />
                                </StackPanel>
                            </DataTemplate>
                        </ContentPresenter.ContentTemplate>
                    </ContentPresenter>
                </Button>
            </WrapPanel>
        </DataTemplate>

        <!-- ActionPlan-FishboneNode -->
        <DataTemplate x:Key="ActionPlanFishboneNodeTemplate">
            <WrapPanel>
                <ContentControl Template="{StaticResource ConfirmExcludeButton}"/>
                <Button
                    Command="{Binding RelativeSource={RelativeSource AncestorType=Views:SoheilSplitView}, Path=ViewModel.CurrentContent.CurrentLink.ViewDetailsCommand}"
                    CommandParameter="{Binding}">
                    <ContentPresenter>
                        <ContentPresenter.ContentTemplate>
                            <DataTemplate DataType="ViewModels:ActionPlanFishboneVM">
                                <StackPanel>
                                    <TextBlock Text="{Binding Path=FishboneNodeId}" />
                                    <TextBlock Text="{Binding Path=FishboneNodeName}" />
                                </StackPanel>
                            </DataTemplate>
                        </ContentPresenter.ContentTemplate>
                    </ContentPresenter>
                </Button>
            </WrapPanel>
        </DataTemplate>
        <DataTemplate x:Key="FishboneNodeActionPlanTemplate">
            <WrapPanel>
                <ContentControl Template="{StaticResource ConfirmExcludeButton}"/>
                <Button
                    Command="{Binding RelativeSource={RelativeSource AncestorType=Views:SoheilSplitView}, Path=ViewModel.CurrentContent.CurrentLink.ViewDetailsCommand}"
                    CommandParameter="{Binding}">
                    <ContentPresenter>
                        <ContentPresenter.ContentTemplate>
                            <DataTemplate DataType="ViewModels:ActionPlanFishboneVM">
                                <StackPanel>
                                    <TextBlock Text="{Binding Path=ActionPlanCode}" />
                                    <TextBlock Text="{Binding Path=ActionPlanName}" />
                                </StackPanel>
                            </DataTemplate>
                        </ContentPresenter.ContentTemplate>
                    </ContentPresenter>
                </Button>
            </WrapPanel>
        </DataTemplate>

        <TemplateSelectors:NavigationItemSelector x:Key="NavigationItemTemplateSelector"
                                                  ProductDefectionTemplate="{StaticResource ProductDefectionTemplate}"
                                                  DefectionProductTemplate="{StaticResource DefectionProductTemplate}"
                                                  ProductReworkTemplate="{StaticResource ProductReworkTemplate}"
                                                  ReworkProductTemplate="{StaticResource ReworkProductTemplate}"
                                                  ActivityOperatorTemplate="{StaticResource ActivityOperatorTemplate}"
                                                  GeneralActivitySkillTemplate="{StaticResource GeneralActivitySkillTemplate}"
                                                  UserPositionTemplate="{StaticResource UserPositionTemplate}"
                                                  PositionUserTemplate="{StaticResource PositionUserTemplate}"
                                                  UserAccessRuleTemplate="{StaticResource UserAccessRuleTemplate}"
                                                  PositionAccessRuleTemplate="{StaticResource PositionAccessRuleTemplate}"
                                                  StationMachineTemplate="{StaticResource StationMachineTemplate}"
                                                  MachineStationTemplate="{StaticResource MachineStationTemplate}"
                                                  ActionPlanFishboneNodeTemplate="{StaticResource ActionPlanFishboneNodeTemplate}"
                                                  FishboneNodeActionPlanTemplate="{StaticResource FishboneNodeActionPlanTemplate}"
                                                  />
        <!--..........................................................................................................-->

        <!--  General Control Templates  -->
        <ControlTemplate x:Key="ExcludeList" TargetType="{x:Type ItemsControl}">
            <ItemsControl HorizontalAlignment="Right"
                          ItemsSource="{Binding CurrentContent.CurrentLink.SelectedItems}"
                          DockPanel.Dock="Bottom"
                          ItemTemplateSelector="{StaticResource NavigationItemTemplateSelector}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.Template>
                    <ControlTemplate>
                        <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" x:Name="ScrollViewer" 
                                      Padding="{TemplateBinding Padding}">
                            <ItemsPresenter />
                        </ScrollViewer>
                    </ControlTemplate>
                </ItemsControl.Template>
            </ItemsControl>
        </ControlTemplate>
        <ControlTemplate x:Key="IncludeList" TargetType="{x:Type ItemsControl}">
                <ItemsControl 
                    HorizontalAlignment="Left" 
                    DataContext="{Binding RelativeSource={RelativeSource AncestorType=Views:SoheilSplitView}, Path=ViewModel}"
                    ItemsSource="{Binding CurrentContent.CurrentLink.AllItems}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate DataType="Interfaces:ISplitContent">
                            <Button Name="linkItem" CommandParameter="{Binding}">
                                <Button.Command>
                                    <Binding RelativeSource="{RelativeSource AncestorType=Views:SoheilSplitView}">
                                        <Binding.Path>ViewModel.CurrentContent.CurrentLink.IncludeCommand</Binding.Path>
                                    </Binding>
                                </Button.Command>
                                <ContentPresenter>
                                    <ContentPresenter.ContentTemplate>
                                        <DataTemplate>
                                            <WrapPanel>
                                                <TextBlock>
                                                    <TextBlock.Text>
                                                        <Binding>
                                                            <Binding.Path>Code</Binding.Path>
                                                        </Binding>
                                                    </TextBlock.Text>
                                                </TextBlock>
                                                <TextBlock Text=" - " />
                                                <TextBlock>
                                                    <TextBlock.Text>
                                                        <Binding>
                                                            <Binding.Path>Name</Binding.Path>
                                                        </Binding>
                                                    </TextBlock.Text>
                                                </TextBlock>
                                            </WrapPanel>
                                        </DataTemplate>
                                    </ContentPresenter.ContentTemplate>
                                </ContentPresenter>
                            </Button>
                            <!--<DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding IsLinked}" Value="true">
                                    <Setter TargetName="linkItem" Property="Button.Visibility" Value="Collapsed"/>
                                </DataTrigger>
                            </DataTemplate.Triggers>-->
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.Template>
                        <ControlTemplate>
                            <ScrollViewer VerticalScrollBarVisibility="Auto" x:Name="ScrollViewer" Padding="{TemplateBinding Padding}">
                                <ItemsPresenter />
                            </ScrollViewer>
                        </ControlTemplate>
                    </ItemsControl.Template>
            </ItemsControl>
        </ControlTemplate>
        <ControlTemplate x:Key="CodeNameInfoContent" TargetType="{x:Type ContentControl}">
            <Border DockPanel.Dock="Top" Style="{StaticResource SoheilContentUpperBorder}">
                <UniformGrid Margin="5"
                             Columns="2"
                             Rows="2">
                    <TextBlock Style="{StaticResource EntryBoxHeader}" Text="{Loc txtCode}"  />
                    <TextBox Margin="2" Text="{Binding Path=CurrentContent.Code, ValidatesOnDataErrors=True, 
                        UpdateSourceTrigger=PropertyChanged}" />
                    <TextBlock Style="{StaticResource EntryBoxHeader}" Text="{Loc txtName}" />
                    <TextBox Margin="2" Text="{Binding Path=CurrentContent.Name, ValidatesOnDataErrors=True, 
                        UpdateSourceTrigger=PropertyChanged}" />
                </UniformGrid>
            </Border>
        </ControlTemplate>
        <ControlTemplate x:Key="GroupStatusInfoContent" TargetType="{x:Type ContentControl}">
            <Border DockPanel.Dock="Top" Style="{StaticResource SoheilContentMiddleBorder}">
                <UniformGrid Margin="5"
                             Columns="2"
                             Rows="2">
                    <TextBlock Style="{StaticResource EntryBoxHeader}" Text="{Loc txtGroup}" />
                    <ComboBox DisplayMemberPath="Name" Margin="2"
                              ItemsSource="{Binding Path=CurrentContent.Groups}"
                              SelectedValue="{Binding Path=CurrentContent.SelectedGroupVM,
                                                      Mode=TwoWay}"
                              SelectedValuePath="." />
                    <TextBlock Style="{StaticResource EntryBoxHeader}" Text="{Loc txtStatus}" />
                    <ComboBox Margin="2" ItemsSource="{Binding Source={StaticResource AlignmentValues}}" SelectedValue="{Binding Path=CurrentContent.Status}" />
                </UniformGrid>
            </Border>
        </ControlTemplate>
        <ControlTemplate x:Key="TypeStatusInfoContent" TargetType="{x:Type ContentControl}">
			<Expander DockPanel.Dock="Top" Style="{StaticResource SoheilContentLowerExpander}">
                <UniformGrid Margin="5"
                             Columns="2"
                             Rows="2">
                    <TextBlock Style="{StaticResource EntryBoxHeader}" Text="{Loc txtCostType}" />
                    <ComboBox Margin="2" ItemsSource="{Binding Source={StaticResource CostSourceValues}}" SelectedValue="{Binding Path=CurrentContent.CostSource}" />
                    <TextBlock Style="{StaticResource EntryBoxHeader}" Text="{Loc txtStatus}" />
                    <ComboBox Margin="2" ItemsSource="{Binding Source={StaticResource AlignmentValues}}" SelectedValue="{Binding Path=CurrentContent.Status}" />
                </UniformGrid>
			</Expander>
        </ControlTemplate>
        <ControlTemplate x:Key="StatusInfoContent" TargetType="{x:Type ContentControl}">
			<Expander DockPanel.Dock="Top" Style="{StaticResource SoheilContentLowerExpander}">
                <UniformGrid Margin="5"
                             Columns="2"
                             Rows="2">
                    <TextBlock Style="{StaticResource EntryBoxHeader}" Text="{Loc txtStatus}" />
                    <ComboBox Margin="2" ItemsSource="{Binding Source={StaticResource AlignmentValues}}" SelectedValue="{Binding Path=CurrentContent.Status}" />
                </UniformGrid>
			</Expander>
        </ControlTemplate>
        <ControlTemplate x:Key="UserDateInfoContent" TargetType="{x:Type ContentControl}">
			<Expander DockPanel.Dock="Bottom" Style="{StaticResource SoheilContentLowerExpander}">
                <UniformGrid Margin="5"
                             Columns="2"
                             Rows="3">
                    <TextBlock Style="{StaticResource EntryBoxHeader}" Text="{Loc txtCDate}" />
                    <DatePickerTextBox IsReadOnly="True" Margin="2">
                        <DatePickerTextBox.Text>
                            <LocBinding StringFormat="{}{0:d/M/yyyy HH:mm:ss tt}">
                                <Binding Converter="{StaticResource DtConverter}" Path="CurrentContent.CreatedDate" />
                            </LocBinding>
                        </DatePickerTextBox.Text>
                    </DatePickerTextBox>
                    <TextBlock Style="{StaticResource EntryBoxHeader}" Text="{Loc txtMDate}" />
                    <DatePickerTextBox IsReadOnly="True" Margin="2">
                        <DatePickerTextBox.Text>
                            <LocBinding StringFormat="{}{0:d/M/yyyy HH:mm:ss tt}">
                                <Binding Converter="{StaticResource DtConverter}" Path="CurrentContent.ModifiedDate" />
                            </LocBinding>
                        </DatePickerTextBox.Text>
                    </DatePickerTextBox>
                    <TextBlock Style="{StaticResource EntryBoxHeader}" Text="{Loc txtMBy}" />
                    <TextBox Margin="2" IsReadOnly="True" Text="{Binding Path=CurrentContent.ModifiedBy, Mode=OneWay}" />
                </UniformGrid>
			</Expander>
        </ControlTemplate>
        <ControlTemplate x:Key="UserInfoContent" TargetType="{x:Type ContentControl}">
			<Expander DockPanel.Dock="Bottom" Style="{StaticResource SoheilContentLowerExpander}">
                <UniformGrid Margin="5"
                             Columns="2"
                             Rows="2">
                    <TextBlock Style="{StaticResource EntryBoxHeader}" Text="{Loc txtMBy}" />
                    <TextBox Margin="2" IsReadOnly="True" Text="{Binding Path=CurrentContent.ModifiedBy}" />
                </UniformGrid>
			</Expander>
        </ControlTemplate>
        <ControlTemplate x:Key="CostQuantityInfoContent" TargetType="{x:Type ContentControl}">
            <Border DockPanel.Dock="Bottom" Style="{StaticResource SoheilContentLowerBorder}">
                <UniformGrid Margin="5"
                             Columns="2"
                             Rows="4">
                    <TextBlock Style="{StaticResource EntryBoxHeader}" Text="{Loc txtQty}" />
                    <TextBox Margin="2" IsReadOnly="{Binding CurrentContent.IsReadOnly}" Text="{Binding Path=CurrentContent.Quantity}" />
                    <TextBlock Style="{StaticResource EntryBoxHeader}" Text="{Loc txtOriginalQty}" />
                    <TextBox Margin="2" IsReadOnly="True" Text="{Binding Path=CurrentContent.OriginalQuantity}" />
                    <TextBlock Style="{StaticResource EntryBoxHeader}" Text="{Loc txtCost}" />
                    <TextBox Margin="2" IsReadOnly="{Binding CurrentContent.IsReadOnly}" Text="{Binding Path=CurrentContent.TotalCost}" />
                    <TextBlock Style="{StaticResource EntryBoxHeader}" Text="{Loc txtStockStatus}" />
                    <TextBlock Text="{Binding Path=CurrentContent.StockStatus}" />
                </UniformGrid>
            </Border>
        </ControlTemplate>
        <ControlTemplate x:Key="OperationPanel" TargetType="{x:Type ContentControl}">
            <Border DockPanel.Dock="Bottom" Style="{StaticResource SoheilContentLowerBarBorder}">
                <WrapPanel>
                    <WrapPanel Margin="10" HorizontalAlignment="Left">
                        <Button Height="30" Width="75"
                            Command="{Binding Path=CurrentContent.SaveCommand, UpdateSourceTrigger=PropertyChanged}" >
                            <DockPanel>
                                <Image DockPanel.Dock="Left" VerticalAlignment="Center" Width="16" Height="16" Source="/Soheil.Controls;component/Images/Save.png"/>
                                <Canvas Width="10"/>
                                <TextBlock DockPanel.Dock="Right" VerticalAlignment="Center" Text="{Loc txtSave}"/>
                            </DockPanel>
                        </Button>
                    </WrapPanel>
                </WrapPanel>
            </Border>
        </ControlTemplate>
        <ControlTemplate x:Key="ReturnPanel" TargetType="ContentControl">
            <Border Style="{StaticResource SoheilContentUpperBarBorder}">
                <WrapPanel Margin="10"
                                       HorizontalAlignment="Right"
                                       DockPanel.Dock="Bottom">
                    <Button Height="25" Width="100"
                                        Command="{Binding Path=CurrentContent.BackToMainContentCommand}" >
                        <DockPanel>
                            <Image DockPanel.Dock="Left" VerticalAlignment="Center" Width="16" Height="16" Source="/Soheil.Controls;component/Images/Return.png"/>
                            <Canvas Width="10"/>
                            <TextBlock DockPanel.Dock="Right" VerticalAlignment="Center" Text="{Loc txtBack}"/>
                        </DockPanel>
                    </Button>
                </WrapPanel>
            </Border>
        </ControlTemplate>

        <DataTemplate x:Key="EmptyContentTemplate" DataType="Base:ItemContentViewModel">
            <Canvas/>
        </DataTemplate>
        <DataTemplate x:Key="ColorCellTemplate">
            <Border Width="30" Background="{Binding Color, Converter={StaticResource ColorConverter}}"/>
        </DataTemplate>
        <!--................................................ 1.Access ................................................-->

        <!-- 1.1. Users Access -->
        <DataTemplate x:Key="UsersSubContentPanel">
            <WrapPanel Height="22" Margin="2">
                <CustomControls:ImageRadioButton Click="ListUpdated"
                             IsChecked="True"
                            Content="{Loc txtUsers}"
                            ImageSource="/Soheil.Controls;component/Images/Menus/users.png"
                            Tag="111" />
                <CustomControls:ImageRadioButton Click="ListUpdated"
                        Content="{Loc txtPositions}"
                            ImageSource="/Soheil.Controls;component/Images/Menus/Position.png"
                        Tag="112" />
                <CustomControls:ImageRadioButton Click="ListUpdated"
                        Content="{Loc txtOrgCharts}"
                            ImageSource="/Soheil.Controls;component/Images/Menus/orgChart.png"
                        Tag="113" />
            </WrapPanel>
        </DataTemplate>

        <!--  1.1.1. User  -->
        <DataTemplate x:Key="UserTemplate" DataType="ViewModels:UserVM">
            <GroupBox DataContext="{Binding RelativeSource={RelativeSource AncestorType=Views:SoheilSplitView}, Path=ViewModel}"
                      Style="{StaticResource SoheilContentGroupBox}" Header="{Binding CurrentContent.Name}">
                <I:Interaction.Behaviors>
                    <Behavior:ValidationExceptionBehavior />
                </I:Interaction.Behaviors>
                <DockPanel>
                    <Border DockPanel.Dock="Top" Style="{StaticResource SoheilContentUpperBarBorder}">
                        <WrapPanel Margin="10"
                                   HorizontalAlignment="Right"
                                   DockPanel.Dock="Bottom">
                            <Button Command="{Binding CurrentContent.ViewItemLinkCommand}"
                                    CommandParameter="0"
                                    Content="{Loc txtPositions}"/>
                            <Button Command="{Binding CurrentContent.ViewItemLinkCommand}"
                                    CommandParameter="1"
                                    Content="{Loc txtAccessRules}"/>
                        </WrapPanel>
                    </Border>
                    <DockPanel DockPanel.Dock="Top">
                        <Border DockPanel.Dock="Top" Style="{StaticResource SoheilContentUpperBorder}">
                            <UniformGrid Margin="5"
                                         Columns="2"
                                         Rows="6">
                                <TextBlock Style="{StaticResource EntryBoxHeader}" Text="{Loc txtCode}" />
                                <TextBox Margin="2">
                                    <TextBox.Text>
                                        <Binding ValidatesOnDataErrors="True" UpdateSourceTrigger="PropertyChanged">
                                            <Binding.Path>CurrentContent.Code</Binding.Path>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                                <TextBlock Style="{StaticResource EntryBoxHeader}" Text="{Loc txtName}" />
                                <TextBox Margin="2">
                                    <TextBox.Text>
                                        <Binding ValidatesOnDataErrors="True" UpdateSourceTrigger="PropertyChanged">
                                            <Binding.Path>CurrentContent.Name</Binding.Path>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                                <TextBlock Style="{StaticResource EntryBoxHeader}" Text="{Loc txtUsername}" />
                                <TextBox Margin="2">
                                    <TextBox.Text>
                                        <Binding ValidatesOnDataErrors="True"
                                                 UpdateSourceTrigger="PropertyChanged">
                                            <Binding.Path>CurrentContent.Username</Binding.Path>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                                <TextBlock Style="{StaticResource EntryBoxHeader}" Text="{Loc txtPassword}" />
                                <TextBox  Margin="2" x:Name="PlainPass" Visibility="Collapsed">
                                    <TextBox.Text>
                                        <Binding ValidatesOnDataErrors="True"
                                                 UpdateSourceTrigger="PropertyChanged">
                                            <Binding.Path>CurrentContent.Password</Binding.Path>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                                <PasswordBox Margin="2" Controls:PasswordHelper.Attach="True" 
                                     Controls:PasswordHelper.Password="{Binding Text, ElementName=PlainPass, Mode=TwoWay}" 
                                             />
                                <TextBlock Style="{StaticResource EntryBoxHeader}" Text="{Loc txtConfirmPassword}" />
                                <TextBox Margin="2" x:Name="PlainConfirmPass" Visibility="Collapsed">
                                    <TextBox.Text>
                                        <Binding ValidatesOnDataErrors="True"
                                                 UpdateSourceTrigger="PropertyChanged">
                                            <Binding.Path>CurrentContent.ConfirmPassword</Binding.Path>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                                <PasswordBox Margin="2" Controls:PasswordHelper.Attach="True" 
                                     Controls:PasswordHelper.Password="{Binding Text, ElementName=PlainConfirmPass, Mode=TwoWay}" 
                                             />
                                <CheckBox Margin="2" Content="{Loc BypassAccess}" IsChecked="{Binding CurrentContent.BypassPositionAccess}"></CheckBox>
                            </UniformGrid>
                        </Border>
                        <ContentControl DockPanel.Dock="Top" Template="{StaticResource StatusInfoContent}" />
                        <ContentControl DockPanel.Dock="Bottom" Template="{StaticResource UserDateInfoContent}" />
                    </DockPanel>
                    <ContentControl DockPanel.Dock="Bottom" Template="{StaticResource OperationPanel}" />
                    <Canvas DockPanel.Dock="Bottom" />
                </DockPanel>
            </GroupBox>
        </DataTemplate>
        <DataTemplate x:Key="UserPositionsTemplate" DataType="ViewModels:UserPositionsVM">
            <DockPanel  DataContext="{Binding RelativeSource={RelativeSource AncestorType=Views:SoheilSplitView}, Path=ViewModel}"
                        Visibility="{Binding CurrentContent.MainContentVisibility, Converter={StaticResource ReverseVisibilityConverter}}">
                <GroupBox DockPanel.Dock="Right" Style="{StaticResource SoheilDetailViewBorder}" Header="{Loc txtPositions}">
                    <DockPanel>
                        <ContentControl DockPanel.Dock="Top" Template="{StaticResource ReturnPanel}"/>
                        <ItemsControl DockPanel.Dock="Top" Template="{StaticResource ExcludeList}" />
                    </DockPanel>
                </GroupBox>
                <GroupBox Style="{StaticResource SoheilDetailListViewBorder}" Header="{Loc txtUsers}">
                    <ItemsControl Template="{StaticResource IncludeList}" />
                </GroupBox>
                <Canvas />
            </DockPanel>
        </DataTemplate>
        <DataTemplate x:Key="UserAccessRulesTemplate" DataType="ViewModels:UserAccessRulesVM">
            <DockPanel DataContext="{Binding RelativeSource={RelativeSource AncestorType=Views:SoheilSplitView}, Path=ViewModel}"
                       Visibility="{Binding CurrentContent.MainContentVisibility, Converter={StaticResource ReverseVisibilityConverter}}">
                <GroupBox DockPanel.Dock="Right" Style="{StaticResource SoheilDetailViewBorder}" Header="{Loc txtModules}">
                    <DockPanel>
                        <ContentControl DockPanel.Dock="Top" Template="{StaticResource ReturnPanel}"/>
                        <TreeView FlowDirection="{Loc enumDirection}">
                            <TreeView.ItemsSource>
                                <Binding>
                                    <Binding.Path>CurrentContent.AccessRulesVM.RootNode.ChildNodes</Binding.Path>
                                </Binding>
                            </TreeView.ItemsSource>
                            <I:Interaction.Behaviors>
                                <ControlBehaviors:BindableSelectedItemBehavior SelectedItem="{Binding RelativeSource={RelativeSource AncestorType=Views:SoheilSplitView}, 
                                    Path=ViewModel.CurrentContent.AccessRulesVM.CurrentNode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            </I:Interaction.Behaviors>
                            <TreeView.Resources>
                                <ResourceDictionary>
                                    <HierarchicalDataTemplate DataType="{x:Type ViewModels:UserAccessNodeVM}" ItemsSource="{Binding ChildNodes}">
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Text="{Binding Title}"/>
                                            <TextBlock Text=" "/>
                                            <TextBlock Text=" "  Background="{StaticResource ControlBackgroundBrush}" />
                                            <TextBlock Text=" "/>
                                            <TextBlock Text="V" 
                                                       FontWeight="ExtraBold" Foreground="{StaticResource ViewColor}"
                                                       Visibility="{Binding UserAccess,  Converter={StaticResource ViewConverter}}"/>
                                            <TextBlock Text=" "/>
                                            <TextBlock Text="P"  
                                                       FontWeight="ExtraBold" Foreground="{StaticResource PrintColor}"
                                                       Visibility="{Binding UserAccess,  Converter={StaticResource PrintConverter}}"/>
                                            <TextBlock Text=" "/>
                                            <TextBlock Text="U" 
                                                       FontWeight="ExtraBold" Foreground="{StaticResource UpdateColor}"
                                                       Visibility="{Binding  UserAccess, Converter={StaticResource UpdateConverter}}"/>
                                            <TextBlock Text=" "/>
                                            <TextBlock Text="I" 
                                                       FontWeight="ExtraBold" Foreground="{StaticResource InsertColor}"
                                                       Visibility="{Binding  UserAccess, Converter={StaticResource InsertConverter}}"/>
                                            <TextBlock Text=" "/>
                                            <TextBlock Text="  " 
                                                       FontWeight="ExtraBold" Background="{StaticResource FullColor}" 
                                                       Visibility="{Binding  UserAccess, Converter={StaticResource FullConverter}}"/>
                                            <!--   +   -->
                                            <TextBlock Text=" "/>
                                            <TextBlock Text=" " Background="{StaticResource ControlBackgroundBrush}" />
                                            <TextBlock Text=" + " FontWeight="ExtraBold"/>
                                            <TextBlock Text="V" 
                                                       FontWeight="ExtraBold" Foreground="{StaticResource ViewColor}"
                                                       Visibility="{Binding PositionAccess,  Converter={StaticResource ViewConverter}}"/>
                                            <TextBlock Text=" "/>
                                            <TextBlock Text="P"  
                                                       FontWeight="ExtraBold" Foreground="{StaticResource PrintColor}"
                                                       Visibility="{Binding PositionAccess,  Converter={StaticResource PrintConverter}}"/>
                                            <TextBlock Text=" "/>
                                            <TextBlock Text="U" 
                                                       FontWeight="ExtraBold" Foreground="{StaticResource UpdateColor}"
                                                       Visibility="{Binding  PositionAccess, Converter={StaticResource UpdateConverter}}"/>
                                            <TextBlock Text=" "/>
                                            <TextBlock Text="I" 
                                                       FontWeight="ExtraBold" Foreground="{StaticResource InsertColor}"
                                                       Visibility="{Binding  PositionAccess, Converter={StaticResource InsertConverter}}"/>
                                            <TextBlock Text=" "/>
                                            <TextBlock Text="  " 
                                                       FontWeight="ExtraBold" Background="{StaticResource FullColor}" 
                                                       Visibility="{Binding  PositionAccess, Converter={StaticResource FullConverter}}"/>
                                        </StackPanel>
                                    </HierarchicalDataTemplate>
                                </ResourceDictionary>
                            </TreeView.Resources>
                        </TreeView>
                    </DockPanel>
                </GroupBox>
                <GroupBox Style="{StaticResource SoheilDetailListViewBorder}" Header="{Loc txtAccessRules}">
                    <DockPanel DataContext="{Binding RelativeSource={RelativeSource AncestorType=Views:SoheilSplitView}, Path=ViewModel}">
                        <ItemsControl DockPanel.Dock="Top" HorizontalAlignment="Left" 
                                  ItemsSource="{Binding Source={StaticResource AccessValues}}" >
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Button CommandParameter="{Binding}">
                                        <Button.Command>
                                            <Binding RelativeSource="{RelativeSource AncestorType=Views:SoheilSplitView}">
                                                <Binding.Path>ViewModel.CurrentContent.CurrentLink.IncludeCommand</Binding.Path>
                                            </Binding>
                                        </Button.Command>
                                        <ContentPresenter>
                                            <ContentPresenter.ContentTemplate>
                                                <DataTemplate>
                                                    <WrapPanel>
                                                        <TextBlock Text="{Binding}"/>
                                                        <TextBlock Text=" "/>
                                                        <TextBlock Text="•" FontWeight="ExtraBold" Foreground="{Binding Converter={StaticResource AccessColorConverter}}"/>
                                                    </WrapPanel>
                                                </DataTemplate>
                                            </ContentPresenter.ContentTemplate>
                                        </ContentPresenter>
                                    </Button>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.Template>
                                <ControlTemplate>
                                    <ScrollViewer VerticalScrollBarVisibility="Auto" x:Name="ScrollViewer" Padding="{TemplateBinding Padding}">
                                        <ItemsPresenter />
                                    </ScrollViewer>
                                </ControlTemplate>
                            </ItemsControl.Template>
                        </ItemsControl>
                        <Border Style="{StaticResource SoheilViewBorder}">
                            <CheckBox Content="{Loc txtAccessToSubItems}" IsChecked="{Binding CurrentContent.CurrentLink.AccessToSubItems, Mode=TwoWay}"/>
                        </Border>
                    </DockPanel>
                </GroupBox>
                <Canvas />
            </DockPanel>
        </DataTemplate>

        <!--  1.1.2. Position  -->
        <DataTemplate x:Key="PositionTemplate" DataType="ViewModels:PositionVM">
            <GroupBox DataContext="{Binding RelativeSource={RelativeSource AncestorType=Views:SoheilSplitView}, Path=ViewModel}" 
                      Style="{StaticResource SoheilContentGroupBox}" Header="{Binding CurrentContent.Name}">
                <I:Interaction.Behaviors>
                    <Behavior:ValidationExceptionBehavior />
                </I:Interaction.Behaviors>
                <DockPanel>
                    <Border DockPanel.Dock="Top" Style="{StaticResource SoheilContentUpperBarBorder}">
                        <WrapPanel Margin="10"
                                   HorizontalAlignment="Right"
                                   DockPanel.Dock="Bottom">
                            <Button Command="{Binding CurrentContent.ViewItemLinkCommand}"
                                    CommandParameter="0"
                                    Content="{Loc txtUsers}"/>
                            <Button Command="{Binding CurrentContent.ViewItemLinkCommand}"
                                    CommandParameter="1"
                                    Content="{Loc txtAccessRules}"/>
                        </WrapPanel>
                    </Border>
                    <DockPanel DockPanel.Dock="Top">
                        <Border DockPanel.Dock="Top" Style="{StaticResource SoheilContentUpperBorder}">
                            <UniformGrid Margin="5"
                                         Columns="2"
                                         Rows="2">
                                <TextBlock Style="{StaticResource EntryBoxHeader}" Text="{Loc txtName}" />
                                <TextBox Margin="2">
                                    <TextBox.Text>
                                        <Binding ValidatesOnDataErrors="True" UpdateSourceTrigger="PropertyChanged">
                                            <Binding.Path>CurrentContent.Name</Binding.Path>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                            </UniformGrid>
                        </Border>
                        <ContentControl DockPanel.Dock="Top" Template="{StaticResource StatusInfoContent}" />
                        <ContentControl DockPanel.Dock="Bottom" Template="{StaticResource UserDateInfoContent}" />
                    </DockPanel>
                    <ContentControl DockPanel.Dock="Bottom" Template="{StaticResource OperationPanel}" />
                    <Canvas DockPanel.Dock="Bottom" />
                </DockPanel>
            </GroupBox>
        </DataTemplate>
        <DataTemplate x:Key="PositionUsersTemplate" DataType="ViewModels:PositionUsersVM">
            <DockPanel DataContext="{Binding RelativeSource={RelativeSource AncestorType=Views:SoheilSplitView}, Path=ViewModel}"
                        Visibility="{Binding CurrentContent.MainContentVisibility, Converter={StaticResource ReverseVisibilityConverter}}">
                <GroupBox DockPanel.Dock="Right" Style="{StaticResource SoheilDetailViewBorder}" Header="{Loc txtUsers}">
                    <DockPanel>
                        <ContentControl DockPanel.Dock="Top" Template="{StaticResource ReturnPanel}"/>
                        <ItemsControl DockPanel.Dock="Top" Template="{StaticResource ExcludeList}" />
                    </DockPanel>
                </GroupBox>
                <GroupBox Style="{StaticResource SoheilDetailListViewBorder}" Header="{Loc txtPositions}">
                    <ItemsControl Template="{StaticResource IncludeList}" />
                </GroupBox>
                <Canvas />
            </DockPanel>
        </DataTemplate>
        <DataTemplate x:Key="PositionAccessRulesTemplate" DataType="ViewModels:PositionAccessRulesVM">
            <DockPanel DataContext="{Binding RelativeSource={RelativeSource AncestorType=Views:SoheilSplitView}, Path=ViewModel}" 
                       Visibility="{Binding CurrentContent.MainContentVisibility, Converter={StaticResource ReverseVisibilityConverter}}">
                <GroupBox DockPanel.Dock="Right" Style="{StaticResource SoheilDetailViewBorder}" Header="{Loc txtModules}">
                    <DockPanel>
                        <ContentControl DockPanel.Dock="Top" Template="{StaticResource ReturnPanel}"/>
                        <TreeView FlowDirection="{Loc enumDirection}">
                            <TreeView.ItemsSource>
                                <Binding>
                                    <Binding.Path>CurrentContent.AccessRulesVM.RootNode.ChildNodes</Binding.Path>
                                </Binding>
                            </TreeView.ItemsSource>
                            <I:Interaction.Behaviors>
                                <ControlBehaviors:BindableSelectedItemBehavior SelectedItem="{Binding RelativeSource={RelativeSource AncestorType=Views:SoheilSplitView}, 
                                    Path=ViewModel.CurrentContent.AccessRulesVM.CurrentNode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            </I:Interaction.Behaviors>
                            <TreeView.Resources>
                                <ResourceDictionary>
                                    <HierarchicalDataTemplate DataType="{x:Type ViewModels:PositionAccessNodeVM}" ItemsSource="{Binding ChildNodes}">
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Text="{Binding Title}"/>
                                            <TextBlock Text=" "/>
                                            <TextBlock Text=" "  Background="{StaticResource ControlBackgroundBrush}" />
                                            <TextBlock Text=" "/>
                                            <TextBlock Text="V" 
                                                       FontWeight="ExtraBold" Foreground="{StaticResource ViewColor}"
                                                       Visibility="{Binding PositionAccess,  Converter={StaticResource ViewConverter}}"/>
                                            <TextBlock Text=" "/>
                                            <TextBlock Text="P"  
                                                       FontWeight="ExtraBold" Foreground="{StaticResource PrintColor}"
                                                       Visibility="{Binding PositionAccess,  Converter={StaticResource PrintConverter}}"/>
                                            <TextBlock Text=" "/>
                                            <TextBlock Text="U" 
                                                       FontWeight="ExtraBold" Foreground="{StaticResource UpdateColor}"
                                                       Visibility="{Binding  PositionAccess, Converter={StaticResource UpdateConverter}}"/>
                                            <TextBlock Text=" "/>
                                            <TextBlock Text="I" 
                                                       FontWeight="ExtraBold" Foreground="{StaticResource InsertColor}"
                                                       Visibility="{Binding  PositionAccess, Converter={StaticResource InsertConverter}}"/>
                                            <TextBlock Text=" "/>
                                            <TextBlock Text="  " 
                                                       FontWeight="ExtraBold" Background="{StaticResource FullColor}" 
                                                       Visibility="{Binding  PositionAccess, Converter={StaticResource FullConverter}}"/>
                                        </StackPanel>
                                    </HierarchicalDataTemplate>
                                </ResourceDictionary>
                            </TreeView.Resources>
                        </TreeView>
                    </DockPanel>
                </GroupBox>
                <GroupBox Style="{StaticResource SoheilDetailListViewBorder}" Header="{Loc txtPositions}">
                    <DockPanel DataContext="{Binding RelativeSource={RelativeSource AncestorType=Views:SoheilSplitView}, Path=ViewModel}">
                        <ItemsControl DockPanel.Dock="Top" HorizontalAlignment="Left" 
                                  ItemsSource="{Binding Source={StaticResource AccessValues}}" >
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Button CommandParameter="{Binding}">
                                        <Button.Command>
                                            <Binding RelativeSource="{RelativeSource AncestorType=Views:SoheilSplitView}">
                                                <Binding.Path>ViewModel.CurrentContent.CurrentLink.IncludeCommand</Binding.Path>
                                            </Binding>
                                        </Button.Command>
                                        <ContentPresenter>
                                            <ContentPresenter.ContentTemplate>
                                                <DataTemplate>
                                                    <WrapPanel>
                                                        <TextBlock Text="{Binding}"/>
                                                        <TextBlock Text=" "/>
                                                        <TextBlock Text="•" FontWeight="ExtraBold" Foreground="{Binding Converter={StaticResource AccessColorConverter}}"/>
                                                    </WrapPanel>
                                                </DataTemplate>
                                            </ContentPresenter.ContentTemplate>
                                        </ContentPresenter>
                                    </Button>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.Template>
                                <ControlTemplate>
                                    <ScrollViewer VerticalScrollBarVisibility="Auto" x:Name="ScrollViewer" Padding="{TemplateBinding Padding}">
                                        <ItemsPresenter />
                                    </ScrollViewer>
                                </ControlTemplate>
                            </ItemsControl.Template>
                        </ItemsControl>
                        <Border Style="{StaticResource SoheilViewBorder}">
                            <CheckBox Content="{Loc txtAccessToSubItems}" IsChecked="{Binding CurrentContent.CurrentLink.AccessToSubItems, Mode=TwoWay}"/>
                        </Border>
                    </DockPanel>
                </GroupBox>
                <Canvas />
            </DockPanel>
        </DataTemplate>
        <DataTemplate x:Key="PositionOrganizationChartsTemplate" DataType="ViewModels:PositionOrganizationChartsVM">
            <DockPanel DataContext="{Binding RelativeSource={RelativeSource AncestorType=Views:SoheilSplitView}, Path=ViewModel}">
                <GroupBox DockPanel.Dock="Right" Style="{StaticResource SoheilDetailViewBorder}" Header="{Loc txtOrgCharts}">
                    <DockPanel>
                        <Border DockPanel.Dock="Top" Style="{StaticResource SoheilContentUpperBarBorder}">
                            <WrapPanel Margin="10"
                                       HorizontalAlignment="Right"
                                       DockPanel.Dock="Bottom">
                                <Button Command="{Binding ViewCommand}"
                                        Content="Back To Position">
                                    <Button.CommandParameter>
                                        <Binding>
                                            <Binding.Path>CurrentContent.CurrentPosition</Binding.Path>
                                        </Binding>
                                    </Button.CommandParameter>
                                </Button>
                            </WrapPanel>
                        </Border>
                        <ItemsControl DockPanel.Dock="Top" Template="{StaticResource ExcludeList}" />
                    </DockPanel>
                </GroupBox>
                <GroupBox Style="{StaticResource SoheilDetailListViewBorder}" Header="{Loc txtPositions}">
                    <ItemsControl Template="{StaticResource IncludeList}" />
                </GroupBox>
                <Canvas />
            </DockPanel>
        </DataTemplate>

        <!--  1.1.3. OrganizationChart  -->
        <DataTemplate x:Key="OrganizationChartTemplate" DataType="ViewModels:OrganizationChartVM">
            <DockPanel DataContext="{Binding RelativeSource={RelativeSource AncestorType=Views:SoheilSplitView}, Path=ViewModel}">
                <GroupBox DockPanel.Dock="Right" Style="{StaticResource SoheilContentSplitGroupBox}" Header="{Binding CurrentContent.Name}">
                    <I:Interaction.Behaviors>
                        <Behavior:ValidationExceptionBehavior />
                    </I:Interaction.Behaviors>
                    <DockPanel>
                        <DockPanel DockPanel.Dock="Top">
                            <Border DockPanel.Dock="Top" Style="{StaticResource SoheilContentBorder}">
                                <UniformGrid Margin="5"
                                             Columns="2"
                                             Rows="2">
                                    <TextBlock Style="{StaticResource EntryBoxHeader}" Text="{Loc txtName}" />
                                    <TextBox Margin="2">
                                        <TextBox.Text>
                                            <Binding ValidatesOnDataErrors="True" UpdateSourceTrigger="PropertyChanged">
                                                <Binding.Path>CurrentContent.Name</Binding.Path>
                                            </Binding>
                                        </TextBox.Text>
                                    </TextBox>
                                    <TextBlock Style="{StaticResource EntryBoxHeader}" Text="{Loc txtStatus}" />
                                    <ComboBox Margin="2" ItemsSource="{Binding Source={StaticResource AlignmentValues}}">
                                        <ComboBox.SelectedValue>
                                            <Binding>
                                                <Binding.Path>CurrentContent.Status</Binding.Path>
                                            </Binding>
                                        </ComboBox.SelectedValue>
                                    </ComboBox>
                                </UniformGrid>
                            </Border>
                            <Border DockPanel.Dock="Bottom" Style="{StaticResource SoheilContentBorder}">
                                <TreeView Name="tree">
                                    <TreeView.ItemsSource>
                                        <Binding>
                                            <Binding.Path>CurrentContent.PositionsVM.RootNode.ChildNodes</Binding.Path>
                                        </Binding>
                                    </TreeView.ItemsSource>
                                    <TreeView.ItemContainerStyle>
                                        <Style TargetType="TreeViewItem">
                                            <Style.Resources>
                                                <LinearGradientBrush x:Key="ItemAreaBrush" StartPoint="0.5, 0" EndPoint="0.5, 1">
                                                    <GradientStop Offset="0" Color="{StaticResource DisabledSelectionColor}" />
                                                    <GradientStop Offset="1" Color="{StaticResource DisabledSelectionColor}" />
                                                </LinearGradientBrush>
                                                <LinearGradientBrush x:Key="SelectedItemAreaBrush" StartPoint="0.5, 0" EndPoint="0.5, 1">
                                                    <GradientStop Offset="0" Color="{StaticResource HoverSelectionColor}" />
                                                    <GradientStop Offset="1" Color="{StaticResource PressedSelectionColor}" />
                                                </LinearGradientBrush>
                                                <LinearGradientBrush x:Key="ItemBorderBrush" StartPoint="0.5, 0" EndPoint="0.5, 1">
                                                    <GradientStop Offset="0" Color="LightGray" />
                                                    <GradientStop Offset="1" Color="Gray" />
                                                </LinearGradientBrush>
                                                <LinearGradientBrush x:Key="SelectedItemBorderBrush" StartPoint="0.5, 0" EndPoint="0.5, 1">
                                                    <GradientStop Offset="0" Color="Honeydew" />
                                                    <GradientStop Offset="1" Color="Black" />
                                                </LinearGradientBrush>
                                                <DropShadowBitmapEffect x:Key="DropShadowEffect" />
                                            </Style.Resources>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="TreeViewItem">
                                                        <Grid Margin="2">
                                                            <Grid.RowDefinitions>
                                                                <!--  The top row contains the item's content.  -->
                                                                <RowDefinition Height="Auto" />
                                                                <!--  The bottom row contains the item's children.  -->
                                                                <RowDefinition Height="*" />
                                                            </Grid.RowDefinitions>
                                                            <Border Name="Bd"
                                                                    Background="{StaticResource ItemAreaBrush}"
                                                                    BorderBrush="{StaticResource ItemBorderBrush}"
                                                                    BorderThickness="0.6"
                                                                    CornerRadius="8"
                                                                    Padding="6"
                                                                    TextElement.Foreground="{StaticResource TextBrush}">
                                                                <DockPanel>
                                                                    <ContentPresenter Name="PART_Header"
                                                                                      HorizontalAlignment="Center"
                                                                                      VerticalAlignment="Center"
                                                                                      ContentSource="Header"
                                                                                      DockPanel.Dock="Left" />
                                                                    <ToggleButton DockPanel.Dock="Right" Style="{StaticResource ConfirmCancelButton}" Content="X" Width="20">
                                                                        <I:Interaction.Triggers>
                                                                            <I:EventTrigger EventName="Indeterminate">
                                                                                <I:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType=Views:SoheilSplitView}, 
                                                                                        Path=ViewModel.CurrentContent.PositionsVM.ExcludeTreeCommand}"
                                                                                    CommandParameter="{Binding}" />
                                                                            </I:EventTrigger>
                                                                        </I:Interaction.Triggers>
                                                                    </ToggleButton>
                                                                    <Canvas />
                                                                </DockPanel>
                                                            </Border>
                                                            <ItemsPresenter Grid.Row="1" />
                                                        </Grid>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsSelected" Value="True">
                                                                <Setter TargetName="Bd" Property="Panel.Background" Value="{StaticResource SelectedItemAreaBrush}" />
                                                                <Setter TargetName="Bd" Property="Border.BorderBrush" Value="{StaticResource SelectedItemBorderBrush}" />
                                                                <Setter TargetName="Bd" Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                                                                <Setter TargetName="Bd" Property="Border.BitmapEffect" Value="{StaticResource DropShadowEffect}" />
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="ItemsPanel">
                                                <Setter.Value>
                                                    <ItemsPanelTemplate>
                                                        <StackPanel Margin="4,6"
                                                                    HorizontalAlignment="Center"
                                                                    IsItemsHost="True"
                                                                    Orientation="Horizontal" />
                                                    </ItemsPanelTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </TreeView.ItemContainerStyle>
                                    <I:Interaction.Behaviors>
                                        <ControlBehaviors:BindableSelectedItemBehavior>
                                            <ControlBehaviors:BindableSelectedItemBehavior.SelectedItem>
                                                <Binding RelativeSource="{RelativeSource AncestorType=Views:SoheilSplitView}"
                                                         Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                                                    <Binding.Path>ViewModel.CurrentContent.PositionsVM.CurrentNode</Binding.Path>
                                                </Binding>
                                            </ControlBehaviors:BindableSelectedItemBehavior.SelectedItem>
                                        </ControlBehaviors:BindableSelectedItemBehavior>
                                    </I:Interaction.Behaviors>
                                    <TreeView.Resources>
                                        <ResourceDictionary>
                                            <HierarchicalDataTemplate DataType="{x:Type ViewModels:OrganizationChartPositionVM}" ItemsSource="{Binding ChildNodes}">
                                                <TextBlock Text="{Binding Title}" />
                                            </HierarchicalDataTemplate>
                                        </ResourceDictionary>
                                    </TreeView.Resources>
                                    <TreeView.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <Grid HorizontalAlignment="Center" IsItemsHost="True" />
                                        </ItemsPanelTemplate>
                                    </TreeView.ItemsPanel>
                                </TreeView>
                            </Border>
                        </DockPanel>
                        <ContentControl DockPanel.Dock="Bottom" Template="{StaticResource OperationPanel}" />
                        <Canvas DockPanel.Dock="Bottom" />
                    </DockPanel>
                </GroupBox>
                <GroupBox Style="{StaticResource SoheilDetailListViewBorder}" Header="{Loc txtPositions}">
                    <ItemsControl HorizontalAlignment="Left">
                        <ItemsControl.ItemsSource>
                            <Binding>
                                <Binding.Path>CurrentContent.PositionsVM.AllItems</Binding.Path>
                            </Binding>
                        </ItemsControl.ItemsSource>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Button>
                                    <Button.Command>
                                        <Binding RelativeSource="{RelativeSource AncestorType=Views:SoheilSplitView}">
                                            <Binding.Path>ViewModel.CurrentContent.PositionsVM.IncludeCommand</Binding.Path>
                                        </Binding>
                                    </Button.Command>
                                    <Button.CommandParameter>
                                        <MultiBinding Converter="{StaticResource MultiParamConverter}">
                                            <Binding>
                                                <Binding.Path>Id</Binding.Path>
                                            </Binding>
                                            <Binding
                                                RelativeSource="{RelativeSource AncestorType=Views:SoheilSplitView}">
                                                <Binding.Path>ViewModel.CurrentContent.PositionsVM.CurrentNode.Id</Binding.Path>
                                            </Binding>
                                        </MultiBinding>
                                    </Button.CommandParameter>
                                    <ContentPresenter>
                                        <ContentPresenter.ContentTemplate>
                                            <DataTemplate>
                                                <WrapPanel>
                                                    <TextBlock>
                                                        <TextBlock.Text>
                                                            <Binding>
                                                                <Binding.Path>Id</Binding.Path>
                                                            </Binding>
                                                        </TextBlock.Text>
                                                    </TextBlock>
                                                    <TextBlock Text=" - " />
                                                    <TextBlock>
                                                        <TextBlock.Text>
                                                            <Binding>
                                                                <Binding.Path>Name</Binding.Path>
                                                            </Binding>
                                                        </TextBlock.Text>
                                                    </TextBlock>
                                                </WrapPanel>
                                            </DataTemplate>
                                        </ContentPresenter.ContentTemplate>
                                    </ContentPresenter>
                                </Button>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.Template>
                            <ControlTemplate>
                                <ScrollViewer VerticalScrollBarVisibility="Auto" x:Name="ScrollViewer" Padding="{TemplateBinding Padding}">
                                    <ItemsPresenter />
                                </ScrollViewer>
                            </ControlTemplate>
                        </ItemsControl.Template>
                    </ItemsControl>
                </GroupBox>
                <Canvas />
            </DockPanel>
        </DataTemplate>
        <DataTemplate x:Key="OrganizationChartPositionsTemplate" DataType="ViewModels:OrganizationChartPositionsVM">
            <DockPanel DataContext="{Binding RelativeSource={RelativeSource AncestorType=Views:SoheilSplitView}, Path=ViewModel}">
                <GroupBox DockPanel.Dock="Right" Style="{StaticResource SoheilDetailViewBorder}" Header="{Loc txtOrgCharts}">
                    <DockPanel>
                        <Border DockPanel.Dock="Top" Style="{StaticResource SoheilContentUpperBarBorder}">
                            <WrapPanel Margin="10"
                                       HorizontalAlignment="Right"
                                       DockPanel.Dock="Bottom">
                                <Button Command="{Binding ViewCommand}"
                                        Content="Back To OrganizationChart">
                                    <Button.CommandParameter>
                                        <Binding>
                                            <Binding.Path>CurrentContent.CurrentOrganizationChart</Binding.Path>
                                        </Binding>
                                    </Button.CommandParameter>
                                </Button>
                            </WrapPanel>
                        </Border>
                        <ItemsControl DockPanel.Dock="Top" Template="{StaticResource ExcludeList}" />
                    </DockPanel>
                </GroupBox>
                <GroupBox Style="{StaticResource SoheilDetailListViewBorder}" Header="{Loc txtPositions}">
                    <ItemsControl Template="{StaticResource IncludeList}" />
                </GroupBox>
                <Canvas />
            </DockPanel>
        </DataTemplate>

        <!-- 1.2. Modules -->
        <DataTemplate x:Key="ModulesSubContentPanel">
            <WrapPanel Height="22" Margin="2">
                <CustomControls:ImageRadioButton Click="ListUpdated"
                             IsChecked="True"
                            Content="{Loc txtAccessRules}"
                            ImageSource="/Soheil.Controls;component/Images/Menus/pc2.png"
                            Tag="121" />
            </WrapPanel>
        </DataTemplate>

        <!--  1.2.1. AccessRule  -->
        <DataTemplate x:Key="AccessRuleTemplate" DataType="ViewModels:AccessRuleVM">
            <GroupBox DataContext="{Binding RelativeSource={RelativeSource AncestorType=Views:SoheilSplitView}, Path=ViewModel}" 
                      Style="{StaticResource SoheilContentGroupBox}">
                <I:Interaction.Behaviors>
                    <Behavior:ValidationExceptionBehavior />
                </I:Interaction.Behaviors>
                <DockPanel>
                    <Border DockPanel.Dock="Top" Style="{StaticResource SoheilContentUpperBarBorder}">
                    </Border>
                    <DockPanel DockPanel.Dock="Top">
                        <ContentControl DockPanel.Dock="Top" Template="{StaticResource CodeNameInfoContent}" />
                    </DockPanel>
                    <ContentControl DockPanel.Dock="Bottom" Template="{StaticResource OperationPanel}" />
                    <Canvas DockPanel.Dock="Bottom" />
                </DockPanel>
            </GroupBox>
        </DataTemplate>
        <DataTemplate x:Key="AccessRuleUsersTemplate" DataType="ViewModels:AccessRuleUsersVM">
            <DockPanel DataContext="{Binding RelativeSource={RelativeSource AncestorType=Views:SoheilSplitView}, Path=ViewModel}">
                <GroupBox DockPanel.Dock="Right" Style="{StaticResource SoheilDetailViewBorder}" Header="{Loc txtUsers}">
                    <DockPanel>
                        <Border DockPanel.Dock="Top" Style="{StaticResource SoheilContentUpperBarBorder}">
                            <WrapPanel Margin="10"
                                       HorizontalAlignment="Right"
                                       DockPanel.Dock="Bottom">
                                <Button Command="{Binding ViewCommand}"
                                        Content="Back To AccessRule">
                                    <Button.CommandParameter>
                                        <Binding>
                                            <Binding.Path>CurrentContent.CurrentAccessRule</Binding.Path>
                                        </Binding>
                                    </Button.CommandParameter>
                                </Button>
                            </WrapPanel>
                        </Border>
                        <ItemsControl DockPanel.Dock="Top" Template="{StaticResource ExcludeList}" />
                    </DockPanel>
                </GroupBox>
                <GroupBox Style="{StaticResource SoheilDetailListViewBorder}" Header="{Loc txtModules}">
                    <ItemsControl Template="{StaticResource IncludeList}" />
                </GroupBox>
                <Canvas />
            </DockPanel>
        </DataTemplate>
        <DataTemplate x:Key="AccessRulePositionsTemplate" DataType="ViewModels:AccessRulePositionsVM">
            <DockPanel DataContext="{Binding RelativeSource={RelativeSource AncestorType=Views:SoheilSplitView}, Path=ViewModel}">
                <GroupBox DockPanel.Dock="Right" Style="{StaticResource SoheilDetailViewBorder}" Header="{Loc txtPositions}">
                    <DockPanel>
                        <Border DockPanel.Dock="Top" Style="{StaticResource SoheilContentUpperBarBorder}">
                            <WrapPanel Margin="10"
                                       HorizontalAlignment="Right"
                                       DockPanel.Dock="Bottom">
                                <Button Command="{Binding ViewCommand}"
                                        Content="Back To AccessRule">
                                    <Button.CommandParameter>
                                        <Binding>
                                            <Binding.Path>CurrentContent.CurrentAccessRule</Binding.Path>
                                        </Binding>
                                    </Button.CommandParameter>
                                </Button>
                            </WrapPanel>
                        </Border>
                        <ItemsControl DockPanel.Dock="Top" Template="{StaticResource ExcludeList}" />
                    </DockPanel>
                </GroupBox>
                <GroupBox Style="{StaticResource SoheilDetailListViewBorder}" Header="{Loc txtModules}">
                    <ItemsControl Template="{StaticResource IncludeList}" />
                </GroupBox>
                <Canvas />
            </DockPanel>
        </DataTemplate>

		<!-- 1.3. Working Times-->
		<DataTemplate x:Key="OrganizationCalendarSubContentPanel">
			<WrapPanel Height="22" Margin="2">
                <CustomControls:ImageRadioButton Click="ListUpdated"
                             IsChecked="True"
                            Content="{Loc txtWorkProfiles}"
                            ImageSource="/Soheil.Controls;component/Images/Menus/WorkingTime.png"
                            Tag="131" />
                <CustomControls:ImageRadioButton Click="ListUpdated"
                        Content="{Loc txtHolidays}"
                            ImageSource="/Soheil.Controls;component/Images/Menus/Holidays.png"
                        Tag="132" />
                <CustomControls:ImageRadioButton Click="ListUpdated"
                        Content="{Loc txtWorkProfilePlan}"
                            ImageSource="/Soheil.Controls;component/Images/Menus/TimePlan.png"
                        Tag="133" />
            </WrapPanel>
		</DataTemplate>
		
		<!--  1.2.1. Work Profile  -->
		<DataTemplate x:Key="WorkProfileTemplate" DataType="wt:WorkProfileVm"
					  xmlns:wt="clr-namespace:Soheil.Core.ViewModels.OrganizationCalendar"
					  xmlns:conv="clr-namespace:Soheil.Controls.Converters.PP;assembly=Soheil.Controls">
			<DataTemplate.Resources>
				<conv:ColorFixer x:Key="colorFixer"/>
				<Converters:ColorToRgbBrush x:Key="ColorToRgbBrush"/>
				<Converters:ShiftStartSecondsToMargin x:Key="ShiftStartSecondsToMargin"/>
				<Converters:ShiftEndSecondsToMargin x:Key="ShiftEndSecondsToMargin"/>
				<Converters:ShiftDurationToWidth x:Key="ShiftDurationToWidth"/>
				<Converters:ShiftBreakDurationToEndMargin x:Key="ShiftBreakDurationToEndMargin"/>
				<Converters:ShiftBreakDurationToWidth x:Key="ShiftBreakDurationToWidth"/>
				<Converters:WorkShiftSecondsToString x:Key="WorkShiftSecondsToString"/>
				
			</DataTemplate.Resources>
			<GroupBox DataContext="{Binding RelativeSource={RelativeSource AncestorType=Views:SoheilSplitView}, Path=ViewModel}" 
                      Style="{StaticResource SoheilContentGroupBox}" Header="{Binding CurrentContent.Name}">
				<I:Interaction.Behaviors>
					<Behavior:ValidationExceptionBehavior />
				</I:Interaction.Behaviors>
				<DockPanel FlowDirection="{Loc enumDirection}">
					<ContentControl DockPanel.Dock="Bottom" Template="{StaticResource OperationPanel}" />
					<ContentControl DockPanel.Dock="Bottom" Template="{StaticResource UserDateInfoContent}" />
					<Border Style="{StaticResource SoheilContentUpperBorder}">
						<Grid Margin="5">
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto"/>
								<RowDefinition Height="Auto"/>
								<RowDefinition Height="Auto"/>
								<RowDefinition Height="Auto"/>
								<RowDefinition Height="5"/>
								<RowDefinition Height="Auto"/>
								<RowDefinition Height="Auto"/>
								<RowDefinition Height="Auto"/>
								<RowDefinition Height="Auto"/>
								<RowDefinition Height="5"/>
								<RowDefinition Height="*"/>
							</Grid.RowDefinitions>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition Width="*"/>
							</Grid.ColumnDefinitions>
							<!--Name-->
							<TextBlock Style="{StaticResource EntryBoxHeader}" Text="{Loc txtName}" />
							<TextBox Margin="2" Grid.Column="1"
										Text="{Binding Path=CurrentContent.Name, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" />
							<!--Week-->
							<TextBlock Style="{StaticResource EntryBoxHeader}" Text="{Loc txtWeekDays}" Grid.Row="1"/>
							<TextBlock Style="{StaticResource EntryBoxHeader}" Text="{Loc txtWeekStart}" Grid.Row="2" ToolTip="آیا شروع هفته از این روز است؟"/>
							<TextBlock Style="{StaticResource EntryBoxHeader}" Text="{Loc txtBusinessDayState}" Grid.Row="3"/>
							<ScrollViewer Grid.Row="1" Grid.RowSpan="3" Grid.Column="1"
											HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Disabled">
								<ItemsControl Margin="2"
										ItemsSource="{Binding CurrentContent.Week}">
									<ItemsControl.ItemTemplate>
										<DataTemplate>
											<Border BorderBrush="{StaticResource ThemeLightBrush}" 
													BorderThickness="1"
													Background="{Binding Color, Converter={StaticResource colorFixer}}"
													Margin="1">
												<Grid>
													<Grid.RowDefinitions>
														<RowDefinition Height="*"/>
														<RowDefinition Height="*"/>
														<RowDefinition Height="*"/>
													</Grid.RowDefinitions>
													<TextBlock Text="{Binding Name}" HorizontalAlignment="Center"/>
													<ToggleButton Grid.Row="1" IsChecked="{Binding IsWeekStart}" Opacity="0" x:Name="isWeekStartButton"
																HorizontalAlignment="Stretch" VerticalAlignment="Center">
														<Image Style="{StaticResource NotDefaultImage}" x:Name="isWeekStartButtonImage" Opacity="0.8" HorizontalAlignment="Center" VerticalAlignment="Center"/>
													</ToggleButton>
													<Image Grid.Row="1" Style="{StaticResource DefaultImage}" Width="18" x:Name="isWeekStartImage" Opacity="0" HorizontalAlignment="Center" VerticalAlignment="Center" IsHitTestVisible="False"/>
													<ComboBox Grid.Row="2" VerticalAlignment="Center"
																Background="{Binding SelectedDayStateVm.Color, Converter={StaticResource colorFixer}}"
															ItemsSource="{Binding RelativeSource={RelativeSource AncestorType=Views:SoheilSplitView}, Path=ViewModel.CurrentContent.WorkDays}"
															SelectedItem="{Binding SelectedDayStateVm}">
														<ComboBox.ItemTemplate>
															<DataTemplate>
																<Grid Background="{Binding Color, Converter={StaticResource colorFixer}}">
																	<TextBlock Text="{Binding Name}"/>
																</Grid>
															</DataTemplate>
														</ComboBox.ItemTemplate>
													</ComboBox>
												</Grid>
												<Border.Triggers>
													<EventTrigger RoutedEvent="MouseEnter">
														<BeginStoryboard>
															<Storyboard Duration="0:0:0.2">
																<DoubleAnimation
			Storyboard.TargetName="isWeekStartButton"
			Storyboard.TargetProperty="Opacity"
			Duration="0:0:0.2"
			To="1"/>
															</Storyboard>
														</BeginStoryboard>
													</EventTrigger>
													<EventTrigger RoutedEvent="MouseLeave">
														<BeginStoryboard>
															<Storyboard Duration="0:0:0.7">
																<DoubleAnimation
			Storyboard.TargetName="isWeekStartButton"
			Storyboard.TargetProperty="Opacity"
			Duration="0:0:0.7"
			To="0"/>
															</Storyboard>
														</BeginStoryboard>
													</EventTrigger>
												</Border.Triggers>
											</Border>
											<DataTemplate.Triggers>
												<DataTrigger Binding="{Binding IsWeekStart}" Value="True">
													<Setter TargetName="isWeekStartImage" Property="Opacity" Value="1"/>
												</DataTrigger>
											</DataTemplate.Triggers>
										</DataTemplate>
									</ItemsControl.ItemTemplate>
									<ItemsControl.ItemsPanel>
										<ItemsPanelTemplate>
											<UniformGrid Rows="1" Columns="7"/>
										</ItemsPanelTemplate>
									</ItemsControl.ItemsPanel>
								</ItemsControl>
							</ScrollViewer>
							<!--Protos count-->
							<TextBlock Style="{StaticResource EntryBoxHeader}" Text="{Loc txtNumberOfShifts}" Grid.Row="5"/>
							<DockPanel Grid.Column="1" Grid.Row="5">
								<Grid DockPanel.Dock="Left" Width="40">
									<Button Margin="2" Content="-" Command="{Binding CurrentContent.AskForDecreaseNumberOfShifts}"/>
									<Button Margin="2" Command="{Binding CurrentContent.DecreaseNumberOfShifts}" Background="ForestGreen"
											Visibility="{Binding CurrentContent.IsPrototypeChangeAskVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
										<Image Style="{StaticResource Save16Image}"/>
									</Button>
								</Grid>
								<Button Margin="2" Content="+" DockPanel.Dock="Right" Width="40" Command="{Binding CurrentContent.IncreaseNumberOfShifts}"/>
								<TextBox Margin="2" IsReadOnly="True" Text="{Binding Path=CurrentContent.NumberOfShiftsModifier, UpdateSourceTrigger=PropertyChanged}"/>
							</DockPanel>
							<!--Protos-->
							<TextBlock Style="{StaticResource EntryBoxHeader}" Text="{Loc txtShiftPrototypeName}" Grid.Row="7"/>
							<TextBlock Style="{StaticResource EntryBoxHeader}" Text="{Loc txtShiftPrototypeColor}" Grid.Row="8"/>
							<ScrollViewer Grid.Row="7" Grid.Column="1" Grid.RowSpan="2"
											HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Disabled">
								<ItemsControl Margin="2" ItemsSource="{Binding CurrentContent.ShiftPrototypes}">
									<ItemsControl.ItemTemplate>
										<DataTemplate>
											<Border BorderBrush="{StaticResource ThemeLightBrush}" 
													BorderThickness="1"
													Background="{Binding Color, Converter={StaticResource colorFixer}}"
													Margin="1">
												<Grid Width="60">
													<Grid.RowDefinitions>
														<RowDefinition Height="*"/>
														<RowDefinition Height="*"/>
													</Grid.RowDefinitions>
													<TextBlock Text="{Binding Name}" HorizontalAlignment="Center"/>
													<ComboBox Grid.Row="2" VerticalAlignment="Center" HorizontalAlignment="Stretch"
																Background="{Binding Color, Converter={StaticResource colorFixer}}"
															ItemsSource="{Binding RelativeSource={RelativeSource AncestorType=Views:SoheilSplitView}, Path=ViewModel.CurrentContent.ShiftColors}"
															SelectedItem="{Binding SelectedColor}">
														<ComboBox.ItemTemplate>
															<DataTemplate>
																<Grid Background="{Binding Color, Converter={StaticResource colorFixer}}" Height="18"/>
															</DataTemplate>
														</ComboBox.ItemTemplate>
													</ComboBox>
												</Grid>
											</Border>
										</DataTemplate>
									</ItemsControl.ItemTemplate>
									<ItemsControl.ItemsPanel>
										<ItemsPanelTemplate>
											<UniformGrid Rows="1" Columns="5"/>
										</ItemsPanelTemplate>
									</ItemsControl.ItemsPanel>
								</ItemsControl>
							</ScrollViewer>
							<!--shifts-->
							<ScrollViewer Grid.Row="10" Grid.ColumnSpan="2" 
											HorizontalScrollBarVisibility="Auto"
											VerticalScrollBarVisibility="Auto">
								<ItemsControl ItemsSource="{Binding CurrentContent.WorkDays}">
									<ItemsControl.ItemTemplate>
										<DataTemplate>
											<DockPanel Height="50">
												<Border BorderBrush="#2FFF" BorderThickness="0.5,0.5,0,0.5" 
														DockPanel.Dock="Left" Width="60"
														Background="{Binding Color, Converter={StaticResource colorFixer}}">
													<TextBlock Text="{Binding Name}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
												</Border>
												<Border BorderBrush="#2FFF" BorderThickness="0.5" Background="Transparent">
													<!-- 1 min = 1 px (snap to 5 min or 5 px) so 1800 means 30 hours-->
													<Grid Width="1800">
														<!--ShiftLine-->
														<!--       ..       .       ..      .      .. -->
                                                        <Canvas>
                                                            <Rectangle StrokeDashArray=".2 14.8 .1 14.8 .2 14.8 .1 14.8 .2" Stroke="#8FFF" Width="1800" Height="10" StrokeThickness="4" Margin="0,19"/>
                                                        </Canvas>
														<!--ShiftLine-->
														<Thumb Tag="{Binding ElementName=timetip}" x:Name="shiftLine" MouseMove="workShiftLineMouseMove" DragStarted="shiftLineDragStart" DragDelta="shiftLineDragDelta" DragCompleted="shiftLineDragEnd">
															<Thumb.Template>
																<ControlTemplate>
																	<Border VerticalAlignment="Center" HorizontalAlignment="Stretch" Background="#2FFF" BorderBrush="#8FFF" BorderThickness="0,1" Height="4"/>
																</ControlTemplate>
															</Thumb.Template>
														</Thumb>
														<!--Shift ItemsControl-->
														<ItemsControl ItemsSource="{Binding Shifts}">
															<ItemsControl.Resources>
																<Style TargetType="Canvas">
																	<Setter Property="HorizontalAlignment" Value="Left"/>
																	<Setter Property="VerticalAlignment" Value="Top"/>
																	<Setter Property="Width" Value="0"/>
																	<Setter Property="Height" Value="0"/>
																</Style>
															</ItemsControl.Resources>
															<ItemsControl.ItemTemplate>
																<DataTemplate>
																	<Canvas>
																		<!--whole shift-->
																		<!--<Canvas>
																			<Border BorderThickness="2" CornerRadius="3" BorderBrush="#2FFF" Height="40"
																					IsHitTestVisible="False" Background="{Binding Prototype.Color, Converter={StaticResource colorFixer}}"
																					Margin="{Binding StartSeconds, Converter={StaticResource ShiftStartSecondsToMargin}}">
																				<Border.Width>
																					<MultiBinding Converter="{StaticResource ShiftDurationToWidth}">
																						<Binding Path="StartSeconds"/>
																						<Binding Path="EndSeconds"/>
																					</MultiBinding>
																				</Border.Width>
																			</Border>
																		</Canvas>-->
																		<!-- Start of shift -->
																		<Canvas>
																			<Thumb DragStarted="shiftStartDragStart" DragDelta="shiftStartDragDelta" DragCompleted="shiftStartDragEnd"
																				   Margin="{Binding StartSeconds, Converter={StaticResource ShiftStartSecondsToMargin}}"
																				   Tag="{Binding ElementName=shiftLine}">
																				<Thumb.ToolTip>
																					<StackPanel>
																						<WrapPanel>
																							<TextBlock Text="شروع شیفت "/>
																							<TextBlock Text="{Binding Prototype.Name}"/>
																						</WrapPanel>
																						<TextBlock Text="{Binding StartSeconds, Converter={StaticResource WorkShiftSecondsToString}}" FlowDirection="LeftToRight"/>
																					</StackPanel>
																				</Thumb.ToolTip>
																				<Thumb.Template>
																					<ControlTemplate>
																						<Border BorderThickness="2,2,0,2" CornerRadius="3,0,0,3" BorderBrush="White" Width="20" Height="40">
																							<Border.Background>
                                                                                                <SolidColorBrush Color="{Binding Prototype.Color, Converter={StaticResource ColorToRgbBrush}}" Opacity="1" x:Name="brdr"/>
																							</Border.Background>
																							<TextBlock Text="{Binding Prototype.Name}" 
																										HorizontalAlignment="Center" VerticalAlignment="Center"
																										IsHitTestVisible="False" Foreground="White">
																								<TextBlock.Effect>
																									<DropShadowEffect ShadowDepth="0" BlurRadius="3"/>
																								</TextBlock.Effect>
																							</TextBlock>
																							<Border.Triggers>
																								<EventTrigger RoutedEvent="MouseEnter">
																									<BeginStoryboard>
																										<Storyboard Duration="0:0:0.1">
                                                                                                            <DoubleAnimation Storyboard.TargetName="brdr" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.1"/>
																										</Storyboard>
																									</BeginStoryboard>
																								</EventTrigger>
																								<EventTrigger RoutedEvent="MouseLeave">
																									<BeginStoryboard>
																										<Storyboard Duration="0:0:0.2">
                                                                                                            <DoubleAnimation Storyboard.TargetName="brdr" Storyboard.TargetProperty="Opacity" To="0.1" Duration="0:0:0.2"/>
																										</Storyboard>
																									</BeginStoryboard>
																								</EventTrigger>
																							</Border.Triggers>
																						</Border>
																					</ControlTemplate>
																				</Thumb.Template>
																			</Thumb>
																			<!-- must be after the correspondant thumb-->
																			<Border BorderBrush="#2FFF" Background="#7000" BorderThickness="1" Visibility="Collapsed"
																					IsHitTestVisible="False"
																					Margin="{Binding StartSeconds, Converter={StaticResource ShiftStartSecondsToMargin}, ConverterParameter=Below}">
																				<TextBlock Text="{Binding StartSeconds, Converter={StaticResource WorkShiftSecondsToString}}" 
																						   FlowDirection="LeftToRight"/>
																			</Border>
																		</Canvas>
																		<!-- End of shift -->
																		<Canvas>
																			<Thumb DragStarted="shiftEndDragStart" DragDelta="shiftEndDragDelta" DragCompleted="shiftEndDragEnd"
																					Margin="{Binding EndSeconds, Converter={StaticResource ShiftEndSecondsToMargin}}"
																				   Tag="{Binding ElementName=shiftLine}">
																				<Thumb.ToolTip>
																					<StackPanel>
																						<WrapPanel>
																							<TextBlock Text="پایان شیفت "/>
																							<TextBlock Text="{Binding Prototype.Name}"/>
																						</WrapPanel>
																						<TextBlock Text="{Binding EndSeconds, Converter={StaticResource WorkShiftSecondsToString}}" FlowDirection="LeftToRight"/>
																					</StackPanel>
																				</Thumb.ToolTip>
																				<Thumb.Template>
																					<ControlTemplate>
																						<Border BorderThickness="0,2,2,2" CornerRadius="0,3,3,0" BorderBrush="White" Width="20" Height="40">
																							<Border.Background>
																								<SolidColorBrush Color="{Binding Prototype.Color, Converter={StaticResource ColorToRgbBrush}}" Opacity="0"/>
																							</Border.Background>
																							<TextBlock Text="{Binding Prototype.Name}" 
																										HorizontalAlignment="Center" VerticalAlignment="Center"
																										IsHitTestVisible="False" Foreground="Gray">
																								<TextBlock.Effect>
																									<DropShadowEffect ShadowDepth="0" BlurRadius="3"/>
																								</TextBlock.Effect>
																							</TextBlock>
																							<!--<Border.Triggers>
																								<EventTrigger RoutedEvent="MouseEnter">
																									<BeginStoryboard>
																										<Storyboard Duration="0:0:0.1">
																											<DoubleAnimation To="1" Storyboard.TargetProperty="Background.Opacity" Duration="0:0:0.1"/>
																										</Storyboard>
																									</BeginStoryboard>
																								</EventTrigger>
																								<EventTrigger RoutedEvent="MouseLeave">
																									<BeginStoryboard>
																										<Storyboard Duration="0:0:0.2">
																											<DoubleAnimation To="0" Storyboard.TargetProperty="Background.Opacity" Duration="0:0:0.2"/>
																										</Storyboard>
																									</BeginStoryboard>
																								</EventTrigger>
																							</Border.Triggers>-->
																						</Border>
																					</ControlTemplate>
																				</Thumb.Template>
																			</Thumb>
																			<!-- must be after the correspondant thumb-->
																			<Border BorderBrush="#2FFF" Background="#7000" BorderThickness="1" Visibility="Collapsed"
																					IsHitTestVisible="False"
																					Margin="{Binding EndSeconds, Converter={StaticResource ShiftEndSecondsToMargin}, ConverterParameter=Below}">
																				<TextBlock Text="{Binding EndSeconds, Converter={StaticResource WorkShiftSecondsToString}}" 
																						   FlowDirection="LeftToRight"/>
																			</Border>
																		</Canvas>
																		<!-- WorkBreaks -->
																		<Canvas>
																			<ItemsControl ItemsSource="{Binding Breaks}">
																				<ItemsControl.ItemTemplate>
																					<DataTemplate>
																						<Canvas>
																							<!-- Start of break -->
																							<Canvas>
																								<Thumb DragStarted="shiftStartDragStart" DragDelta="breakStartDragDelta" DragCompleted="shiftStartDragEnd"
																									Margin="{Binding StartSeconds, Converter={StaticResource ShiftStartSecondsToMargin}}"
																									   Tag="{Binding ElementName=shiftLine}">
																									<Thumb.ToolTip>
																										<StackPanel>
																											<TextBlock Text="شروع زمان استراحت"/>
																											<TextBlock Text="{Binding StartSeconds, Converter={StaticResource WorkShiftSecondsToString}}" FlowDirection="LeftToRight"/>
																										</StackPanel>
																									</Thumb.ToolTip>
																									<Thumb.ContextMenu>
																										<ContextMenu>
																											<MenuItem Header="{Loc txtDelete}" Command="{Binding DeleteCommand}"/>
																										</ContextMenu>
																									</Thumb.ContextMenu>
																									<Thumb.Template>
																										<ControlTemplate>
																											<Border Background="#AC22" CornerRadius="3,0,0,3" Height="17" Margin="0,10,0,0" MinWidth="5">
																												<Border.Width>
																													<MultiBinding Converter="{StaticResource ShiftBreakDurationToWidth}">
																														<Binding Path="StartSeconds"/>
																														<Binding Path="EndSeconds"/>
																													</MultiBinding>
																												</Border.Width>
																											</Border>
																										</ControlTemplate>
																									</Thumb.Template>
																								</Thumb>
																								<!-- must be after the correspondant thumb-->
																								<Border BorderBrush="#2FFF" Background="#7000" BorderThickness="1" Visibility="Collapsed"
																									IsHitTestVisible="False"
																										Margin="{Binding StartSeconds, Converter={StaticResource ShiftStartSecondsToMargin}, ConverterParameter=Below}">
																									<TextBlock Text="{Binding StartSeconds, Converter={StaticResource WorkShiftSecondsToString}}" 
																										FlowDirection="LeftToRight"/>
																								</Border>
																							</Canvas>
																							<!-- End of break -->
																							<Canvas>
																								<Thumb DragStarted="shiftEndDragStart" DragDelta="breakEndDragDelta" DragCompleted="shiftEndDragEnd"
																									   Tag="{Binding ElementName=shiftLine}">
																									<Thumb.Margin>
																										<MultiBinding Converter="{StaticResource ShiftBreakDurationToEndMargin}">
																											<Binding Path="StartSeconds"/>
																											<Binding Path="EndSeconds"/>
																										</MultiBinding>
																									</Thumb.Margin>
																									<Thumb.ContextMenu>
																										<ContextMenu>
																											<MenuItem Header="{Loc txtDelete}" Command="{Binding DeleteCommand}"/>
																										</ContextMenu>
																									</Thumb.ContextMenu>
																									<Thumb.ToolTip>
																										<StackPanel>
																											<TextBlock Text="پایان زمان استراحت"/>
																											<TextBlock Text="{Binding EndSeconds, Converter={StaticResource WorkShiftSecondsToString}}" FlowDirection="LeftToRight"/>
																										</StackPanel>																									
																									</Thumb.ToolTip>
																									<Thumb.Template>
																										<ControlTemplate>
																											<Border Background="#AC22" CornerRadius="0,3,3,0" Height="17" MinWidth="5">
																												<Border.Width>
																													<MultiBinding Converter="{StaticResource ShiftBreakDurationToWidth}">
																														<Binding Path="StartSeconds"/>
																														<Binding Path="EndSeconds"/>
																													</MultiBinding>
																												</Border.Width>
																											</Border>
																										</ControlTemplate>
																									</Thumb.Template>
																								</Thumb>
																								<!-- must be after the correspondant thumb-->
																								<Border BorderBrush="#2FFF" Background="#7000" BorderThickness="1" Visibility="Collapsed"
																									IsHitTestVisible="False"
																									Margin="{Binding EndSeconds, Converter={StaticResource ShiftEndSecondsToMargin}, ConverterParameter=Below}">
																									<TextBlock Text="{Binding EndSeconds, Converter={StaticResource WorkShiftSecondsToString}}" 
																									  FlowDirection="LeftToRight"/>
																								</Border>
																							</Canvas>
																						</Canvas>
																					</DataTemplate>
																				</ItemsControl.ItemTemplate>
																				<ItemsControl.ItemsPanel>
																					<ItemsPanelTemplate>
																						<Canvas/>
																					</ItemsPanelTemplate>
																				</ItemsControl.ItemsPanel>
																			</ItemsControl>
																		</Canvas>
																	</Canvas>
																</DataTemplate>
															</ItemsControl.ItemTemplate>
															<ItemsControl.ItemsPanel>
																<ItemsPanelTemplate>
																	<Canvas/>
																</ItemsPanelTemplate>
															</ItemsControl.ItemsPanel>
														</ItemsControl>
														<!--Timetip-->
														<!-- To use this set margin and its tag (to desired text) and opacity to 1-->
														<Canvas x:Name="timetip" ClipToBounds="False" IsHitTestVisible="False" Opacity="0">
															<Border BorderBrush="#2FFF" Background="#7000" BorderThickness="1">
																<TextBlock Text="{Binding ElementName=timetip, Path=Tag}" FlowDirection="LeftToRight"/>
															</Border>
															<Canvas.Resources>
																<Storyboard Duration="0:0:2" x:Key="fadeout">
																	<DoubleAnimation Storyboard.TargetName="timetip"
																					 Storyboard.TargetProperty="Opacity"
																					 Duration="0:0:0.2" To="1"/>
																	<DoubleAnimation Storyboard.TargetName="timetip"
																					 Storyboard.TargetProperty="Opacity"
																					 BeginTime="0:0:1"
																					 Duration="0:0:1" To="0"/>
																</Storyboard>
															</Canvas.Resources>
														</Canvas>
													</Grid>
												</Border>
											</DockPanel>
										</DataTemplate>
									</ItemsControl.ItemTemplate>
								</ItemsControl>
							</ScrollViewer>
						</Grid>
					</Border>
				</DockPanel>
			</GroupBox>
		</DataTemplate>


        <!--................................................ 2.Definitions ...........................................-->

        <!-- 2.1. Products -->
        <DataTemplate x:Key="ProductsSubContentPanel">
            <WrapPanel Height="22" Margin="2">
                <CustomControls:ImageRadioButton Click="ListUpdated"
                             IsChecked="True"
                            Content="{Loc txtProducts}"
                            ImageSource="/Soheil.Controls;component/Images/Menus/Product.png"
                            Tag="211" />
                <CustomControls:ImageRadioButton Click="ListUpdated"
                            Content="{Loc txtReworks}"
                            ImageSource="/Soheil.Controls;component/Images/Menus/Rework.png"
                            Tag="212" />
            </WrapPanel>
        </DataTemplate>

        <!-- 2.1.1. Product  -->
        <DataTemplate x:Key="ProductTemplate" DataType="ViewModels:ProductVM">
            <GroupBox DataContext="{Binding RelativeSource={RelativeSource AncestorType=Views:SoheilSplitView}, Path=ViewModel}" 
                      Style="{StaticResource SoheilContentGroupBox}" Header="{Binding CurrentContent.Name}">
                <I:Interaction.Behaviors>
                    <Behavior:ValidationExceptionBehavior />
                </I:Interaction.Behaviors>
                <DockPanel FlowDirection="{Loc enumDirection}">
                    <Border DockPanel.Dock="Top" Style="{StaticResource SoheilContentUpperBarBorder}">
                        <WrapPanel Margin="10"
                                   HorizontalAlignment="Right"
                                   DockPanel.Dock="Bottom">
                            <Button Command="{Binding CurrentContent.ViewItemLinkCommand}"
                                    CommandParameter="0"
                                    Content="{Loc txtDefections}">
                            </Button>
                            <Button Command="{Binding CurrentContent.ViewItemLinkCommand}"
                                    CommandParameter="1"
                                    Content="{Loc txtReworks}">
                            </Button>
                        </WrapPanel>
                    </Border>
                    <DockPanel DockPanel.Dock="Top">
                        <ContentControl DockPanel.Dock="Top" Template="{StaticResource CodeNameInfoContent}" />
                        <ContentControl DockPanel.Dock="Top" Template="{StaticResource GroupStatusInfoContent}" />
                        <Border DockPanel.Dock="Top" Style="{StaticResource SoheilContentUpperBorder}">
                            <UniformGrid Margin="5"
                             Columns="2"
                             Rows="1">
                                <TextBlock Style="{StaticResource EntryBoxHeader}" Text="{Loc txtColor}" />
                                <DockPanel>
                                    <ColorPicker:ColorPicker SelectedColor="{Binding Path=CurrentContent.Color, Mode=TwoWay}" x:Name="_palette"
                                      Padding="5" BorderBrush="{StaticResource ThemeDarkBrush}"
                                      BorderThickness="1" Background="Transparent" />
                                    <Border BorderBrush="White" BorderThickness="1" CornerRadius="2" DockPanel.Dock="Right"
                                            Width="30" Height="80"
                                            Background="{Binding CurrentContent.Color, Converter={StaticResource ColorConverter}}"/>
                                </DockPanel>
                            </UniformGrid>
                        </Border>
                        <ContentControl DockPanel.Dock="Bottom" Template="{StaticResource UserDateInfoContent}" />
                    </DockPanel>
                    <ContentControl DockPanel.Dock="Bottom" Template="{StaticResource OperationPanel}" />
                    <Canvas DockPanel.Dock="Bottom" />
                </DockPanel>
            </GroupBox>
        </DataTemplate>
        <DataTemplate x:Key="ProductDefectionsTemplate" DataType="ContentControl">
            <DockPanel DataContext="{Binding RelativeSource={RelativeSource AncestorType=Views:SoheilSplitView},  Path=ViewModel}"
                       Visibility="{Binding CurrentContent.MainContentVisibility, Converter={StaticResource ReverseVisibilityConverter}}">
                <GroupBox DockPanel.Dock="Right" Style="{StaticResource SoheilDetailViewBorder}" Header="{Loc txtDefections}">
                    <DockPanel>
                        <ContentControl DockPanel.Dock="Top" Template="{StaticResource ReturnPanel}"/>
                        <ItemsControl Template="{StaticResource ExcludeList}"/>
                    </DockPanel>
                </GroupBox>
                <GroupBox Style="{StaticResource SoheilDetailListViewBorder}" Header="{Loc txtProducts}">
                    <ItemsControl Template="{StaticResource IncludeList}"/>
                </GroupBox>
                <Canvas />
            </DockPanel>
        </DataTemplate>
        <DataTemplate x:Key="ProductReworksTemplate" DataType="ViewModels:ProductReworksVM">
            <DockPanel DataContext="{Binding RelativeSource={RelativeSource AncestorType=Views:SoheilSplitView}, Path=ViewModel}"
                        Visibility="{Binding CurrentContent.MainContentVisibility, Converter={StaticResource ReverseVisibilityConverter}}">
                <GroupBox DockPanel.Dock="Right" Style="{StaticResource SoheilDetailViewBorder}" Header="{Loc txtReworks}">
                    <DockPanel>
                        <ContentControl DockPanel.Dock="Top" Template="{StaticResource ReturnPanel}"/>
                        <ItemsControl DockPanel.Dock="Top" Template="{StaticResource ExcludeList}" />
                        <Border DockPanel.Dock="Bottom">
                            <UniformGrid Margin="5"
                                         Columns="2"
                                         FlowDirection="{Loc enumDirection}"
                                         Rows="4">
                                <TextBlock Style="{StaticResource EntryBoxHeader}" Text="{Loc txtCode}" />
                                <TextBox Margin="2" Text="{Binding CurrentContent.CurrentLink.Details.Code}"/>
                                <TextBlock Style="{StaticResource EntryBoxHeader}" Text="{Loc txtName}" />
                                <TextBox Margin="2" Text="{Binding CurrentContent.CurrentLink.Details.Name}"/>
                                <Canvas />
                                <Canvas />
                                <Button Content="{Loc txtEdit}">
                                    <Button.Command>
                                        <Binding>
                                            <Binding.Path>CurrentContent.CurrentLink.Details.SaveCommand</Binding.Path>
                                        </Binding>
                                    </Button.Command>
                                </Button>
                            </UniformGrid>
                        </Border>
                        <Canvas DockPanel.Dock="Bottom" />
                    </DockPanel>
                </GroupBox>
                <GroupBox Style="{StaticResource SoheilDetailListViewBorder}" Header="{Loc txtProducts}">
                    <ItemsControl Template="{StaticResource IncludeList}" />
                </GroupBox>
                <Canvas />
            </DockPanel>
        </DataTemplate>
        <DataTemplate x:Key="ProductGroupTemplate" DataType="ViewModels:ProductGroupVM">
            <GroupBox DataContext="{Binding RelativeSource={RelativeSource AncestorType=Views:SoheilSplitView}, Path=ViewModel}" 
                      Style="{StaticResource SoheilContentGroupBox}" Header="{Binding CurrentContent.Name}">
                <I:Interaction.Behaviors>
                    <Behavior:ValidationExceptionBehavior />
                </I:Interaction.Behaviors>
                <DockPanel FlowDirection="{Loc enumDirection}">
                    <Border DockPanel.Dock="Top" Style="{StaticResource SoheilContentUpperBarBorder}" />
                    <DockPanel DockPanel.Dock="Top">
                        <ContentControl DockPanel.Dock="Top" Template="{StaticResource CodeNameInfoContent}" />
                        <ContentControl DockPanel.Dock="Top" Template="{StaticResource StatusInfoContent}" />
                        <ContentControl DockPanel.Dock="Bottom" Template="{StaticResource UserDateInfoContent}" />
                    </DockPanel>
                    <ContentControl DockPanel.Dock="Bottom" Template="{StaticResource OperationPanel}" />
                    <Canvas DockPanel.Dock="Bottom" />
                </DockPanel>
            </GroupBox>
        </DataTemplate>

        <!-- 2.1.2. Rework -->
        <DataTemplate x:Key="ReworkTemplate" DataType="ViewModels:ReworkVM">
            <GroupBox DataContext="{Binding RelativeSource={RelativeSource AncestorType=Views:SoheilSplitView}, Path=ViewModel}" 
                      Style="{StaticResource SoheilContentGroupBox}" Header="{Binding CurrentContent.Name}">
                <I:Interaction.Behaviors>
                    <Behavior:ValidationExceptionBehavior />
                </I:Interaction.Behaviors>
                <DockPanel FlowDirection="{Loc enumDirection}">
                    <Border DockPanel.Dock="Top" Style="{StaticResource SoheilContentUpperBarBorder}">
                        <WrapPanel Margin="10"
                                   HorizontalAlignment="Right"
                                   DockPanel.Dock="Bottom">
                            <Button Command="{Binding CurrentContent.ViewItemLinkCommand}"
                                    CommandParameter="0"
                                    Content="{Loc txtProducts}">
                            </Button>
                        </WrapPanel>
                    </Border>
                    <DockPanel DockPanel.Dock="Top">
                        <ContentControl DockPanel.Dock="Top" Template="{StaticResource CodeNameInfoContent}" />
                        <ContentControl DockPanel.Dock="Top" Template="{StaticResource GroupStatusInfoContent}" />
                        <ContentControl DockPanel.Dock="Bottom" Template="{StaticResource UserDateInfoContent}" />
                    </DockPanel>
                    <ContentControl DockPanel.Dock="Bottom" Template="{StaticResource OperationPanel}" />
                    <Canvas DockPanel.Dock="Bottom" />
                </DockPanel>
            </GroupBox>
        </DataTemplate>
        <DataTemplate x:Key="ReworkProductsTemplate" DataType="ViewModels:ReworkProductsVM">
            <DockPanel DataContext="{Binding RelativeSource={RelativeSource AncestorType=Views:SoheilSplitView}, Path=ViewModel}"
                        Visibility="{Binding CurrentContent.MainContentVisibility, Converter={StaticResource ReverseVisibilityConverter}}">
                <GroupBox DockPanel.Dock="Right" Style="{StaticResource SoheilDetailViewBorder}" Header="{Loc txtProducts}">
                    <DockPanel>
                        <ContentControl DockPanel.Dock="Top" Template="{StaticResource ReturnPanel}"/>
                        <ItemsControl DockPanel.Dock="Top" Template="{StaticResource ExcludeList}" />
                        <Border DockPanel.Dock="Bottom">
                            <UniformGrid Margin="5"
                                         Columns="2"
                                         FlowDirection="{Loc enumDirection}"
                                         Rows="4">
                                <TextBlock Style="{StaticResource EntryBoxHeader}" Text="{Loc txtCode}" />
                                <TextBox Margin="2" Text="{Binding CurrentContent.CurrentLink.Details.Code}"/>
                                <TextBlock Style="{StaticResource EntryBoxHeader}" Text="{Loc txtName}" />
                                <TextBox Margin="2" Text="{Binding CurrentContent.CurrentLink.Details.Name}"/>
                                <Canvas />
                                <Canvas />
                                <Button Content="{Loc txtEdit}">
                                    <Button.Command>
                                        <Binding>
                                            <Binding.Path>CurrentContent.CurrentLink.Details.SaveCommand</Binding.Path>
                                        </Binding>
                                    </Button.Command>
                                </Button>
                            </UniformGrid>
                        </Border>
                        <Canvas DockPanel.Dock="Bottom" />
                    </DockPanel>
                </GroupBox>
                <GroupBox Style="{StaticResource SoheilDetailListViewBorder}" Header="{Loc txtReworks}">
                    <ItemsControl Template="{StaticResource IncludeList}" />
                </GroupBox>
                <Canvas />
            </DockPanel>
        </DataTemplate>

        <!-- 2.2. Diagnosis -->
        <DataTemplate x:Key="DefectionsSubContentPanel">
            <WrapPanel Height="22" Margin="2">
                <CustomControls:ImageRadioButton Click="ListUpdated"
                             IsChecked="True"
                            Content="{Loc txtDefections}"
                            ImageSource="/Soheil.Controls;component/Images/Menus/Diagnosis.png"
                            Tag="221" />
                <CustomControls:ImageRadioButton Click="ListUpdated"
                            Content="{Loc txtRoots}"
                            ImageSource="/Soheil.Controls;component/Images/Menus/Roots.png"
                            Tag="222" />
                <CustomControls:ImageRadioButton Click="ListUpdated"
                            Content="{Loc txtActionPlans}"
                            ImageSource="/Soheil.Controls;component/Images/Menus/Actionplan.png"
                            Tag="223" />
                <CustomControls:ImageRadioButton Click="ListUpdated"
                            Content="{Loc txtCauses}"
                            ImageSource="/Soheil.Controls;component/Images/Menus/Cause.png"
                            Tag="224" />
            </WrapPanel>
        </DataTemplate>

        <!-- 2.2.1. Defection  -->
        <DataTemplate x:Key="DefectionTemplate" DataType="ViewModels:DefectionVM">
            <GroupBox DataContext="{Binding RelativeSource={RelativeSource AncestorType=Views:SoheilSplitView}, Path=ViewModel}" 
                      Style="{StaticResource SoheilContentGroupBox}" Header="{Binding CurrentContent.Name}">
                <I:Interaction.Behaviors>
                    <Behavior:ValidationExceptionBehavior />
                </I:Interaction.Behaviors>
                <DockPanel FlowDirection="{Loc enumDirection}">
                    <Border DockPanel.Dock="Top" Style="{StaticResource SoheilContentUpperBarBorder}">
                        <WrapPanel Margin="10"
                                   HorizontalAlignment="Right"
                                   DockPanel.Dock="Bottom">
                            <Button Command="{Binding CurrentContent.ViewItemLinkCommand}"
                                    CommandParameter="0"
                                    Content="{Loc txtProducts}">
                            </Button>
                        </WrapPanel>
                    </Border>
                    <DockPanel DockPanel.Dock="Top">
                        <ContentControl DockPanel.Dock="Top" Template="{StaticResource CodeNameInfoContent}" />
                        <ContentControl DockPanel.Dock="Top" Template="{StaticResource GroupStatusInfoContent}" />
                        <ContentControl DockPanel.Dock="Bottom" Template="{StaticResource UserDateInfoContent}" />
                    </DockPanel>
                    <ContentControl DockPanel.Dock="Bottom" Template="{StaticResource OperationPanel}" />
                    <Canvas DockPanel.Dock="Bottom" />
                </DockPanel>
            </GroupBox>
        </DataTemplate>
        <DataTemplate x:Key="DefectionProductsTemplate" DataType="ViewModels:DefectionProductsVM">
            <DockPanel DataContext="{Binding RelativeSource={RelativeSource AncestorType=Views:SoheilSplitView}, Path=ViewModel}"
                        Visibility="{Binding CurrentContent.MainContentVisibility, Converter={StaticResource ReverseVisibilityConverter}}">
                <GroupBox DockPanel.Dock="Right" Style="{StaticResource SoheilDetailViewBorder}" Header="{Loc txtProducts}">
                    <DockPanel>
                        <ContentControl DockPanel.Dock="Top" Template="{StaticResource ReturnPanel}"/>
                        <ItemsControl Template="{StaticResource ExcludeList}" />
                    </DockPanel>
                </GroupBox>
                <GroupBox Style="{StaticResource SoheilDetailListViewBorder}" Header="{Loc txtDefections}">
                    <ItemsControl Template="{StaticResource IncludeList}" />
                </GroupBox>
                <Canvas />
            </DockPanel>
        </DataTemplate>

        <!-- 2.2.2. Roots and Fishbones -->
        <DataTemplate x:Key="RootTemplate" DataType="ViewModels:RootVM">
            <DockPanel DataContext="{Binding RelativeSource={RelativeSource AncestorType=Views:SoheilSplitView}, Path=ViewModel}">
                <GroupBox DockPanel.Dock="Right" Style="{StaticResource SoheilContentSplitGroupBox}" Header="{Binding CurrentContent.Name}">
                    <I:Interaction.Behaviors>
                        <Behavior:ValidationExceptionBehavior />
                    </I:Interaction.Behaviors>
                    <DockPanel>
                        <DockPanel DockPanel.Dock="Top">
                            <Border DockPanel.Dock="Top" Style="{StaticResource SoheilContentBorder}">
                                <UniformGrid Margin="5"
                                             Columns="2"
                                             Rows="2">
                                    <TextBlock Style="{StaticResource EntryBoxHeader}" Text="{Loc txtName}" />
                                    <TextBox Margin="2">
                                        <TextBox.Text>
                                            <Binding ValidatesOnDataErrors="True" UpdateSourceTrigger="PropertyChanged">
                                                <Binding.Path>CurrentContent.Name</Binding.Path>
                                            </Binding>
                                        </TextBox.Text>
                                    </TextBox>
                                    <TextBlock Style="{StaticResource EntryBoxHeader}" Text="{Loc txtStatus}" />
                                    <ComboBox Margin="2" ItemsSource="{Binding Source={StaticResource AlignmentValues}}">
                                        <ComboBox.SelectedValue>
                                            <Binding>
                                                <Binding.Path>CurrentContent.Status</Binding.Path>
                                            </Binding>
                                        </ComboBox.SelectedValue>
                                    </ComboBox>
                                </UniformGrid>
                            </Border>
                            <Border DockPanel.Dock="Bottom" Style="{StaticResource SoheilContentBorder}">
                                <DockPanel>
                                    <Border DockPanel.Dock="Top" Style="{StaticResource SoheilContentUpperBarBorder}">
                                        <WrapPanel Margin="10"
                                           HorizontalAlignment="Right"
                                           DockPanel.Dock="Bottom">
                                                    <Button Command="{Binding CurrentContent.ViewItemLinkCommand}"
                                            CommandParameter="1"
                                            Content="{Loc txtActionPlans}">
                                                    </Button>
                                        </WrapPanel>
                                    </Border>
                                    <TreeView Name="tree" DockPanel.Dock="Bottom" Height="400">
                                        <TreeView.ItemsSource>
                                            <Binding>
                                                <Binding.Path>CurrentContent.FishbonesVM.RootNode.ChildNodes</Binding.Path>
                                            </Binding>
                                        </TreeView.ItemsSource>
                                        <TreeView.ItemContainerStyle>
                                            <Style TargetType="TreeViewItem">
                                                <Style.Resources>
                                                    <LinearGradientBrush x:Key="ItemAreaBrush" StartPoint="0.5, 0" EndPoint="0.5, 1">
                                                        <GradientStop Offset="0" Color="{StaticResource DisabledSelectionColor}" />
                                                        <GradientStop Offset="1" Color="{StaticResource DisabledSelectionColor}" />
                                                    </LinearGradientBrush>
                                                    <LinearGradientBrush x:Key="SelectedItemAreaBrush" StartPoint="0.5, 0" EndPoint="0.5, 1">
                                                        <GradientStop Offset="0" Color="{StaticResource HoverSelectionColor}" />
                                                        <GradientStop Offset="1" Color="{StaticResource PressedSelectionColor}" />
                                                    </LinearGradientBrush>
                                                    <LinearGradientBrush x:Key="ItemBorderBrush" StartPoint="0.5, 0" EndPoint="0.5, 1">
                                                        <GradientStop Offset="0" Color="LightGray" />
                                                        <GradientStop Offset="1" Color="Gray" />
                                                    </LinearGradientBrush>
                                                    <LinearGradientBrush x:Key="SelectedItemBorderBrush" StartPoint="0.5, 0" EndPoint="0.5, 1">
                                                        <GradientStop Offset="0" Color="Honeydew" />
                                                        <GradientStop Offset="1" Color="Black" />
                                                    </LinearGradientBrush>
                                                    <DropShadowBitmapEffect x:Key="DropShadowEffect" />
                                                    <Converters:FishboneHorizontalUpVisibilityConverter x:Key="HorizontalUpVisibilityConverter"/>
                                                    <Converters:FishboneHorizontalDownVisibilityConverter x:Key="HorizontalDownVisibilityConverter"/>
                                                    <Converters:FishboneUpGapVisibilityConverter x:Key="UpGapVisibilityConverter"/>
                                                    <Converters:FishboneDownGapVisibilityConverter x:Key="DownGapVisibilityConverter"/>
                                                    <Converters:FishboneVerticalVisibilityConverter x:Key="VerticalVisibilityConverter"/>
                                                </Style.Resources>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="TreeViewItem">
                                                            <Grid>
                                                                <Grid Margin="2"
                                                                      Visibility="Visible">
                                                                    <Grid.ColumnDefinitions>
                                                                        <ColumnDefinition Width="Auto" />
                                                                        <ColumnDefinition Width="*" />
                                                                    </Grid.ColumnDefinitions>
                                                                    <Border Name="MainBd" Grid.Column="1"
                                                                            Visibility="{Binding Converter={StaticResource VerticalVisibilityConverter}}"
                                                                        Background="{StaticResource ItemAreaBrush}"
                                                                        BorderBrush="{StaticResource ItemBorderBrush}"
                                                                        BorderThickness="0.6"
                                                                        CornerRadius="8"
                                                                        Padding="6"
                                                                        TextElement.Foreground="{StaticResource TextBrush}">
                                                                        <ContentPresenter Name="PART_HeaderMain"
                                                                                          HorizontalAlignment="Center"
                                                                                          VerticalAlignment="Center"
                                                                                          ContentSource="Header"/>
                                                                    </Border>
                                                                    <Grid>
                                                                        <Grid.RowDefinitions>
                                                                            <RowDefinition Height="Auto" />
                                                                            <RowDefinition Height="Auto" />
                                                                            <RowDefinition Height="*" />
                                                                            <RowDefinition Height="Auto" />
                                                                            <RowDefinition Height="Auto" />
                                                                        </Grid.RowDefinitions>
                                                                        <Canvas Grid.Row="0" 
                                                                                Height="153"
                                                                                Visibility="{Binding Converter={StaticResource DownGapVisibilityConverter}}"/>
                                                                        <Border Name="UpBd" Grid.Row="1"
                                                                            Visibility="{Binding Converter={StaticResource HorizontalUpVisibilityConverter}}"
                                                                        Background="{StaticResource ItemAreaBrush}"
                                                                        BorderBrush="{StaticResource ItemBorderBrush}"
                                                                        BorderThickness="0.6"
                                                                        CornerRadius="8"
                                                                        Padding="6"
                                                                        TextElement.Foreground="{StaticResource TextBrush}">
                                                                            <DockPanel>
                                                                                <ContentPresenter Name="PART_HeaderUp"
                                                                                          HorizontalAlignment="Center"
                                                                                          VerticalAlignment="Center"
                                                                                          ContentSource="Header"
                                                                                          DockPanel.Dock="Left" />
                                                                                <ToggleButton DockPanel.Dock="Right" Style="{StaticResource ConfirmCancelButton}" Content="X" Width="20">
                                                                                    <I:Interaction.Triggers>
                                                                                        <I:EventTrigger EventName="Indeterminate">
                                                                                            <I:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType=Views:SoheilSplitView}, 
                                                                                        Path=ViewModel.CurrentContent.PositionsVM.ExcludeTreeCommand}"
                                                                                    CommandParameter="{Binding}" />
                                                                                        </I:EventTrigger>
                                                                                    </I:Interaction.Triggers>
                                                                                </ToggleButton>
                                                                                <Button Content="+" Width="20" DockPanel.Dock="Right">
                                                                                    <Button.Command>
                                                                                        <Binding RelativeSource="{RelativeSource AncestorType=Views:SoheilSplitView}">
                                                                                            <Binding.Path>ViewModel.CurrentContent.FishbonesVM.IncludeCommand</Binding.Path>
                                                                                        </Binding>
                                                                                    </Button.Command>
                                                                                    <Button.CommandParameter>
                                                                                        <Binding>
                                                                                            <Binding.Path>Id</Binding.Path>
                                                                                        </Binding>
                                                                                    </Button.CommandParameter>
                                                                                </Button>
                                                                                <Canvas />
                                                                            </DockPanel>
                                                                        </Border>
                                                                        <ItemsPresenter Grid.Row="2"/>
                                                                        <Border Name="DownBd" Grid.Row="3"
                                                                            Visibility="{Binding Converter={StaticResource HorizontalDownVisibilityConverter}}"
                                                                        Background="{StaticResource ItemAreaBrush}"
                                                                        BorderBrush="{StaticResource ItemBorderBrush}"
                                                                        BorderThickness="0.6"
                                                                        CornerRadius="8"
                                                                        Padding="6"
                                                                        TextElement.Foreground="{StaticResource TextBrush}">
                                                                            <DockPanel>
                                                                                <ContentPresenter Name="PART_HeaderDown"
                                                                                          HorizontalAlignment="Center"
                                                                                          VerticalAlignment="Center"
                                                                                          ContentSource="Header"
                                                                                          DockPanel.Dock="Left" />
                                                                                <ToggleButton DockPanel.Dock="Right" Style="{StaticResource ConfirmCancelButton}" Content="X" Width="20">
                                                                                    <I:Interaction.Triggers>
                                                                                        <I:EventTrigger EventName="Indeterminate">
                                                                                            <I:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType=Views:SoheilSplitView}, 
                                                                                        Path=ViewModel.CurrentContent.PositionsVM.ExcludeTreeCommand}"
                                                                                    CommandParameter="{Binding}" />
                                                                                        </I:EventTrigger>
                                                                                    </I:Interaction.Triggers>
                                                                                </ToggleButton>
                                                                                <Button Content="+" Width="20" DockPanel.Dock="Right">
                                                                                    <Button.Command>
                                                                                        <Binding RelativeSource="{RelativeSource AncestorType=Views:SoheilSplitView}">
                                                                                            <Binding.Path>ViewModel.CurrentContent.FishbonesVM.IncludeCommand</Binding.Path>
                                                                                        </Binding>
                                                                                    </Button.Command>
                                                                                    <Button.CommandParameter>
                                                                                        <Binding>
                                                                                            <Binding.Path>Id</Binding.Path>
                                                                                        </Binding>
                                                                                    </Button.CommandParameter>
                                                                                </Button>
                                                                                <Canvas />
                                                                            </DockPanel>
                                                                        </Border>
                                                                        <Canvas Grid.Row="4" 
                                                                                Height="167"
                                                                                Visibility="{Binding Converter={StaticResource UpGapVisibilityConverter}}"/>
                                                                    </Grid>
                                                                </Grid>
                                                            </Grid>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsSelected" Value="True">
                                                                    <Setter TargetName="UpBd" Property="Panel.Background" Value="{StaticResource SelectedItemAreaBrush}" />
                                                                    <Setter TargetName="UpBd" Property="Border.BorderBrush" Value="{StaticResource SelectedItemBorderBrush}" />
                                                                    <Setter TargetName="UpBd" Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                                                                    <Setter TargetName="UpBd" Property="Border.BitmapEffect" Value="{StaticResource DropShadowEffect}" />
                                                                    <Setter TargetName="DownBd" Property="Panel.Background" Value="{StaticResource SelectedItemAreaBrush}" />
                                                                    <Setter TargetName="DownBd" Property="Border.BorderBrush" Value="{StaticResource SelectedItemBorderBrush}" />
                                                                    <Setter TargetName="DownBd" Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                                                                    <Setter TargetName="DownBd" Property="Border.BitmapEffect" Value="{StaticResource DropShadowEffect}" />
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="ItemsPanel">
                                                    <Setter.Value>
                                                        <ItemsPanelTemplate>
                                                            <StackPanel
                                                                IsItemsHost="True" 
                                                                Orientation="Horizontal">
                                                            </StackPanel>
                                                        </ItemsPanelTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </TreeView.ItemContainerStyle>
                                        <I:Interaction.Behaviors>
                                            <ControlBehaviors:BindableSelectedItemBehavior>
                                                <ControlBehaviors:BindableSelectedItemBehavior.SelectedItem>
                                                    <Binding RelativeSource="{RelativeSource AncestorType=Views:SoheilSplitView}"
                                                         Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                                                        <Binding.Path>ViewModel.CurrentContent.FishbonesVM.CurrentNode</Binding.Path>
                                                    </Binding>
                                                </ControlBehaviors:BindableSelectedItemBehavior.SelectedItem>
                                            </ControlBehaviors:BindableSelectedItemBehavior>
                                        </I:Interaction.Behaviors>
                                        <TreeView.Resources>
                                            <ResourceDictionary>
                                                <HierarchicalDataTemplate DataType="{x:Type ViewModels:FishboneNodeVM}" ItemsSource="{Binding ChildNodes}">
                                                    <TextBox Text="{Binding Title, Mode=TwoWay}" >
                                                        <MultiCommands:CommandSource.Trigger>
                                                            <MultiCommands:EventCommandTrigger RoutedEvent="UIElement.LostFocus"
											                    Command="{Binding SaveCommand}" />
                                                        </MultiCommands:CommandSource.Trigger>
                                                    </TextBox>
                                                </HierarchicalDataTemplate>
                                            </ResourceDictionary>
                                        </TreeView.Resources>
                                        <TreeView.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <StackPanel
                                                    IsItemsHost="True" 
                                                    Orientation="Horizontal" />
                                            </ItemsPanelTemplate>
                                        </TreeView.ItemsPanel>
                                    </TreeView>
                                </DockPanel>
                            </Border>
                        </DockPanel>
                        <ContentControl DockPanel.Dock="Bottom" Template="{StaticResource OperationPanel}" />
                        <Canvas DockPanel.Dock="Bottom" />
                    </DockPanel>
                </GroupBox>
                <GroupBox Style="{StaticResource SoheilDualLeftViewBorder}" DockPanel.Dock="Left" Header="{Loc txtDefections}">
                    <ListBox HorizontalAlignment="Left"
                        IsSynchronizedWithCurrentItem="True"
                        ItemsSource="{Binding 
                        Path=CurrentContent.FishbonesVM.DefectionList,
                        UpdateSourceTrigger=PropertyChanged}"
                        SelectedItem="{Binding 
                        Path=CurrentContent.FishbonesVM.CurrentDefection,
                        Mode=TwoWay,
                        UpdateSourceTrigger=PropertyChanged}"
                        IsEnabled="{Binding CurrentContent.FishbonesVM.IsEnabled}">
                        <MultiCommands:CommandSource.Trigger>
                            <MultiCommands:CommandTriggerGroup>
                                <MultiCommands:EventCommandTrigger RoutedEvent="UIElement.PreviewMouseLeftButtonUp"
											Command="{Binding RelativeSource={RelativeSource AncestorType=Views:SoheilSplitView},
                                                Path=ViewModel.CurrentContent.FishbonesVM.ViewProductDefectionsCommand}" />
                            </MultiCommands:CommandTriggerGroup>
                        </MultiCommands:CommandSource.Trigger>
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <WrapPanel>
                                    <TextBlock>
                                        <TextBlock.Text>
                                            <Binding>
                                                <Binding.Path>Id</Binding.Path>
                                            </Binding>
                                        </TextBlock.Text>
                                    </TextBlock>
                                    <TextBlock Text=" - " />
                                    <TextBlock>
                                        <TextBlock.Text>
                                            <Binding>
                                                <Binding.Path>Name</Binding.Path>
                                            </Binding>
                                        </TextBlock.Text>
                                    </TextBlock>
                                </WrapPanel>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </GroupBox>
                <GroupBox Style="{StaticResource SoheilDualRightViewBorder}" DockPanel.Dock="Left" Header="{Loc txtProducts}">
                    <ListBox HorizontalAlignment="Left"
                        IsSynchronizedWithCurrentItem="True"
                        ItemsSource="{Binding 
                        Path=CurrentContent.FishbonesVM.AllItems,
                        UpdateSourceTrigger=PropertyChanged}"
                        SelectedItem="{Binding 
                        Path=CurrentContent.FishbonesVM.CurrentProductDefection,
                        Mode=TwoWay,
                        UpdateSourceTrigger=PropertyChanged}"
                        IsEnabled="{Binding CurrentContent.FishbonesVM.IsEnabled}">
                        <MultiCommands:CommandSource.Trigger>
                            <MultiCommands:CommandTriggerGroup>
                                <MultiCommands:EventCommandTrigger RoutedEvent="UIElement.PreviewMouseLeftButtonUp"
											Command="{Binding RelativeSource={RelativeSource AncestorType=Views:SoheilSplitView},
                                                Path=ViewModel.CurrentContent.FishbonesVM.InitializeFishboneCommand}" />
                            </MultiCommands:CommandTriggerGroup>
                        </MultiCommands:CommandSource.Trigger>
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <WrapPanel>
                                    <TextBlock>
                                        <TextBlock.Text>
                                            <Binding>
                                                <Binding.Path>Id</Binding.Path>
                                            </Binding>
                                        </TextBlock.Text>
                                    </TextBlock>
                                    <TextBlock Text=" - " />
                                    <TextBlock>
                                        <TextBlock.Text>
                                            <Binding>
                                                <Binding.Path>ProductName</Binding.Path>
                                            </Binding>
                                        </TextBlock.Text>
                                    </TextBlock>
                                </WrapPanel>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </GroupBox>
                <Canvas />
            </DockPanel>
        </DataTemplate>
        <DataTemplate x:Key="RootFishbonesTemplate" DataType="ViewModels:RootFishbonesVM">
            <DockPanel DataContext="{Binding RelativeSource={RelativeSource AncestorType=Views:SoheilSplitView}, Path=ViewModel}">
                <GroupBox DockPanel.Dock="Right" Style="{StaticResource SoheilDetailViewBorder}" Header="{Loc txtFishboneNodes}">
                    <DockPanel>
                        <Border DockPanel.Dock="Top" Style="{StaticResource SoheilContentUpperBarBorder}">
                            <WrapPanel Margin="10"
                                       HorizontalAlignment="Right"
                                       DockPanel.Dock="Bottom">
                                <Button Command="{Binding ViewCommand}"
                                        Content="Back To FishboneNode">
                                    <Button.CommandParameter>
                                        <Binding>
                                            <Binding.Path>CurrentContent.CurrentRoot</Binding.Path>
                                        </Binding>
                                    </Button.CommandParameter>
                                </Button>
                            </WrapPanel>
                        </Border>
                        <ItemsControl DockPanel.Dock="Top" Template="{StaticResource ExcludeList}" />
                    </DockPanel>
                </GroupBox>
                <GroupBox Style="{StaticResource SoheilDetailListViewBorder}" Header="{Loc txtRoots}">
                    <ItemsControl Template="{StaticResource IncludeList}"/>
                </GroupBox>
                <Canvas />
            </DockPanel>
        </DataTemplate>
        <DataTemplate x:Key="FishboneNodeActionPlansTemplate" DataType="ViewModels:FishboneNodeActionPlansVM">
            <DockPanel DataContext="{Binding RelativeSource={RelativeSource AncestorType=Views:SoheilSplitView}, Path=ViewModel}"
                        Visibility="{Binding CurrentContent.MainContentVisibility, Converter={StaticResource ReverseVisibilityConverter}}">
                <GroupBox DockPanel.Dock="Right" Style="{StaticResource SoheilDetailViewBorder}" Header="{Loc txtActionPlans}">
                    <DockPanel>
                        <ContentControl DockPanel.Dock="Top" Template="{StaticResource ReturnPanel}"/>
                        <ItemsControl Template="{StaticResource ExcludeList}" />
                    </DockPanel>
                </GroupBox>
                <GroupBox Style="{StaticResource SoheilDetailListViewBorder}" Header="{Loc txtFishboneNodes}">
                    <ItemsControl Template="{StaticResource IncludeList}"/>
                </GroupBox>
                <Canvas />
            </DockPanel>
        </DataTemplate>

        <!-- 2.2.3. Action Plan -->
        <DataTemplate x:Key="ActionPlanTemplate" DataType="ViewModels:ActionPlanVM">
            <GroupBox DataContext="{Binding RelativeSource={RelativeSource AncestorType=Views:SoheilSplitView}, Path=ViewModel}" 
                      Style="{StaticResource SoheilContentGroupBox}" Header="{Binding CurrentContent.Name}">
                <I:Interaction.Behaviors>
                    <Behavior:ValidationExceptionBehavior />
                </I:Interaction.Behaviors>
                <DockPanel FlowDirection="{Loc enumDirection}">
                    <Border DockPanel.Dock="Top" Style="{StaticResource SoheilContentUpperBarBorder}">
                        <WrapPanel Margin="10"
                                   HorizontalAlignment="Right"
                                   DockPanel.Dock="Bottom">
                            <Button Command="{Binding CurrentContent.ViewItemLinkCommand}"
                                    CommandParameter="0"
                                    Content="{Loc txtFishboneNodes}">
                            </Button>
                        </WrapPanel>
                    </Border>
                    <DockPanel DockPanel.Dock="Top">
                        <ContentControl DockPanel.Dock="Top" Template="{StaticResource CodeNameInfoContent}" />
                        <ContentControl DockPanel.Dock="Top" Template="{StaticResource GroupStatusInfoContent}" />
                        <ContentControl DockPanel.Dock="Bottom" Template="{StaticResource UserDateInfoContent}" />
                    </DockPanel>
                    <ContentControl DockPanel.Dock="Bottom" Template="{StaticResource OperationPanel}" />
                    <Canvas DockPanel.Dock="Bottom" />
                </DockPanel>
            </GroupBox>
        </DataTemplate>
        <DataTemplate x:Key="ActionPlanFishboneNodesTemplate" DataType="ViewModels:ActionPlanFishbonesVM">
            <DockPanel DataContext="{Binding RelativeSource={RelativeSource AncestorType=Views:SoheilSplitView}, Path=ViewModel}"
                        Visibility="{Binding CurrentContent.MainContentVisibility, Converter={StaticResource ReverseVisibilityConverter}}">
                <GroupBox DockPanel.Dock="Right" Style="{StaticResource SoheilDetailViewBorder}" Header="{Loc txtFishboneNodes}">
                    <DockPanel>
                        <ContentControl DockPanel.Dock="Top" Template="{StaticResource ReturnPanel}"/>
                        <ItemsControl Template="{StaticResource ExcludeList}" />
                    </DockPanel>
                </GroupBox>
                <GroupBox Style="{StaticResource SoheilDetailListViewBorder}" Header="{Loc txtActionPlans}">
                    <ItemsControl 
                HorizontalAlignment="Left" 
                DataContext="{Binding RelativeSource={RelativeSource AncestorType=Views:SoheilSplitView}, Path=ViewModel}"
                ItemsSource="{Binding CurrentContent.CurrentLink.AllItems}">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Button CommandParameter="{Binding}">
                                    <Button.Command>
                                        <Binding RelativeSource="{RelativeSource AncestorType=Views:SoheilSplitView}">
                                            <Binding.Path>ViewModel.CurrentContent.CurrentLink.IncludeCommand</Binding.Path>
                                        </Binding>
                                    </Button.Command>
                                    <ContentPresenter>
                                        <ContentPresenter.ContentTemplate>
                                            <DataTemplate>
                                                <WrapPanel>
                                                    <TextBlock>
                                                        <TextBlock.Text>
                                                            <Binding>
                                                                <Binding.Path>Id</Binding.Path>
                                                            </Binding>
                                                        </TextBlock.Text>
                                                    </TextBlock>
                                                    <TextBlock Text=" - " />
                                                    <TextBlock>
                                                        <TextBlock.Text>
                                                            <Binding>
                                                                <Binding.Path>Description</Binding.Path>
                                                            </Binding>
                                                        </TextBlock.Text>
                                                    </TextBlock>
                                                </WrapPanel>
                                            </DataTemplate>
                                        </ContentPresenter.ContentTemplate>
                                    </ContentPresenter>
                                </Button>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.Template>
                            <ControlTemplate>
                                <ScrollViewer VerticalScrollBarVisibility="Auto" x:Name="ScrollViewer" Padding="{TemplateBinding Padding}">
                                    <ItemsPresenter />
                                </ScrollViewer>
                            </ControlTemplate>
                        </ItemsControl.Template>
                    </ItemsControl>
                </GroupBox>
                <Canvas />
            </DockPanel>
        </DataTemplate>
        
        <!-- 2.2.4 Cause -->
        <DataTemplate x:Key="CauseTemplate" DataType="ViewModels:CauseVM">
            <GroupBox DataContext="{Binding RelativeSource={RelativeSource AncestorType=Views:SoheilSplitView}, Path=ViewModel}" 
                      Style="{StaticResource SoheilContentGroupBox}" Header="{Binding CurrentContent.Name}">
                <I:Interaction.Behaviors>
                    <Behavior:ValidationExceptionBehavior />
                </I:Interaction.Behaviors>
                <DockPanel>
                    <Border DockPanel.Dock="Top" Style="{StaticResource SoheilContentUpperBarBorder}">
                    </Border>
                    <DockPanel DockPanel.Dock="Top">
                        <ContentControl DockPanel.Dock="Top" Template="{StaticResource CodeNameInfoContent}" />
                        <Border DockPanel.Dock="Top" Style="{StaticResource SoheilContentMiddleBorder}">
                            <UniformGrid Margin="5"
                             Columns="2"
                             Rows="3">
                                <TextBlock Style="{StaticResource EntryBoxHeader}" Text="{Loc txtGroup}" />
                                <ComboBox Margin="2" DisplayMemberPath="Name"
                              ItemsSource="{Binding Path=CurrentContent.Groups}"
                              SelectedValue="{Binding Path=CurrentContent.SelectedGroupVM,
                                                      Mode=TwoWay}"
                              SelectedValuePath="." />
                                <TextBlock Style="{StaticResource EntryBoxHeader}" Text="{Loc txtStatus}" />
                                <ComboBox Margin="2" ItemsSource="{Binding Source={StaticResource AlignmentValues}}" SelectedValue="{Binding Path=CurrentContent.Status}" />
                                <TextBlock Style="{StaticResource EntryBoxHeader}" Text="{Loc txtLevel}" />
                                <ComboBox Margin="2" IsReadOnly="True" ItemsSource="{Binding Source={StaticResource CauseLevels}}" SelectedValue="{Binding Path=CurrentContent.Level}" />
                            </UniformGrid>
                        </Border>
                        <ContentControl DockPanel.Dock="Bottom" Template="{StaticResource UserDateInfoContent}" />
                    </DockPanel>
                    <ContentControl DockPanel.Dock="Bottom" Template="{StaticResource OperationPanel}" />
                    <Canvas DockPanel.Dock="Bottom" />
                </DockPanel>
            </GroupBox>
        </DataTemplate>

        <!-- 2.3. FPC -->
        <DataTemplate x:Key="FpcSubContentPanel">
            <WrapPanel Height="22" Margin="2">
                <CustomControls:ImageRadioButton Click="ListUpdated"
                             IsChecked="True"
                            Content="{Loc txtFPC}"
                            ImageSource="/Soheil.Controls;component/Images/Menus/FPC.png"
                            Tag="231" />
                <CustomControls:ImageRadioButton Click="ListUpdated"
                            Content="{Loc txtStations}"
                            ImageSource="/Soheil.Controls;component/Images/Menus/Station.png"
                            Tag="232" />
                <CustomControls:ImageRadioButton Click="ListUpdated"
                            Content="{Loc txtMachines}"
                            ImageSource="/Soheil.Controls;component/Images/Menus/Machinery.png"
                            Tag="233" />
                <CustomControls:ImageRadioButton Click="ListUpdated"
                            Content="{Loc txtActivities}"
                            ImageSource="/Soheil.Controls;component/Images/Menus/activity.png"
                            Tag="234" />
            </WrapPanel>
        </DataTemplate>

        <!-- 2.3.1. Fpc Set-->
        <DataTemplate x:Key="FpcTemplate" DataType="ViewModels:FpcsVm">
            <FpcViews:FpcWindow Fpc="{Binding RelativeSource={RelativeSource AncestorType=Views:SoheilSplitView}, 
                Path=ViewModel.CurrentContent}"/>
        </DataTemplate>
        <DataTemplate x:Key="FpcsSubContentPanel" DataType="ViewModels:FpcsVm">

        </DataTemplate>

        <!-- 2.3.2. Station -->
        <DataTemplate x:Key="StationTemplate" DataType="ViewModels:StationVM">
            <GroupBox DataContext="{Binding RelativeSource={RelativeSource AncestorType=Views:SoheilSplitView}, Path=ViewModel}" 
                      Style="{StaticResource SoheilContentGroupBox}" Header="{Binding CurrentContent.Name}">
                <I:Interaction.Behaviors>
                    <Behavior:ValidationExceptionBehavior />
                </I:Interaction.Behaviors>
                <DockPanel FlowDirection="{Loc enumDirection}">
                    <Border DockPanel.Dock="Top" Style="{StaticResource SoheilContentUpperBarBorder}">
                        <WrapPanel Margin="10"
                                   HorizontalAlignment="Right"
                                   DockPanel.Dock="Bottom">
                            <Button Command="{Binding CurrentContent.ViewItemLinkCommand}"
                                    CommandParameter="0"
                                    Content="{Loc txtMachines}">
                            </Button>
                        </WrapPanel>
                    </Border>
                    <DockPanel DockPanel.Dock="Top">
                        <ContentControl DockPanel.Dock="Top" Template="{StaticResource CodeNameInfoContent}" />
                        <ContentControl DockPanel.Dock="Top" Template="{StaticResource GroupStatusInfoContent}" />
                        <ContentControl DockPanel.Dock="Bottom" Template="{StaticResource UserDateInfoContent}" />
                    </DockPanel>
                    <ContentControl DockPanel.Dock="Bottom" Template="{StaticResource OperationPanel}" />
                    <Canvas DockPanel.Dock="Bottom" />
                </DockPanel>
            </GroupBox>
        </DataTemplate>
        <DataTemplate x:Key="StationMachinesTemplate" DataType="ContentControl">
            <DockPanel DataContext="{Binding RelativeSource={RelativeSource AncestorType=Views:SoheilSplitView}, Path=ViewModel}"
                        Visibility="{Binding CurrentContent.MainContentVisibility, Converter={StaticResource ReverseVisibilityConverter}}">
                <GroupBox DockPanel.Dock="Right" Style="{StaticResource SoheilDetailViewBorder}" Header="{Loc txtMachines}">
                    <DockPanel>
                        <ContentControl DockPanel.Dock="Top" Template="{StaticResource ReturnPanel}"/>
                        <ItemsControl Template="{StaticResource ExcludeList}" />
                    </DockPanel>
                </GroupBox>
                <GroupBox Style="{StaticResource SoheilDetailListViewBorder}" Header="{Loc txtStations}">
                    <ItemsControl Template="{StaticResource IncludeList}" />
                </GroupBox>
                <Canvas />
            </DockPanel>
        </DataTemplate>

        <!-- 2.3.3. Machine -->
        <DataTemplate x:Key="MachineTemplate" DataType="ViewModels:MachineVM">
            <GroupBox DataContext="{Binding RelativeSource={RelativeSource AncestorType=Views:SoheilSplitView}, Path=ViewModel}" 
                      Style="{StaticResource SoheilContentGroupBox}" Header="{Binding CurrentContent.Name}">
                <I:Interaction.Behaviors>
                    <Behavior:ValidationExceptionBehavior />
                </I:Interaction.Behaviors>
                <DockPanel FlowDirection="{Loc enumDirection}">
                    <Border DockPanel.Dock="Top" Style="{StaticResource SoheilContentUpperBarBorder}">
                        <WrapPanel Margin="10"
                                   HorizontalAlignment="Right"
                                   DockPanel.Dock="Bottom">
                            <Button Command="{Binding CurrentContent.ViewItemLinkCommand}"
                                    CommandParameter="0"
                                    Content="{Loc txtStations}">
                            </Button>
                        </WrapPanel>
                    </Border>
                    <DockPanel DockPanel.Dock="Top">
                        <ContentControl DockPanel.Dock="Top" Template="{StaticResource CodeNameInfoContent}" />
                        <ContentControl DockPanel.Dock="Top" Template="{StaticResource GroupStatusInfoContent}" />
                        <ContentControl DockPanel.Dock="Bottom" Template="{StaticResource UserDateInfoContent}" />
                    </DockPanel>
                    <ContentControl DockPanel.Dock="Bottom" Template="{StaticResource OperationPanel}" />
                    <Canvas DockPanel.Dock="Bottom" />
                </DockPanel>
            </GroupBox>
        </DataTemplate>
        <DataTemplate x:Key="MachineStationsTemplate" DataType="ContentControl">
            <DockPanel DataContext="{Binding RelativeSource={RelativeSource AncestorType=Views:SoheilSplitView},  Path=ViewModel}"
                       Visibility="{Binding CurrentContent.MainContentVisibility, Converter={StaticResource ReverseVisibilityConverter}}">
                <GroupBox DockPanel.Dock="Right" Style="{StaticResource SoheilDetailViewBorder}" Header="{Loc txtStations}">
                    <DockPanel>
                        <ContentControl DockPanel.Dock="Top" Template="{StaticResource ReturnPanel}"/>
                        <ItemsControl Template="{StaticResource ExcludeList}"/>
                    </DockPanel>
                </GroupBox>
                <GroupBox Style="{StaticResource SoheilDetailListViewBorder}" Header="{Loc txtMachines}">
                    <ItemsControl Template="{StaticResource IncludeList}"/>
                </GroupBox>
                <Canvas />
            </DockPanel>
        </DataTemplate>
        <DataTemplate x:Key="MachineFamilyTemplate" DataType="ViewModels:MachineFamilyVM">
            <GroupBox DataContext="{Binding RelativeSource={RelativeSource AncestorType=Views:SoheilSplitView}, Path=ViewModel}" 
                      Style="{StaticResource SoheilContentGroupBox}" Header="{Binding CurrentContent.Name}">
                <I:Interaction.Behaviors>
                    <Behavior:ValidationExceptionBehavior />
                </I:Interaction.Behaviors>
                <DockPanel FlowDirection="{Loc enumDirection}">
                    <Border DockPanel.Dock="Top" Style="{StaticResource SoheilContentUpperBarBorder}" />
                    <DockPanel DockPanel.Dock="Top">
                        <ContentControl DockPanel.Dock="Top" Template="{StaticResource CodeNameInfoContent}" />
                        <ContentControl DockPanel.Dock="Top" Template="{StaticResource StatusInfoContent}" />
                        <ContentControl DockPanel.Dock="Bottom" Template="{StaticResource UserDateInfoContent}" />
                    </DockPanel>
                    <ContentControl DockPanel.Dock="Bottom" Template="{StaticResource OperationPanel}" />
                    <Canvas DockPanel.Dock="Bottom" />
                </DockPanel>
            </GroupBox>
        </DataTemplate>

        <!-- 2.3.4. Activity  -->
        <DataTemplate x:Key="ActivityTemplate" DataType="ViewModels:ActivityVM">
            <GroupBox DataContext="{Binding RelativeSource={RelativeSource AncestorType=Views:SoheilSplitView}, Path=ViewModel}" 
                      Style="{StaticResource SoheilContentGroupBox}" Header="{Binding CurrentContent.Name}">
                <I:Interaction.Behaviors>
                    <Behavior:ValidationExceptionBehavior />
                </I:Interaction.Behaviors>
                <DockPanel FlowDirection="{Loc enumDirection}">
                    <Border DockPanel.Dock="Top" Style="{StaticResource SoheilContentUpperBarBorder}">
                        <WrapPanel Margin="10"
                                   HorizontalAlignment="Right"
                                   DockPanel.Dock="Bottom">
                            <Button Command="{Binding CurrentContent.ViewItemLinkCommand}"
                                    CommandParameter="0"
                                    Content="{Loc txtOperators}">
                            </Button>
                        </WrapPanel>
                    </Border>
                    <DockPanel DockPanel.Dock="Top">
                        <ContentControl DockPanel.Dock="Top" Template="{StaticResource CodeNameInfoContent}" />
                        <ContentControl DockPanel.Dock="Top" Template="{StaticResource GroupStatusInfoContent}" />
                        <ContentControl DockPanel.Dock="Bottom" Template="{StaticResource UserDateInfoContent}" />
                    </DockPanel>
                    <ContentControl DockPanel.Dock="Bottom" Template="{StaticResource OperationPanel}" />
                    <Canvas DockPanel.Dock="Bottom" />
                </DockPanel>
            </GroupBox>
        </DataTemplate>
        <DataTemplate x:Key="ActivityOperatorsTemplate" DataType="ViewModels:ActivityOperatorsVM">
            <DockPanel DataContext="{Binding RelativeSource={RelativeSource AncestorType=Views:SoheilSplitView}, Path=ViewModel}"
                        Visibility="{Binding CurrentContent.MainContentVisibility, Converter={StaticResource ReverseVisibilityConverter}}">
                <GroupBox DockPanel.Dock="Right" Style="{StaticResource SoheilDetailViewBorder}" Header="{Loc txtOperators}">
                    <DockPanel>
                        <ContentControl DockPanel.Dock="Top" Template="{StaticResource ReturnPanel}"/>
                        <ItemsControl DockPanel.Dock="Top" Template="{StaticResource ExcludeList}" />
                        <Border DockPanel.Dock="Bottom">
                            <UniformGrid Margin="5"
                                         Columns="2"
                                         Rows="3">
                                <TextBlock Style="{StaticResource EntryBoxHeader}" Text="ILUO :" />
                                <ComboBox Margin="2" ItemsSource="{Binding Source={StaticResource IluoValues}}">
                                    <ComboBox.SelectedValue>
                                        <Binding>
                                            <Binding.Path>CurrentContent.CurrentLink.Details.SkillPoint</Binding.Path>
                                        </Binding>
                                    </ComboBox.SelectedValue>
                                </ComboBox>
                                <Canvas />
                                <Canvas />
                                <Button Content="{Loc txtEdit}">
                                    <Button.Command>
                                        <Binding>
                                            <Binding.Path>CurrentContent.CurrentLink.Details.SaveCommand</Binding.Path>
                                        </Binding>
                                    </Button.Command>
                                </Button>
                            </UniformGrid>
                        </Border>
                        <Canvas DockPanel.Dock="Bottom" />
                    </DockPanel>
                </GroupBox>
                <GroupBox Style="{StaticResource SoheilDetailListViewBorder}" Header="{Loc txtActivities}">
                    <ItemsControl Template="{StaticResource IncludeList}" />
                </GroupBox>
                <Canvas />
            </DockPanel>
        </DataTemplate>
        <DataTemplate x:Key="ActivityGroupTemplate" DataType="ViewModels:ActivityGroupVM">
            <GroupBox DataContext="{Binding RelativeSource={RelativeSource AncestorType=Views:SoheilSplitView}, Path=ViewModel}" 
                      Style="{StaticResource SoheilContentGroupBox}" Header="{Binding CurrentContent.Name}">
                <I:Interaction.Behaviors>
                    <Behavior:ValidationExceptionBehavior />
                </I:Interaction.Behaviors>
                <DockPanel FlowDirection="{Loc enumDirection}">
                    <Border DockPanel.Dock="Top" Style="{StaticResource SoheilContentUpperBarBorder}" />
                    <DockPanel DockPanel.Dock="Top">
                        <ContentControl DockPanel.Dock="Top" Template="{StaticResource CodeNameInfoContent}" />
                        <ContentControl DockPanel.Dock="Top" Template="{StaticResource StatusInfoContent}" />
                        <ContentControl DockPanel.Dock="Bottom" Template="{StaticResource UserDateInfoContent}" />
                    </DockPanel>
                    <ContentControl DockPanel.Dock="Bottom" Template="{StaticResource OperationPanel}" />
                    <Canvas DockPanel.Dock="Bottom" />
                </DockPanel>
            </GroupBox>
        </DataTemplate>

        <!-- 2.4. Operators  -->
        <DataTemplate x:Key="OperatorsSubContentPanel">
            <WrapPanel Height="22" Margin="2">
                <CustomControls:ImageRadioButton Click="ListUpdated"
                             IsChecked="True"
                            Content="{Loc txtOperators}"
                            ImageSource="/Soheil.Controls;component/Images/Menus/operator.png"
                            Tag="241" />
                <CustomControls:ImageRadioButton Click="ListUpdated"
                            Content="{Loc txtGenSkills}"
                            ImageSource="/Soheil.Controls;component/Images/Menus/Report.png"
                            Tag="242" />
                <CustomControls:ImageRadioButton Click="ListUpdated"
                            Content="{Loc txtSpeSkills}"
                            ImageSource="/Soheil.Controls;component/Images/Menus/Report.png"
                            Tag="243" />
            </WrapPanel>
        </DataTemplate>

        <!-- 2.4.1. Operator  -->
        <DataTemplate x:Key="OperatorTemplate" DataType="ViewModels:OperatorVM">
            <GroupBox DataContext="{Binding RelativeSource={RelativeSource AncestorType=Views:SoheilSplitView}, Path=ViewModel}" 
                      Style="{StaticResource SoheilContentGroupBox}" Header="{Binding CurrentContent.Name}">
                <I:Interaction.Behaviors>
                    <Behavior:ValidationExceptionBehavior />
                </I:Interaction.Behaviors>
                <DockPanel>
                    <Border DockPanel.Dock="Top" Style="{StaticResource SoheilContentUpperBarBorder}">
                        <WrapPanel Margin="10"
                                   HorizontalAlignment="Right"
                                   DockPanel.Dock="Bottom">
                            <Button Command="{Binding CurrentContent.ViewItemLinkCommand}"
                                    CommandParameter="0"
                                    Content="{Loc txtActivities}">
                            </Button>
                        </WrapPanel>
                    </Border>
                    <DockPanel DockPanel.Dock="Top">
                        <ContentControl DockPanel.Dock="Top" Template="{StaticResource CodeNameInfoContent}" />
                        <ContentControl DockPanel.Dock="Top" Template="{StaticResource GroupStatusInfoContent}" />
                        <ContentControl DockPanel.Dock="Bottom" Template="{StaticResource UserDateInfoContent}" />
                    </DockPanel>
                    <ContentControl DockPanel.Dock="Bottom" Template="{StaticResource OperationPanel}" />
                    <Canvas DockPanel.Dock="Bottom" />
                </DockPanel>
            </GroupBox>
        </DataTemplate>
        <DataTemplate x:Key="OperatorActivitiesTemplate" DataType="ViewModels:OperatorActivitiesVM">
            <DockPanel DataContext="{Binding RelativeSource={RelativeSource AncestorType=Views:SoheilSplitView}, Path=ViewModel}"
                        Visibility="{Binding CurrentContent.MainContentVisibility, Converter={StaticResource ReverseVisibilityConverter}}">
                <GroupBox DockPanel.Dock="Right" Style="{StaticResource SoheilDetailViewBorder}" Header="{Loc txtActivities}">
                    <DockPanel>
                        <ContentControl DockPanel.Dock="Top" Template="{StaticResource ReturnPanel}"/>
                        <ItemsControl DockPanel.Dock="Top" Template="{StaticResource ExcludeList}" />
                        <Border DockPanel.Dock="Bottom">
                            <UniformGrid Margin="5"
                                         Columns="2"
                                         Rows="3">
                                <TextBlock Style="{StaticResource EntryBoxHeader}" Text="ILUO :" />
                                <ComboBox Margin="2" ItemsSource="{Binding Source={StaticResource IluoValues}}">
                                    <ComboBox.SelectedValue>
                                        <Binding>
                                            <Binding.Path>CurrentContent.CurrentLink.Details.SkillPoint</Binding.Path>
                                        </Binding>
                                    </ComboBox.SelectedValue>
                                </ComboBox>
                                <Canvas />
                                <Button Content="{Loc txtEdit}">
                                    <Button.Command>
                                        <Binding>
                                            <Binding.Path>CurrentContent.CurrentLink.Details.SaveCommand</Binding.Path>
                                        </Binding>
                                    </Button.Command>
                                </Button>
                            </UniformGrid>
                        </Border>
                        <Canvas DockPanel.Dock="Bottom" />
                    </DockPanel>
                </GroupBox>
                <GroupBox Style="{StaticResource SoheilDetailListViewBorder}" Header="{Loc txtOperators}">
                    <ItemsControl Template="{StaticResource IncludeList}" />
                </GroupBox>
                <Canvas />
            </DockPanel>
        </DataTemplate>

        <!-- 2.4.2. General Skill  -->
        <DataTemplate x:Key="GeneralSkillTemplate" DataType="ViewModels:GeneralSkillVM">
            <GroupBox DataContext="{Binding RelativeSource={RelativeSource AncestorType=Views:SoheilSplitView}, Path=ViewModel}" 
                      Style="{StaticResource SoheilContentGroupBox}" Header="{Binding CurrentContent.Reserve1}">
                <I:Interaction.Behaviors>
                    <Behavior:ValidationExceptionBehavior />
                </I:Interaction.Behaviors>
                <DockPanel>
                    <Border DockPanel.Dock="Top" Style="{StaticResource SoheilContentUpperBarBorder}" />
                    <DockPanel DockPanel.Dock="Top">
                        <Border DockPanel.Dock="Top" Style="{StaticResource SoheilContentUpperBorder}">
                            <UniformGrid Margin="5"
                                         Columns="2"
                                         Rows="2">
                                <TextBlock Style="{StaticResource EntryBoxHeader}" Text="{Loc txtEducation}" />
                                <TextBox Margin="2">
                                    <TextBox.Text>
                                        <Binding ValidatesOnDataErrors="True"
                                                 UpdateSourceTrigger="PropertyChanged">
                                            <Binding.Path>CurrentContent.Education</Binding.Path>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                                <TextBlock Style="{StaticResource EntryBoxHeader}" Text="{Loc txtPhysicals}" />
                                <TextBox Margin="2">
                                    <TextBox.Text>
                                        <Binding ValidatesOnDataErrors="True"
                                                 UpdateSourceTrigger="PropertyChanged">
                                            <Binding.Path>CurrentContent.PhysicalState</Binding.Path>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                            </UniformGrid>
                        </Border>
                        <Border DockPanel.Dock="Top" Style="{StaticResource SoheilContentMiddleBorder}">
                            <UniformGrid Margin="5"
                                         Columns="2"
                                         Rows="3">
                                <TextBlock Style="{StaticResource EntryBoxHeader}" Text="{Loc txtRes1}" />
                                <TextBox Margin="2">
                                    <TextBox.Text>
                                        <Binding ValidatesOnDataErrors="True"
                                                 UpdateSourceTrigger="PropertyChanged">
                                            <Binding.Path>CurrentContent.Reserve1</Binding.Path>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                                <TextBlock Style="{StaticResource EntryBoxHeader}" Text="{Loc txtRes2}" />
                                <TextBox Margin="2">
                                    <TextBox.Text>
                                        <Binding ValidatesOnDataErrors="True"
                                                 UpdateSourceTrigger="PropertyChanged">
                                            <Binding.Path>CurrentContent.Reserve2</Binding.Path>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                                <TextBlock Style="{StaticResource EntryBoxHeader}" Text="{Loc txtRes3}" />
                                <TextBox Margin="2">
                                    <TextBox.Text>
                                        <Binding ValidatesOnDataErrors="True"
                                                 UpdateSourceTrigger="PropertyChanged">
                                            <Binding.Path>CurrentContent.Reserve3</Binding.Path>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                            </UniformGrid>
                        </Border>
                        <Border DockPanel.Dock="Bottom" Style="{StaticResource SoheilContentLowerBorder}">
                            <UniformGrid Margin="5"
                                         Columns="2"
                                         Rows="1">
                                <TextBlock Style="{StaticResource EntryBoxHeader}" Text="{Loc txtMBy}" />
                                <TextBox Margin="2">
                                    <TextBox.Text>
                                        <Binding ValidatesOnDataErrors="True"
                                                 UpdateSourceTrigger="PropertyChanged">
                                            <Binding.Path>CurrentContent.ModifiedBy</Binding.Path>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                            </UniformGrid>
                        </Border>
                    </DockPanel>
                    <ContentControl DockPanel.Dock="Bottom" Template="{StaticResource OperationPanel}" />
                    <Canvas DockPanel.Dock="Bottom" />
                </DockPanel>
            </GroupBox>
        </DataTemplate>

        <!-- 2.4.3. Special Skill  -->
        <DataTemplate x:Key="SpecialSkillTemplate" DataType="ViewModels:SpecialSkillVM">
            <GroupBox DataContext="{Binding RelativeSource={RelativeSource AncestorType=Views:SoheilSplitView}, Path=ViewModel}" 
                      Style="{StaticResource SoheilContentGroupBox}" Header="{Binding CurrentContent.Reserve1}">
                <I:Interaction.Behaviors>
                    <Behavior:ValidationExceptionBehavior />
                </I:Interaction.Behaviors>
                <DockPanel>
                    <Border DockPanel.Dock="Top" Style="{StaticResource SoheilContentUpperBarBorder}" />
                    <DockPanel DockPanel.Dock="Top">
                        <ContentControl DockPanel.Dock="Top" Template="{StaticResource CodeNameInfoContent}" />
                        <ContentControl DockPanel.Dock="Top" Template="{StaticResource GroupStatusInfoContent}" />
                        <ContentControl DockPanel.Dock="Bottom" Template="{StaticResource UserDateInfoContent}" />
                    </DockPanel>
                    <ContentControl DockPanel.Dock="Bottom" Template="{StaticResource OperationPanel}" />
                    <Canvas DockPanel.Dock="Bottom" />
                </DockPanel>
            </GroupBox>
        </DataTemplate>

        <!-- 2.5. Costs  -->
        <DataTemplate x:Key="CostsSubContentPanel">
            <WrapPanel Height="22" Margin="2">
                <CustomControls:ImageRadioButton Click="ListUpdated"
                             IsChecked="True"
                            Content="{Loc txtCosts}"
                            ImageSource="/Soheil.Controls;component/Images/Menus/Cost.png"
                            Tag="251" />
                <CustomControls:ImageRadioButton Click="ListUpdated"
                            Content="{Loc txt PartWarehouses}"
                            ImageSource="/Soheil.Controls;component/Images/Menus/warehouse.png"
                            Tag="252" />
            </WrapPanel>
        </DataTemplate>

        <!-- 2.5.1. Cost  -->
        <DataTemplate x:Key="CostTemplate" DataType="ViewModels:CostVM">
            <GroupBox DataContext="{Binding RelativeSource={RelativeSource AncestorType=Views:SoheilSplitView}, Path=ViewModel}" 
                      Style="{StaticResource SoheilContentGroupBox}" Header="{Binding CurrentContent.Description}">
                <I:Interaction.Behaviors>
                    <Behavior:ValidationExceptionBehavior />
                </I:Interaction.Behaviors>
                <DockPanel FlowDirection="{Loc enumDirection}">
                    <Border DockPanel.Dock="Top" Style="{StaticResource SoheilContentUpperBarBorder}">
                        <WrapPanel Margin="10"
                                   HorizontalAlignment="Right"
                                   DockPanel.Dock="Bottom">
                        </WrapPanel>
                    </Border>
                    <DockPanel DockPanel.Dock="Top">
                        <Border DockPanel.Dock="Top" Style="{StaticResource SoheilCoverBorder}">
                            <UniformGrid Margin="2" Rows="5" Columns="2">
                                <TextBlock Style="{StaticResource EntryBoxHeader}" Text="{Loc txtDescription}" />
                                <TextBox Margin="2" IsReadOnly="False" Text="{Binding CurrentContent.Description}"></TextBox>
                                <TextBlock Style="{StaticResource EntryBoxHeader}" Text="{Loc txtCost}" />
                                <TextBox Margin="2" IsReadOnly="True" Visibility="{Binding CurrentContent.ComputationalCostVisibility}">
                                    <TextBox.Text>
                                        <MultiBinding Converter="{StaticResource MultiCostConverter}" >
                                            <Binding Path="CurrentContent.SelectedWarehouseVM.Quantity"></Binding>
                                            <Binding Path="CurrentContent.SelectedWarehouseVM.OriginalQuantity"></Binding>
                                            <Binding Path="CurrentContent.SelectedQuantity"></Binding>
                                            <Binding Path="CurrentContent.SelectedWarehouseVM.TotalCost"></Binding>
                                            <Binding Path="CurrentContent.SelectedWarehouseVM"></Binding>
                                        </MultiBinding>
                                    </TextBox.Text>
                                </TextBox>
                                <TextBox Margin="2" IsReadOnly="True" Text="{Binding CurrentContent.CostValue}" 
                                         Visibility="{Binding CurrentContent.FixedCostVisibility}"/>
                                <TextBlock Style="{StaticResource EntryBoxHeader}" Text="{Loc txtStatus}" />
                                <ComboBox Margin="2" ItemsSource="{Binding Source={StaticResource AlignmentValues}}" SelectedValue="{Binding Path=CurrentContent.Status}" />
                                <TextBlock Style="{StaticResource EntryBoxHeader}" Text="{Loc txtCDate}" />
                                <DatePickerTextBox Margin="2" IsReadOnly="True">
                                    <DatePickerTextBox.Text>
                                        <LocBinding StringFormat="{}{0:d/M/yyyy HH:mm:ss tt}">
                                            <Binding Converter="{StaticResource DtConverter}" Path="CurrentContent.Date" />
                                        </LocBinding>
                                    </DatePickerTextBox.Text>
                                </DatePickerTextBox>
                            </UniformGrid>
                        </Border>
                        <DockPanel>
                            <Border DockPanel.Dock="Left" Style="{StaticResource SoheilCoverBorder}" Width="100">
                                <ListBox ItemsSource="{Binding CurrentContent.CostSources}" 
                                         SelectedValue="{Binding CurrentContent.SelectedCostSource, Mode=TwoWay}"
                                         SelectedValuePath="."
                                         DisplayMemberPath="Name"
                                         IsEnabled="{Binding CurrentContent.IsEnable}"
                                         Height="300"
                                            >
                                </ListBox>
                            </Border>
                            <Border Style="{StaticResource SoheilCoverBorder}" >
                                <DockPanel>
                                    <Border DockPanel.Dock="Top" Margin="1,1,1,25" Style="{StaticResource SoheilCoverBorder}">
                                        <DockPanel Margin="5">
                                            <TextBlock DockPanel.Dock="Left" Style="{StaticResource EntryBoxHeader}" Text="{Loc txtCostType}" />
                                            <ListBox IsEnabled="{Binding CurrentContent.IsEnable}" Style="{StaticResource RadioListBox}" DockPanel.Dock="Right">
                                                <ListBoxItem Content="{Loc txtCash}"  IsSelected="{Binding Path=CurrentContent.CostType, 
                                                                        Converter={StaticResource ComparisonConverter}, 
                                                                        ConverterParameter= {x:Static Common:CostType.Cash}}"/>
                                                <ListBoxItem Content="{Loc txtStock}" IsSelected="{Binding Path=CurrentContent.CostType, 
                                                                        Converter={StaticResource ComparisonConverter}, 
                                                                        ConverterParameter= {x:Static Common:CostType.Stock}}"/>
                                            </ListBox>
                                            <Canvas/>
                                        </DockPanel>
                                    </Border>
                                    <UniformGrid DockPanel.Dock="Top" Margin="2" Rows="1" Columns="2" >
                                        <TextBlock Style="{StaticResource EntryBoxHeader}" Text="{Loc txtCostSource}" />
                                        <TextBox Margin="2" IsReadOnly="True" Text="{Binding Path=CurrentContent.SelectedCostSource.Name}"></TextBox>
                                    </UniformGrid>
                                    <UniformGrid DockPanel.Dock="Top" Margin="2" Rows="1" Columns="2" 
                                                 Visibility="{Binding Path=CurrentContent.CostType, 
                                                            Converter={StaticResource ComparisonVisibilityConverter},
                                                            ConverterParameter={x:Static Common:CostType.Cash}}">
                                        <TextBlock Style="{StaticResource EntryBoxHeader}" Text="{Loc txtCost}" />
                                        <TextBox Margin="2" Text="{Binding CurrentContent.Value, UpdateSourceTrigger=PropertyChanged}" />
                                    </UniformGrid>
                                    <UniformGrid DockPanel.Dock="Top" Margin="2" Rows="5" Columns="2" 
                                                 Visibility="{Binding Path=CurrentContent.CostType, 
                                                            Converter={StaticResource ComparisonVisibilityConverter},
                                                            ConverterParameter={x:Static Common:CostType.Stock}}">
                                        <TextBlock Style="{StaticResource EntryBoxHeader}" Text="{Loc txtPartWHGroup}" />
                                        <ComboBox Margin="2" DisplayMemberPath="Name" IsEnabled="{Binding CurrentContent.IsEnable}"
                                      ItemsSource="{Binding Path=CurrentContent.Warehouses}"
                                      SelectedValue="{Binding Path=CurrentContent.SelectedWarehouseVM,
                                                              Mode=TwoWay}"
                                      SelectedValuePath="." />
                                        <TextBlock Style="{StaticResource EntryBoxHeader}" Text="{Loc txtCode}" />
                                        <TextBox Margin="2" IsReadOnly="True" Text="{Binding Path=CurrentContent.SelectedWarehouseVM.Code}"/>
                                        <TextBlock Style="{StaticResource EntryBoxHeader}" Text="{Loc txtName}" />
                                        <TextBox Margin="2" IsReadOnly="True" Text="{Binding Path=CurrentContent.SelectedWarehouseVM.Name}"/>
                                        <TextBlock Style="{StaticResource EntryBoxHeader}" Text="{Loc txtQty}" />
                                        <TextBox Margin="2" IsReadOnly="True" Text="{Binding Path=CurrentContent.SelectedWarehouseVM.Quantity}"></TextBox>
                                        <TextBlock Style="{StaticResource EntryBoxHeader}" Text="{Loc txtCurrentQuantity}" />
                                        <TextBox Margin="2" IsReadOnly="{Binding CurrentContent.IsReadOnly}" Text="{Binding CurrentContent.SelectedQuantity, UpdateSourceTrigger=PropertyChanged}" ></TextBox>
                                    </UniformGrid>
                                    <Canvas/>
                                </DockPanel>
                            </Border>
                        </DockPanel>
                    </DockPanel>
                    <ContentControl DockPanel.Dock="Bottom" Template="{StaticResource OperationPanel}" />
                    <Canvas DockPanel.Dock="Bottom" />
                </DockPanel>
            </GroupBox>
        </DataTemplate>
        <DataTemplate x:Key="CostCenterTemplate" DataType="ViewModels:CostCenterVM">
            <GroupBox DataContext="{Binding RelativeSource={RelativeSource AncestorType=Views:SoheilSplitView}, Path=ViewModel}" 
                      Style="{StaticResource SoheilContentGroupBox}" Header="{Binding CurrentContent.Name}">
                <I:Interaction.Behaviors>
                    <Behavior:ValidationExceptionBehavior />
                </I:Interaction.Behaviors>
                <DockPanel FlowDirection="{Loc enumDirection}">
                    <Border DockPanel.Dock="Top" Style="{StaticResource SoheilContentUpperBarBorder}" />
                    <DockPanel DockPanel.Dock="Top">
                        <ContentControl DockPanel.Dock="Top" Template="{StaticResource CodeNameInfoContent}" />
                        <ContentControl DockPanel.Dock="Top" Template="{StaticResource TypeStatusInfoContent}" />
                        <ContentControl DockPanel.Dock="Bottom" Template="{StaticResource UserDateInfoContent}" />
                    </DockPanel>
                    <ContentControl DockPanel.Dock="Bottom" Template="{StaticResource OperationPanel}" />
                    <Canvas DockPanel.Dock="Bottom" />
                </DockPanel>
            </GroupBox>
        </DataTemplate>

        <!-- 2.5.2. Parts  -->
        <DataTemplate x:Key="PartWarehouseTemplate" DataType="ViewModels:PartWarehouseVM">
            <GroupBox DataContext="{Binding RelativeSource={RelativeSource AncestorType=Views:SoheilSplitView}, Path=ViewModel}" 
                      Style="{StaticResource SoheilContentGroupBox}" Header="{Binding CurrentContent.Name}">
                <I:Interaction.Behaviors>
                    <Behavior:ValidationExceptionBehavior />
                </I:Interaction.Behaviors>
                <DockPanel FlowDirection="{Loc enumDirection}">
                    <Border DockPanel.Dock="Top" Style="{StaticResource SoheilContentUpperBarBorder}">
                        <WrapPanel Margin="10"
                                   HorizontalAlignment="Right"
                                   DockPanel.Dock="Bottom">
                        </WrapPanel>
                    </Border>
                    <DockPanel DockPanel.Dock="Top">
                        <ContentControl DockPanel.Dock="Top" Template="{StaticResource CodeNameInfoContent}" />
                        <ContentControl DockPanel.Dock="Top" Template="{StaticResource GroupStatusInfoContent}" />
                        <ContentControl DockPanel.Dock="Top" Template="{StaticResource UserDateInfoContent}" />
                        <ContentControl DockPanel.Dock="Bottom" Template="{StaticResource CostQuantityInfoContent}" />
                    </DockPanel>
                    <ContentControl DockPanel.Dock="Bottom" Template="{StaticResource OperationPanel}" />
                    <Canvas DockPanel.Dock="Bottom" />
                </DockPanel>
            </GroupBox>
        </DataTemplate>
		<DataTemplate x:Key="PartWarehouseGroupTemplate" DataType="ViewModels:PartWarehouseGroupVM">
			<GroupBox DataContext="{Binding RelativeSource={RelativeSource AncestorType=Views:SoheilSplitView}, Path=ViewModel}" 
                      Style="{StaticResource SoheilContentGroupBox}" Header="{Binding CurrentContent.Name}">

                <I:Interaction.Behaviors>
                    <Behavior:ValidationExceptionBehavior />
                </I:Interaction.Behaviors>
                <DockPanel FlowDirection="{Loc enumDirection}">
                    <Border DockPanel.Dock="Top" Style="{StaticResource SoheilContentUpperBarBorder}" />
                    <DockPanel DockPanel.Dock="Top">
                        <ContentControl DockPanel.Dock="Top" Template="{StaticResource CodeNameInfoContent}" />
                        <ContentControl DockPanel.Dock="Top" Template="{StaticResource StatusInfoContent}" />
                        <ContentControl DockPanel.Dock="Bottom" Template="{StaticResource UserDateInfoContent}" />
                    </DockPanel>
                    <ContentControl DockPanel.Dock="Bottom" Template="{StaticResource OperationPanel}" />
                    <Canvas DockPanel.Dock="Bottom" />
                </DockPanel>
            </GroupBox>
        </DataTemplate>

		<!--..........................................................................................................-->

        <!-- Template Selectors -->
        <TemplateSelectors:SplitViewSubContentSelector x:Key="SubContentTemplateSelector"
                                                       UserSubContentTemplate="{StaticResource UsersSubContentPanel}"
                                                       ModuleSubContentPanel="{StaticResource ModulesSubContentPanel}"
                                                       OrganizationCalendarSubContentTemplate="{StaticResource OrganizationCalendarSubContentPanel}"
                                                       
                                                       ProductSubContentTemplate="{StaticResource ProductsSubContentPanel}"
                                                       DefectionSubContentTemplate="{StaticResource DefectionsSubContentPanel}"
                                                       FpcSubContentTemplate="{StaticResource FpcSubContentPanel}"
                                                       OperatorSubContentTemplate="{StaticResource OperatorsSubContentPanel}"
                                                       CostSubContentTemplate="{StaticResource CostsSubContentPanel}"
                                                        />

        <!-- Main GridView and TreeView -->
        <DataTemplate x:Key="DataGridListTemplate">
            <DataGrid x:Name="dataGrid"
                      DataContext="{Binding RelativeSource={RelativeSource AncestorType=Views:SoheilSplitView},
                                            Path=ViewModel}"
                      Controls:DataGridTextSearch.SearchValue="{Binding SearchBox, UpdateSourceTrigger=PropertyChanged}" 
                      FlowDirection="RightToLeft"
                      IsSynchronizedWithCurrentItem="True"
                      SelectionMode="Single"
                      ItemsSource="{Binding RelativeSource={RelativeSource AncestorType=Views:SoheilSplitView},
                                            Path=ViewModel.Items,
                                            UpdateSourceTrigger=PropertyChanged}"
                      SelectedItem="{Binding RelativeSource={RelativeSource AncestorType=Views:SoheilSplitView}, 
                                             Path=ViewModel.CurrentContent,
                                             Mode=TwoWay,
                                             UpdateSourceTrigger=PropertyChanged}"
                      SelectedValue="{Binding RelativeSource={RelativeSource AncestorType=Views:SoheilSplitView},
                                              Path=ViewModel.CurrentContent,
                                              Mode=TwoWay,
                                              UpdateSourceTrigger=PropertyChanged,
                                              NotifyOnTargetUpdated=True}"
                      SelectedIndex="{Binding RelativeSource={RelativeSource AncestorType=Views:SoheilSplitView},
                                              Path=CurrentIndex,
                                              Mode=TwoWay,
                                              UpdateSourceTrigger=PropertyChanged,
                                              NotifyOnTargetUpdated=True}"
                      SelectedValuePath="."
                      TargetUpdated="ContentUpdated"
                      AutoGeneratingColumn="OnAutoGeneratingColumn"
                      AutoGeneratedColumns="OnAutoGeneratedColumns"
                      PreviewKeyDown="GridPreviewKeyDown"
                      PreparingCellForEdit="DataGridOnPreparingCellForEdit"
                      SelectionChanged="DataGrid_OnSelectionChanged"
                      VirtualizingStackPanel.IsVirtualizing="False"
                      ScrollViewer.CanContentScroll="False" 
                      ScrollViewer.VerticalScrollBarVisibility="Auto"
                      ScrollViewer.HorizontalScrollBarVisibility="Auto">
                <DataGrid.RowStyle>
                    <Style TargetType="{x:Type DataGridRow}">
                        <Setter Property="Background" Value="{StaticResource ThemeDarkBrush}" />
                        <Setter Property="SnapsToDevicePixels" Value="true" />
                        <Setter Property="Controls:DataGridTextSearch.IsTextMatch">
                            <Setter.Value>
                                <MultiBinding Converter="{StaticResource SearchValueConverter}">
                                    <Binding RelativeSource="{RelativeSource Self}" Path="Item" />
                                    <Binding RelativeSource="{RelativeSource Self}" Path="(Controls:DataGridTextSearch.SearchValue)" />
                                </MultiBinding>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type DataGridRow}">
                                    <Border x:Name="DGR_Border" Background="{StaticResource ThemeDarkBrush}"
                  BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" SnapsToDevicePixels="True">
                                        <SelectiveScrollingGrid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>

                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="*" />
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="Auto" />
                                            </Grid.RowDefinitions>
                                            <Rectangle x:Name="BackgroundRectangle" Grid.RowSpan="2" Grid.ColumnSpan="2"
                         Fill="{StaticResource ThemeDarkBrush}" Opacity="1" />
                                            <Rectangle x:Name="SelectedRectangle" Grid.RowSpan="2" Grid.ColumnSpan="2"
                         Fill="{StaticResource BackgroundSelected}" Opacity="0" />
                                            <Rectangle x:Name="HoverRectangle" Grid.RowSpan="2" Grid.ColumnSpan="2"
                         Fill="{StaticResource BorderBrushSelected}" Opacity="0" />
                                            <DataGridRowHeader Grid.RowSpan="2"
                                 SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical"
                                 Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}},
                                                                    Path=HeadersVisibility,
                                                                    Converter={x:Static DataGrid.HeadersVisibilityConverter},
                                                                    ConverterParameter={x:Static DataGridHeadersVisibility.Row}}" />
                                            <DataGridCellsPresenter Grid.Column="1" ItemsPanel="{TemplateBinding ItemsPanel}"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                            <DataGridDetailsPresenter x:Name="DetailsPresenter" Grid.Row="1" Grid.Column="1"
                                                                        SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding                                                                                 RelativeSource={RelativeSource AncestorType={x:Type DataGrid}},
                                                                        Path=AreRowDetailsFrozen,
                                                                        Converter={x:Static DataGrid.RowDetailsScrollingConverter},
                                                                        ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}}"
                                                                        Visibility="{TemplateBinding DetailsVisibility}" />
                                            <Rectangle x:Name="BottomGridLine" Grid.Row="2" Grid.Column="1" Height="1"
                                                        HorizontalAlignment="Stretch" />
                                        </SelectiveScrollingGrid>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="Controls:DataGridTextSearch.IsTextMatch" Value="False">
                                            <Setter Property="Visibility" Value="Collapsed"></Setter>
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Trigger.EnterActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000"
                                                        Storyboard.TargetName="HoverRectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1" />
                                                        </DoubleAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </Trigger.EnterActions>
                                            <Trigger.ExitActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000"
                                                   Storyboard.TargetName="HoverRectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                                                        </DoubleAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </Trigger.ExitActions>
                                        </Trigger>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Trigger.EnterActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000"
                                                   Storyboard.TargetName="SelectedRectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1" />
                                                        </DoubleAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </Trigger.EnterActions>
                                            <Trigger.ExitActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000"
                                                   Storyboard.TargetName="SelectedRectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                                                        </DoubleAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </Trigger.ExitActions>
                                            <!--  <Setter Property="DetailsVisibility" Value="Visible" />  -->
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </DataGrid.RowStyle>
                <DataGrid.Resources>
                    <Common:BindingProxy x:Key="Proxy" Data="{Binding}" />
                </DataGrid.Resources>
                <DataGrid.GroupStyle>
                    <GroupStyle>
                        <GroupStyle.ContainerStyle>
                            <Style TargetType="{x:Type GroupItem}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type GroupItem}">
                                            <Expander>
                                                <Expander.IsExpanded>
                                                    <Binding RelativeSource="{RelativeSource AncestorType=GroupItem}"
                                                             Converter="{StaticResource ItemExpandedConverter}" Mode="OneWay">
                                                        <Binding.Path>Content.Items</Binding.Path>
                                                    </Binding>
                                                </Expander.IsExpanded>
                                                <Expander.Header>
                                                    <StackPanel Orientation="Horizontal">
                                                        <Button Command="{Binding RelativeSource={RelativeSource AncestorType=Views:SoheilSplitView},
                                                                                  Path=ViewModel.ViewCommand}">
                                                            <Image Source="/Soheil.Controls;component/Images/selectGroup.png" Width="16"/>
                                                            <Button.CommandParameter>
                                                                <Binding RelativeSource="{RelativeSource AncestorType=GroupItem}">
                                                                    <Binding.Path>Content.Items[0].SelectedGroupVM</Binding.Path>
                                                                </Binding>
                                                            </Button.CommandParameter>
                                                        </Button>
                                                        <TextBlock VerticalAlignment="Center">
                                                            <TextBlock.Text>
                                                                <Binding RelativeSource="{RelativeSource AncestorType=GroupItem}">
                                                                    <Binding.Path>Content.Items[0].SelectedGroupVM.Name</Binding.Path>
                                                                </Binding>
                                                            </TextBlock.Text>
                                                        </TextBlock>
                                                    </StackPanel>
                                                </Expander.Header>
                                                <StackPanel>
                                                    <ItemsPresenter />
                                                    <Button Command="{Binding RelativeSource={RelativeSource AncestorType=Views:SoheilSplitView},
                                                                              Path=ViewModel.AddCommand}"
                                                            
                                                            Content="+">
                                                        <Button.CommandParameter>
                                                            <Binding RelativeSource="{RelativeSource AncestorType=GroupItem}">
                                                                <Binding.Path>Content.Items[0].SelectedGroupVM.Id</Binding.Path>
                                                            </Binding>
                                                        </Button.CommandParameter>
                                                    </Button>
                                                </StackPanel>
                                            </Expander>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </GroupStyle.ContainerStyle>
                    </GroupStyle>
                </DataGrid.GroupStyle>
            </DataGrid>
        </DataTemplate>
        <DataTemplate x:Key="TreeViewListTemplate">
            <TreeView FlowDirection="{Loc enumDirection}">
                <TreeView.ItemsSource>
                    <Binding RelativeSource="{RelativeSource AncestorType=Views:SoheilSplitView}"
                             UpdateSourceTrigger="PropertyChanged">
                        <Binding.Path>ViewModel.RootNode.ChildNodes</Binding.Path>
                    </Binding>
                </TreeView.ItemsSource>
                <I:Interaction.Behaviors>
                    <ControlBehaviors:BindableSelectedItemBehavior SelectedItem="{Binding RelativeSource={RelativeSource AncestorType=Views:SoheilSplitView}, Path=ViewModel.CurrentContent, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                </I:Interaction.Behaviors>
                <TreeView.Resources>
                    <ResourceDictionary>
                        <HierarchicalDataTemplate DataType="{x:Type Base:NodeContentViewModel}" ItemsSource="{Binding ChildNodes}">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="{Binding Title}" />
                                <Button Content="+" 
                                        Command="{Binding RelativeSource={RelativeSource AncestorType=Views:SoheilSplitView}, Path=ViewModel.AddCommand}"
                                        />
                            </StackPanel>
                        </HierarchicalDataTemplate>
                    </ResourceDictionary>
                </TreeView.Resources>
            </TreeView>
        </DataTemplate>
        <TemplateSelectors:SplitViewListSelector x:Key="ListTemplateSelector"
                                                 DataGridListTemplate="{StaticResource DataGridListTemplate}"
                                                 TreeViewListTemplate="{StaticResource TreeViewListTemplate}" />
        <TemplateSelectors:SplitViewLinkSelector x:Key="LinkTemplateSelector"
                                                 AccessRuleUsersTemplate="{StaticResource AccessRuleUsersTemplate}"
                                                 AccessRulePositionsTemplate="{StaticResource AccessRulePositionsTemplate}"
                                                 UserPositionsTemplate="{StaticResource UserPositionsTemplate}"
                                                 UserAccessRulesTemplate="{StaticResource UserAccessRulesTemplate}"
                                                 ProductDefectionsTemplate="{StaticResource ProductDefectionsTemplate}"
                                                 DefectionProductsTemplate="{StaticResource DefectionProductsTemplate}"
                                                 StationMachinesTemplate="{StaticResource StationMachinesTemplate}"
                                                 MachineStationsTemplate="{StaticResource MachineStationsTemplate}"
                                                 PositionUsersTemplate="{StaticResource PositionUsersTemplate}"
                                                 PositionOrganizationChartsTemplate="{StaticResource PositionOrganizationChartsTemplate}"
                                                 PositionAccessRulesTemplate="{StaticResource PositionAccessRulesTemplate}"
                                                 OrganizationChartPositionsTemplate="{StaticResource OrganizationChartPositionsTemplate}" 
                                                 OperatorActivitiesTemplate="{StaticResource OperatorActivitiesTemplate}"
                                                 ActivityOperatorsTemplate="{StaticResource ActivityOperatorsTemplate}"
                                                 ProductReworksTemplate="{StaticResource ProductReworksTemplate}"
                                                 ReworkProductsTemplate="{StaticResource ReworkProductsTemplate}"
                                                 ActionPlanFishboneNodesTemplate="{StaticResource ActionPlanFishboneNodesTemplate}"
                                                 FishboneNodeActionPlansTemplate="{StaticResource FishboneNodeActionPlansTemplate}"
                                                 />
    </UserControl.Resources>
    <Grid>
        <DockPanel x:Name="_container">
            <DockPanel>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="0" />
                        <ColumnDefinition Width="auto" />
                        <ColumnDefinition Width="2*" />
                        <ColumnDefinition Width="auto" />
                        <ColumnDefinition Width="1*" />
                    </Grid.ColumnDefinitions>
                    <Border Grid.Column="0" Background="Transparent" />
                    <!--  Item Content Viewer  -->
                    <Border Grid.Column="2"
                            Height="{Binding RelativeSource={RelativeSource AncestorType=DockPanel},
                                             Path=ActualHeight}"
                            HorizontalAlignment="Stretch"
                            BorderThickness="0">
                        <Border BorderBrush="{StaticResource ThemeDarkBrush}" BorderThickness="1">
                            <StackPanel>
                                <ContentControl x:Name="_itemContentView" Content="{Binding RelativeSource={RelativeSource                                                                      AncestorType=Views:SoheilSplitView}, Path=ViewModel.CurrentContent, Mode=TwoWay }"
                                                Visibility="{Binding RelativeSource={RelativeSource AncestorType=Views:SoheilSplitView},                                                        Path=ViewModel.CurrentContent.MainContentVisibility, UpdateSourceTrigger=PropertyChanged,                                                       NotifyOnSourceUpdated=True }"
                                                />
                                <ContentControl x:Name="_itemContentViewLinks" Content="{Binding RelativeSource={RelativeSource                                                                 AncestorType=Views:SoheilSplitView}, Path=ViewModel.CurrentContent.CurrentLink,                                                                 NotifyOnTargetUpdated=True}"
                                                ContentTemplateSelector="{StaticResource LinkTemplateSelector}">
                                </ContentControl>
                                <Canvas></Canvas>
                            </StackPanel>
                        </Border>
                    </Border>
                    <GridSplitter Grid.Column="3"
                                  Width="3"
                                  HorizontalAlignment="Stretch"
                                  VerticalAlignment="Stretch"
                                  Background="{StaticResource DefaultSelectionBrush}" />
                    <!--  Items List Viewer  -->
                    <Border Name="_itemsListView"
                            Grid.Column="4"
                            CornerRadius="0,7,7,0"
                            FlowDirection="RightToLeft">
                        <Border.Effect>
                            <DropShadowEffect Direction="320" ShadowDepth="2" />
                        </Border.Effect>
                        <Border Background="{DynamicResource DarkBackGroundBrush}" CornerRadius="0,5,5,0">
                            <DockPanel 
                                DataContext="{Binding RelativeSource={RelativeSource AncestorType=Views:SoheilSplitView}, Path=ViewModel}">
                                <ContentControl DockPanel.Dock="Top" x:Name="_subContentPanel"
                                                        Height="30"
                                                        Margin="2"
                                                        ContentTemplateSelector="{StaticResource SubContentTemplateSelector}" />
                                <Border DockPanel.Dock="Bottom" Height="30" Style="{StaticResource SoheilCoverBorder}">
                                    <DockPanel>
                                        <WrapPanel DockPanel.Dock="Left" VerticalAlignment="Center">
                                            <Button Margin="2" Command="{Binding RelativeSource={RelativeSource
                                                AncestorType=Views:SoheilSplitView}, Path=ViewModel.AddGroupCommand}"
                                                    ToolTip="{Loc txtNew}">
                                                <Image Source="/Soheil.Controls;component/Images/add.png"/>
                                            </Button>
                                            <Button Margin="2" Command="{Binding RelativeSource={RelativeSource
                                                AncestorType=Views:SoheilSplitView}, Path=ViewModel.RefreshCommand}" 
                                                    ToolTip="{Loc txtRefresh}">
                                                <Image Source="/Soheil.Controls;component/Images/reload.png"/>
                                            </Button>
                                            <!--<Button Margin="2" Content="..." />-->
                                        </WrapPanel>
                                        <WrapPanel DockPanel.Dock="Right">
                                            <!--<TextBlock Margin="2" VerticalAlignment="Center" Text="{Loc txtSearch}" Style="{StaticResource  
                                                EntryBoxHeader}"/>-->
                                            <Border BorderThickness="1" BorderBrush="{StaticResource ThemeDarkBrush}" Width="18" Height="18" Margin="0" VerticalAlignment="Center">
                                                <Image Source="/Soheil.Controls;component/Images/search.png"/>
                                            </Border>
                                            <TextBox Margin="2" Width="75" Text="{Binding SearchBox, UpdateSourceTrigger=PropertyChanged}" ToolTip="{Loc txtSearch}"/>
                                        </WrapPanel>
                                        <Canvas/>
                                    </DockPanel>
                                </Border>
                                <Border DockPanel.Dock="Top" Style="{StaticResource SoheilCoverBorder}">
                                    <Grid>
                                            <ContentControl VerticalAlignment="Top" x:Name="_listPanel" ContentTemplateSelector="{StaticResource ListTemplateSelector}" />
                                    <!--<Button FlowDirection="RightToLeft" VerticalAlignment="Bottom" Grid.Row="1" Width="{Binding ElementName=_itemsListView,
                                                                Path=ActualWidth}"
                                                Command="{Binding RelativeSource={RelativeSource AncestorType=Views:SoheilSplitView},
                                                                    Path=ViewModel.AddGroupCommand}"
                                                Style="{StaticResource ExpanderButton}" />-->
                                    <!--<Canvas Grid.Row="2"/>-->
                                        </Grid>
                                </Border>
                            </DockPanel>
                        </Border>
                    </Border>
                </Grid>
            </DockPanel>
        </DockPanel>
    </Grid>
</UserControl>