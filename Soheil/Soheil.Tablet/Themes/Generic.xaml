<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:Soheil.Tablet">


    <!--<Style TargetType="{x:Type local:TimeBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CustomControls:TimeBox}">
                    <ControlTemplate.Resources>
                        <Style x:Key="TimeComponents" TargetType="{x:Type TextBox}">
                            <Setter Property="SnapsToDevicePixels" Value="True" />
                            <Setter Property="OverridesDefaultStyle" Value="True" />
                            <Setter Property="MinWidth" Value="30"/>
                            <Setter Property="Height" Value="25"/>
                            <Setter Property="VerticalAlignment" Value="Center"/>
                            <Setter Property="TextAlignment" Value="Center"/>
                            <Setter Property="Foreground" Value="White"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type TextBox}">
                                        <Border Name="Border" CornerRadius="2" Padding="2,0" BorderThickness="1" Margin="0,1" TextBlock.FontSize="12">
                                            <ScrollViewer Margin="0" x:Name="PART_ContentHost"/>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsReadOnly" Value="True">
                                                <Setter Property="Foreground">
                                                    <Setter.Value>
                                                        <SolidColorBrush Color="Gray"/>
                                                    </Setter.Value>
                                                </Setter>
                                            </Trigger>
                                            <Trigger Property="IsFocused" Value="True">
                                                <Setter Property="Foreground">
                                                    <Setter.Value>
                                                        <SolidColorBrush Color="Black"/>
                                                    </Setter.Value>
                                                </Setter>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ControlTemplate.Resources>
                    <Grid FlowDirection="LeftToRight" ContextMenuService.Placement="Bottom" x:Name="grid">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <TextBox Text="{Binding Hour, RelativeSource={RelativeSource AncestorType={x:Type CustomControls:TimeBox}}, StringFormat=D2}" 
								 IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource AncestorType={x:Type CustomControls:TimeBox}}}" 
								 Style="{StaticResource TimeComponents}" FlowDirection="{TemplateBinding FlowDirection}"/>
                        <TextBlock Text=":" VerticalAlignment="Center" Grid.Column="1"/>
                        <TextBox Text="{Binding Minute, RelativeSource={RelativeSource AncestorType={x:Type CustomControls:TimeBox}}, StringFormat=D2}" 
								 IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource AncestorType={x:Type CustomControls:TimeBox}}}"
								 Style="{StaticResource TimeComponents}" FlowDirection="{TemplateBinding FlowDirection}" Grid.Column="2"/>
                        <TextBlock Text=":" VerticalAlignment="Center" Grid.Column="3"/>
                        <TextBox Text="{Binding Second, RelativeSource={RelativeSource AncestorType={x:Type CustomControls:TimeBox}}, StringFormat=D2}" 
								 IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource AncestorType={x:Type CustomControls:TimeBox}}}" 
								 Style="{StaticResource TimeComponents}" FlowDirection="{TemplateBinding FlowDirection}" Grid.Column="4"/>
                        <Popup FlowDirection="LeftToRight" IsEnabled="{Binding Path=IsReadOnly, RelativeSource={RelativeSource AncestorType={x:Type CustomControls:TimeBox}}, Converter={StaticResource inverter}}" x:Name="contextMenu" Placement="Center" PlacementTarget="{Binding ElementName=grid}">
                            <StackPanel>
                                <StackPanel.Resources>
                                    <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource {x:Type MenuItem}}">
                                        <Setter Property="Margin" Value="0,-5"/>
                                        <Setter Property="Height" Value="30"/>
                                        <Setter Property="VerticalAlignment" Value="Center"/>
                                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                                    </Style>
                                </StackPanel.Resources>
                                <MenuItem Header="Now" Command="{Binding SetTimeCommand, RelativeSource={RelativeSource AncestorType={x:Type CustomControls:TimeBox}}}"
										  CommandParameter="{x:Static Common:TimeBoxParameter.Now}">
                                    <MenuItem.Icon>
                                        <Image Style="{StaticResource NowImage}"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="{Loc PPE_StartOfHour}" Command="{Binding SetTimeCommand, RelativeSource={RelativeSource AncestorType={x:Type CustomControls:TimeBox}}}"
										  CommandParameter="{x:Static Common:TimeBoxParameter.StartOfHour}">
                                    <MenuItem.Icon>
                                        <Image Style="{StaticResource TimeStartOfHour}"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="{Loc PPE_NextHour}" Command="{Binding SetTimeCommand, RelativeSource={RelativeSource AncestorType={x:Type CustomControls:TimeBox}}}"
										  CommandParameter="{x:Static Common:TimeBoxParameter.NextHour}">
                                    <MenuItem.Icon>
                                        <Image Style="{StaticResource TimeNextHour}"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="{Loc PPE_PreviousHour}" Command="{Binding SetTimeCommand, RelativeSource={RelativeSource AncestorType={x:Type CustomControls:TimeBox}}}"
										  CommandParameter="{x:Static Common:TimeBoxParameter.PreviousHour}">
                                    <MenuItem.Icon>
                                        <Image Style="{StaticResource TimePreviousHour}"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="+30 Minutes" Command="{Binding SetTimeCommand, RelativeSource={RelativeSource AncestorType={x:Type CustomControls:TimeBox}}}"
										  CommandParameter="{x:Static Common:TimeBoxParameter.AddHalfHour}">
                                    <MenuItem.Icon>
                                        <Image Style="{StaticResource TimeAddHalfHour}"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="+5 Minutes" Command="{Binding SetTimeCommand, RelativeSource={RelativeSource AncestorType={x:Type CustomControls:TimeBox}}}"
										  CommandParameter="{x:Static Common:TimeBoxParameter.Add5Minutes}">
                                    <MenuItem.Icon>
                                        <Image Style="{StaticResource TimeAdd5Minutes}"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="+1 Minute" Command="{Binding SetTimeCommand, RelativeSource={RelativeSource AncestorType={x:Type CustomControls:TimeBox}}}"
										  CommandParameter="{x:Static Common:TimeBoxParameter.Add1Minute}">
                                    <MenuItem.Icon>
                                        <Image Style="{StaticResource TimeNextHour}"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                            </StackPanel>
                        </Popup>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard Duration="0:0:0.2">
                                    <BooleanAnimationUsingKeyFrames Storyboard.TargetName="contextMenu" Storyboard.TargetProperty="IsOpen" Duration="0:0:0.2" FillBehavior="HoldEnd">
                                        <DiscreteBooleanKeyFrame Value="True" KeyTime="0:0:0.2" />
                                    </BooleanAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard Duration="0:0:0.2">
                                    <BooleanAnimationUsingKeyFrames Storyboard.TargetName="contextMenu" Storyboard.TargetProperty="IsOpen" Duration="0:0:0.2" FillBehavior="HoldEnd">
                                        <DiscreteBooleanKeyFrame Value="False" KeyTime="0:0:0.2" />
                                    </BooleanAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>-->
</ResourceDictionary>
