<UserControl x:Class="Soheil.Tablet.DurationBox"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
     		xmlns:cc="clr-namespace:Soheil.Tablet"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
    <UserControl.Resources>
        <cc:Inverter x:Key="inverter"/>
        <Style x:Key="TimeComponents" TargetType="{x:Type TextBox}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="KeyboardNavigation.TabNavigation" Value="Cycle"/>
            <Setter Property="MinWidth" Value="22"/>
            <Setter Property="Height" Value="22"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="TextAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border Name="Border" CornerRadius="2" Padding="2,0" BorderThickness="1" Margin="0,1" TextBlock.FontSize="12">
                            <Border.Background>
                                <SolidColorBrush Color="#4088"/>
                            </Border.Background>
                            <Border.BorderBrush>
                                <SolidColorBrush Color="#8088"/>
                            </Border.BorderBrush>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames 
														Storyboard.TargetName="Border"
														Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0" Value="Transparent"/>
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames 
														Storyboard.TargetName="Border"
														Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0" Value="Transparent"/>
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="ReadOnly">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames 
														Storyboard.TargetName="Border"
														Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0" Value="Transparent" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames 
														Storyboard.TargetName="Border"
														Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0" Value="Transparent" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames 
														Storyboard.TargetName="Border"
														Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0" Value="#88FF"/>
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Focused">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames 
														Storyboard.TargetName="Border"
														Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0" Value="#C8FF"/>
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ScrollViewer Margin="0" x:Name="PART_ContentHost"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsReadOnly" Value="True">
                                <Setter Property="Foreground">
                                    <Setter.Value>
                                        <SolidColorBrush Color="Gray"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="Foreground">
                                    <Setter.Value>
                                        <SolidColorBrush Color="Black"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <Grid FlowDirection="LeftToRight" ContextMenuService.Placement="Bottom" x:Name="grid">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="50"/>
        </Grid.ColumnDefinitions>
        <TextBox Text="{Binding Hour, RelativeSource={RelativeSource AncestorType={x:Type cc:DurationBox}}, StringFormat=D2}" 
								 IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource AncestorType={x:Type cc:DurationBox}}}" 
								 Style="{StaticResource TimeComponents}" FlowDirection="LeftToRight"/>
        <TextBlock Text=":" VerticalAlignment="Center" Grid.Column="1"/>
        <TextBox Text="{Binding Minute, RelativeSource={RelativeSource AncestorType={x:Type cc:DurationBox}}, StringFormat=D2}" 
								 IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource AncestorType={x:Type cc:DurationBox}}}"
								 Style="{StaticResource TimeComponents}" FlowDirection="LeftToRight" Grid.Column="2"/>
        <TextBlock Text=":" VerticalAlignment="Center" Grid.Column="3"/>
        <TextBox Text="{Binding Second, RelativeSource={RelativeSource AncestorType={x:Type cc:DurationBox}}, StringFormat=D2}" 
								 IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource AncestorType={x:Type cc:DurationBox}}}" 
								 Style="{StaticResource TimeComponents}" FlowDirection="LeftToRight" Grid.Column="4"/>
        <ToggleButton IsChecked="{Binding ElementName=contextMenu, Path=IsOpen}" Content="..." Grid.Column="5" x:Name="asb"/>
        <Popup FlowDirection="LeftToRight" IsEnabled="{Binding Path=IsReadOnly, RelativeSource={RelativeSource AncestorType={x:Type cc:DurationBox}}, Converter={StaticResource inverter}}" x:Name="contextMenu" Placement="Bottom" PlacementTarget="{Binding ElementName=asb}">
            <StackPanel>
                <StackPanel.Resources>
                    <Style TargetType="{x:Type MenuItem}">
                        <Setter Property="Background" Value="White"/>
                        <Setter Property="Foreground" Value="Black"/>
                        <Setter Property="Margin" Value="0"/>
                        <Setter Property="Height" Value="50"/>
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                    </Style>
                </StackPanel.Resources>

                <MenuItem Header="Until work break" Command="{Binding SetDurationMinutesCommand, RelativeSource={RelativeSource AncestorType={x:Type cc:DurationBox}}}">
                    <MenuItem.CommandParameter>
                        <sys:Int32>0</sys:Int32>
                    </MenuItem.CommandParameter>
                </MenuItem>
                <MenuItem Header="15 Minutes" Command="{Binding SetDurationMinutesCommand, RelativeSource={RelativeSource AncestorType={x:Type cc:DurationBox}}}">
                    <MenuItem.CommandParameter>
                        <sys:Int32>15</sys:Int32>
                    </MenuItem.CommandParameter>
                </MenuItem>
                <MenuItem Header="30 Minutes" Command="{Binding SetDurationMinutesCommand, RelativeSource={RelativeSource AncestorType={x:Type cc:DurationBox}}}">
                    <MenuItem.CommandParameter>
                        <sys:Int32>30</sys:Int32>
                    </MenuItem.CommandParameter>
                </MenuItem>
                <MenuItem Header="45 Minutes" Command="{Binding SetDurationMinutesCommand, RelativeSource={RelativeSource AncestorType={x:Type cc:DurationBox}}}">
                    <MenuItem.CommandParameter>
                        <sys:Int32>45</sys:Int32>
                    </MenuItem.CommandParameter>
                </MenuItem>
                <MenuItem Header="1 Hour" Command="{Binding SetDurationMinutesCommand, RelativeSource={RelativeSource AncestorType={x:Type cc:DurationBox}}}">
                    <MenuItem.CommandParameter>
                        <sys:Int32>60</sys:Int32>
                    </MenuItem.CommandParameter>
                </MenuItem>
                <MenuItem Header="2 Hours" Command="{Binding SetDurationMinutesCommand, RelativeSource={RelativeSource AncestorType={x:Type cc:DurationBox}}}">
                    <MenuItem.CommandParameter>
                        <sys:Int32>120</sys:Int32>
                    </MenuItem.CommandParameter>
                </MenuItem>
            </StackPanel>
        </Popup>
    </Grid>

</UserControl>
