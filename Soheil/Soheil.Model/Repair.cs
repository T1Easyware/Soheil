//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace Soheil.Model
{
    public partial class Repair
    {
        #region Primitive Properties
    
        public virtual int Id
        {
            get;
            set;
        }
    
        public virtual System.DateTime CreatedDate
        {
            get;
            set;
        }
    
        public virtual int ModifiedBy
        {
            get { return _modifiedBy; }
            set { _modifiedBy = value; }
        }
        private int _modifiedBy = 0;
    
        public virtual System.DateTime AcquiredDate
        {
            get;
            set;
        }
    
        public virtual System.DateTime DeliveredDate
        {
            get;
            set;
        }
    
        public virtual byte RepairStatus
        {
            get { return _repairStatus; }
            set { _repairStatus = value; }
        }
        private byte _repairStatus = 0;
    
        public virtual string Description
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
    
        public virtual StoppageReport StoppageReport
        {
            get { return _stoppageReport; }
            set
            {
                if (!ReferenceEquals(_stoppageReport, value))
                {
                    var previousValue = _stoppageReport;
                    _stoppageReport = value;
                    FixupStoppageReport(previousValue);
                }
            }
        }
        private StoppageReport _stoppageReport;
    
        public virtual MachinePart MachinePart
        {
            get { return _machinePart; }
            set
            {
                if (!ReferenceEquals(_machinePart, value))
                {
                    var previousValue = _machinePart;
                    _machinePart = value;
                    FixupMachinePart(previousValue);
                }
            }
        }
        private MachinePart _machinePart;

        #endregion

        #region Association Fixup
    
        private void FixupStoppageReport(StoppageReport previousValue)
        {
            if (previousValue != null && previousValue.Repairs.Contains(this))
            {
                previousValue.Repairs.Remove(this);
            }
    
            if (StoppageReport != null)
            {
                if (!StoppageReport.Repairs.Contains(this))
                {
                    StoppageReport.Repairs.Add(this);
                }
            }
        }
    
        private void FixupMachinePart(MachinePart previousValue)
        {
            if (previousValue != null && previousValue.Repairs.Contains(this))
            {
                previousValue.Repairs.Remove(this);
            }
    
            if (MachinePart != null)
            {
                if (!MachinePart.Repairs.Contains(this))
                {
                    MachinePart.Repairs.Add(this);
                }
            }
        }

        #endregion

    }
}
