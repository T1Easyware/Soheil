<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Converters="clr-namespace:Soheil.Controls.Converters"
                    xmlns:CustomControls="clr-namespace:Soheil.Controls.CustomControls" 
                    xmlns:Sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:ColorPicker="clr-namespace:Soheil.Controls.CustomControls.ColorPicker">
    <ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="Brushes.xaml" />
		<ResourceDictionary>
            <Converters:MarginConverter x:Key="MarginConverter" />
            <Converters:MultiSizeSubtractConverter x:Key="SizeConverter" />
            <Converters:DebugConverter x:Key="debugc" />
        </ResourceDictionary>
        <ResourceDictionary>
            <Thickness x:Key="contentMargin">0.1,0.05,0.01,0.05</Thickness>
            <Thickness x:Key="listMargin">0,0,20,0</Thickness>
            <Thickness x:Key="dualMargin">0,0,5,0</Thickness>
            <Thickness x:Key="detailMargin">10,10,10,10</Thickness>
            <Thickness x:Key="barMargin">2,2,2,2</Thickness>
            <Sys:Double x:Key="leftSideGap">160</Sys:Double>
            <Sys:Double x:Key="noGap">10</Sys:Double>
            <Sys:Double x:Key="listWidth">140</Sys:Double>
            <Sys:Double x:Key="halfWidth">65</Sys:Double>
            <Sys:Double x:Key="detailGap">10</Sys:Double>
            <Sys:Double x:Key="barHeight">50</Sys:Double>
            <Sys:Double x:Key="IdxBtnNormalWidth">10</Sys:Double>
            <Sys:Double x:Key="IdxBtnWideWidth">50</Sys:Double>
            <Sys:Double x:Key="IdxBtnNormalHeight">20</Sys:Double>
            <Sys:Double x:Key="IdxBtnWideHeight">20</Sys:Double>
            <Sys:Double x:Key="contentHeight">600</Sys:Double>
            <FlowDirection x:Key="flowDirection">RightToLeft</FlowDirection>
        </ResourceDictionary>
    </ResourceDictionary.MergedDictionaries>

    <!--  Soheil Button  -->
    <Style x:Key="SoheilButton" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Canvas x:Name="Document"
                            Width="56.64"
                            Height="12.5634"
                            Clip="F1 M 0,0L 56.64,0L 56.64,12.5634L 0,12.5634L 0,0">
                        <Canvas x:Name="Layer_2"
                                Canvas.Left="0"
                                Canvas.Top="0"
                                Width="799.916"
                                Height="600.144">
                            <Viewbox x:Name="Group"
                                     Canvas.Left="12.312"
                                     Canvas.Top="0.951691"
                                     Width="11.6117"
                                     Height="11.6117">
                                <Canvas Width="11.6117" Height="11.6117">
                                    <Ellipse x:Name="Ellipse"
                                             Canvas.Left="0"
                                             Canvas.Top="0"
                                             Width="11.6117"
                                             Height="11.6117"
                                             Fill="{StaticResource DefaultSelectionBrush}"
                                             Stretch="Fill" />
                                    <Path x:Name="Path"
                                          Canvas.Left="1.88891"
                                          Canvas.Top="1.569"
                                          Width="7.64288"
                                          Height="5.41617"
                                          Data="F1 M 5.71035,1.569C 7.82088,1.569 9.53179,2.78143 9.53179,4.2771C 9.53179,5.77274 7.82087,6.98517 5.71035,6.98517C 3.59983,6.98517 1.88891,5.77274 1.88891,4.2771C 1.88891,2.78143 3.59982,1.569 5.71035,1.569 Z "
                                          Fill="{StaticResource PressedSelectionBrush}"
                                          Stretch="Fill" />
                                    <Path x:Name="Path_0"
                                          Canvas.Left="0.621651"
                                          Canvas.Top="1.72794"
                                          Width="2.2068"
                                          Height="4.41691"
                                          Data="F1 M 0.636238,5.61694C 0.507011,4.79178 1.23627,2.36591 2.82845,1.72794C 1.66306,2.51819 1.01007,4.22476 1.03729,5.45071C 1.14326,6.23334 0.765472,6.44208 0.636238,5.61694 Z "
                                          Stretch="Fill">
                                        <Path.Fill>
                                            <LinearGradientBrush StartPoint="0.0156232,0.932252" EndPoint="1.40453,0.932252">
                                                <LinearGradientBrush.RelativeTransform>
                                                    <TransformGroup>
                                                        <SkewTransform AngleX="31.8118" AngleY="0" CenterX="0.0156232" CenterY="0.932252" />
                                                        <RotateTransform Angle="-43.402" CenterX="0.0156232" CenterY="0.932252" />
                                                    </TransformGroup>
                                                </LinearGradientBrush.RelativeTransform>
                                                <LinearGradientBrush.GradientStops>
                                                    <GradientStop Offset="0" Color="#40FFFFFF" />
                                                    <GradientStop Offset="0.182652" Color="#80FFFFFF" />
                                                    <GradientStop Offset="0.35814" Color="#BFFFFFFF" />
                                                    <GradientStop Offset="1" Color="#40FFFFFF" />
                                                </LinearGradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                        </Path.Fill>
                                    </Path>
                                    <Path x:Name="Path_1"
                                          Canvas.Left="8.08957"
                                          Canvas.Top="5.87335"
                                          Width="2.84753"
                                          Height="4.09964"
                                          Data="F1 M 8.68896,9.87512C 9.46867,9.57574 11.1842,7.6698 10.9071,5.87335C 10.8308,7.35236 9.69671,8.82266 8.62396,9.41983C 7.89306,9.71912 7.90923,10.1745 8.68896,9.87512 Z "
                                          Stretch="Fill">
                                        <Path.Fill>
                                            <LinearGradientBrush StartPoint="0.137522,0.999955" EndPoint="1.48248,0.999955">
                                                <LinearGradientBrush.RelativeTransform>
                                                    <TransformGroup>
                                                        <SkewTransform AngleX="15.3492" AngleY="0" CenterX="0.137522" CenterY="0.999955" />
                                                        <RotateTransform Angle="-49.6071" CenterX="0.137522" CenterY="0.999955" />
                                                    </TransformGroup>
                                                </LinearGradientBrush.RelativeTransform>
                                                <LinearGradientBrush.GradientStops>
                                                    <GradientStop Offset="0" Color="#00FFFFFF" />
                                                    <GradientStop Offset="0.109032" Color="#80FFFFFF" />
                                                    <GradientStop Offset="0.260465" Color="#FFFFFFFF" />
                                                    <GradientStop Offset="0.995349" Color="#3EFFFFFF" />
                                                </LinearGradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                        </Path.Fill>
                                    </Path>
                                </Canvas>
                            </Viewbox>
                            <Viewbox x:Name="Group_2"
                                     Canvas.Left="0"
                                     Canvas.Top="3.05176e-005"
                                     Width="56.64"
                                     Height="12.48">
                                <Canvas Width="56.64" Height="12.48">
                                    <Path x:Name="Path_3"
                                          Canvas.Left="0"
                                          Canvas.Top="0.799988"
                                          Width="9.44"
                                          Height="11.68"
                                          Data="F1 M 4.77501,12.48C 4.08834,12.48 3.44833,12.3929 2.855,12.2188C 2.26167,12.0446 1.75917,11.8425 1.3475,11.6125L 0.800003,12.16L 0.160004,12.16L 0,8.15997L 0.640007,8.15997C 0.796677,8.53998 0.996262,8.94122 1.23875,9.36371C 1.48125,9.78625 1.76167,10.165 2.08,10.5C 2.40834,10.8483 2.77584,11.1321 3.18251,11.3512C 3.58917,11.5704 4.06417,11.68 4.60751,11.68C 5.34084,11.68 5.90292,11.5033 6.29375,11.15C 6.68459,10.7967 6.88,10.3516 6.88,9.81497C 6.88,9.375 6.71625,9.005 6.38876,8.70499C 6.06125,8.40497 5.55417,8.14664 4.86751,7.92999C 4.41917,7.78665 4.00708,7.65417 3.63126,7.5325C 3.25542,7.4108 2.9025,7.28665 2.5725,7.15997C 1.81084,6.86664 1.24501,6.4483 0.875,5.90497C 0.505005,5.36163 0.32,4.75333 0.32,4.07999C 0.32,3.65332 0.416252,3.24371 0.608757,2.85123C 0.801254,2.45874 1.08167,2.10583 1.45,1.79248C 1.80334,1.50079 2.255,1.26248 2.80501,1.07745C 3.355,0.892487 3.95334,0.799988 4.60001,0.799988C 5.23167,0.799988 5.8225,0.888336 6.3725,1.06497C 6.92251,1.24164 7.355,1.4158 7.67001,1.58746L 8.16,1.12L 8.8,1.12L 8.8,4.95999L 8.16,4.95999C 8.00167,4.54666 7.815,4.12332 7.60001,3.68997C 7.385,3.25665 7.15834,2.89664 6.92001,2.60999C 6.66,2.30334 6.36043,2.05829 6.02126,1.875C 5.68209,1.69165 5.28417,1.59998 4.82751,1.59998C 4.25584,1.59998 3.78833,1.75787 3.425,2.07373C 3.06167,2.38956 2.88,2.78082 2.88,3.24747C 2.88,3.6875 3.03667,4.04749 3.35001,4.32745C 3.66333,4.60748 4.1525,4.8533 4.8175,5.06497C 5.2075,5.19498 5.60583,5.32538 6.0125,5.45624C 6.41917,5.58707 6.78084,5.71246 7.0975,5.83246C 7.8625,6.12415 8.44418,6.52664 8.8425,7.03998C 9.24084,7.55334 9.44,8.18997 9.44,8.94998C 9.44,9.42834 9.32668,9.89163 9.10001,10.34C 8.87334,10.7883 8.56667,11.1608 8.18001,11.4575C 7.75833,11.7858 7.27042,12.0383 6.71625,12.215C 6.16209,12.3916 5.51501,12.48 4.77501,12.48 Z "
                                          Fill="{DynamicResource DarkTextBrush}"
                                          Stretch="Fill" />
                                    <Path x:Name="Path_4"
                                          Canvas.Left="25.92"
                                          Canvas.Top="0"
                                          Width="10.56"
                                          Height="12.16"
                                          Data="F1 M 36.48,12.16L 31.84,12.16L 31.84,11.52C 31.9417,11.51 32.0617,11.4975 32.2,11.4825C 32.3383,11.4675 32.4408,11.4425 32.5075,11.4075C 32.6158,11.3508 32.6917,11.2696 32.735,11.1637C 32.7783,11.0579 32.8,10.9016 32.8,10.695L 32.8,7.1525C 32.8,6.63248 32.6992,6.24371 32.4975,5.98624C 32.2958,5.72876 32.0083,5.59998 31.635,5.59998C 31.425,5.59998 31.2296,5.6304 31.0488,5.69122C 30.8679,5.75208 30.6908,5.84 30.5175,5.95499C 30.3658,6.05664 30.2442,6.1604 30.1525,6.26624C 30.0608,6.37207 29.9833,6.46582 29.92,6.54749L 29.92,10.6125C 29.92,10.7991 29.9421,10.9467 29.9863,11.055C 30.0304,11.1633 30.1142,11.2525 30.2375,11.3225C 30.3108,11.3691 30.4079,11.41 30.5287,11.445C 30.6496,11.48 30.7667,11.505 30.88,11.52L 30.88,12.16L 26.24,12.16L 26.24,11.52C 26.37,11.51 26.4967,11.4971 26.62,11.4812C 26.7433,11.4654 26.8525,11.4391 26.9475,11.4025C 27.1075,11.3408 27.2162,11.2516 27.2738,11.135C 27.3313,11.0183 27.36,10.8633 27.36,10.67L 27.36,1.98499C 27.36,1.8183 27.3208,1.64163 27.2425,1.45499C 27.1642,1.26831 27.0542,1.12747 26.9125,1.0325C 26.8075,0.96582 26.655,0.912903 26.455,0.873718C 26.255,0.834595 26.0767,0.809967 25.92,0.799988L 25.92,0.159973L 29.8025,0L 29.92,0.130005L 29.92,5.66748L 29.95,5.66748C 30.1483,5.49249 30.3271,5.33459 30.4863,5.19373C 30.6454,5.05289 30.8392,4.9108 31.0675,4.76749C 31.2592,4.64417 31.51,4.53873 31.82,4.45123C 32.13,4.36371 32.4642,4.31998 32.8225,4.31998C 33.6658,4.31998 34.2996,4.55582 34.7238,5.0275C 35.1479,5.49915 35.36,6.12079 35.36,6.89249L 35.36,10.6225C 35.36,10.8091 35.3883,10.9583 35.445,11.07C 35.5017,11.1816 35.6067,11.2708 35.76,11.3375C 35.8517,11.3775 35.9538,11.4129 36.0663,11.4437C 36.1788,11.4745 36.3167,11.5 36.48,11.52L 36.48,12.16 Z "
                                          Fill="{StaticResource DarkTextBrush}"
                                          Stretch="Fill" />
                                    <Path x:Name="Path_5"
                                          Canvas.Left="37.28"
                                          Canvas.Top="4.31998"
                                          Width="8.32001"
                                          Height="8.16"
                                          Data="F1 M 45.6,10.3525C 45.4167,10.6508 45.1958,10.9321 44.9375,11.1962C 44.6792,11.4604 44.3858,11.6866 44.0575,11.875C 43.7075,12.0733 43.3533,12.2238 42.995,12.3262C 42.6367,12.4287 42.225,12.48 41.76,12.48C 40.9883,12.48 40.3217,12.3716 39.76,12.155C 39.1983,11.9383 38.735,11.6466 38.37,11.28C 38.0033,10.9117 37.73,10.4783 37.55,9.97998C 37.37,9.48163 37.28,8.94083 37.28,8.35748C 37.28,7.83081 37.3788,7.32584 37.5763,6.84247C 37.7738,6.35916 38.0533,5.92914 38.415,5.55249C 38.7733,5.18582 39.2242,4.88873 39.7675,4.66125C 40.3108,4.43375 40.9192,4.31998 41.5925,4.31998C 42.3292,4.31998 42.9338,4.40872 43.4063,4.58624C 43.8788,4.76373 44.27,5.00916 44.58,5.32251C 44.88,5.62079 45.0983,5.97247 45.235,6.37747C 45.3717,6.7825 45.44,7.20667 45.44,7.64996L 45.44,8.15997L 40.16,8.15997C 40.16,9.15164 40.3683,9.90625 40.785,10.4237C 41.2017,10.9412 41.8633,11.2 42.77,11.2C 43.2667,11.2 43.7125,11.0791 44.1075,10.8375C 44.5025,10.5958 44.84,10.29 45.12,9.91998L 45.6,10.3525 Z M 42.56,7.48749C 42.56,7.17249 42.545,6.84955 42.515,6.51874C 42.485,6.1879 42.4325,5.91748 42.3575,5.70746C 42.2725,5.46082 42.1567,5.27457 42.01,5.14874C 41.8633,5.02289 41.6775,4.95999 41.4525,4.95999C 41.0692,4.95999 40.7629,5.16498 40.5338,5.57498C 40.3046,5.98499 40.18,6.63333 40.16,7.51996L 42.56,7.48749 Z "
                                          Fill="{StaticResource DarkTextBrush}"
                                          Stretch="Fill" />
                                    <Path x:Name="Path_6"
                                          Canvas.Left="46.08"
                                          Canvas.Top="0"
                                          Width="5.12"
                                          Height="12.16"
                                          Data="F1 M 51.2,12.16L 46.4,12.16L 46.4,11.52C 46.5283,11.51 46.6538,11.4971 46.7763,11.4812C 46.8988,11.4654 47.0042,11.44 47.0925,11.405C 47.2492,11.3433 47.3596,11.2545 47.4238,11.1387C 47.4879,11.0229 47.52,10.8708 47.52,10.6825L 47.52,6.20499C 47.52,6.02496 47.4767,5.86707 47.39,5.73123C 47.3033,5.5954 47.195,5.48663 47.065,5.40497C 46.9667,5.34332 46.8188,5.28418 46.6213,5.22748C 46.4238,5.17081 46.2433,5.13501 46.08,5.12L 46.08,4.47998L 49.96,4.31998L 50.08,4.43497L 50.08,10.5775C 50.08,10.7575 50.1167,10.9104 50.19,11.0363C 50.2633,11.162 50.3692,11.2567 50.5075,11.32C 50.6058,11.365 50.7138,11.4058 50.8313,11.4425C 50.9488,11.4792 51.0717,11.505 51.2,11.52L 51.2,12.16 Z M 50.08,1.44498C 50.08,1.84167 49.9379,2.17999 49.6538,2.45999C 49.3696,2.73999 49.0325,2.88 48.6425,2.88C 48.2492,2.88 47.9104,2.73999 47.6263,2.45999C 47.3421,2.17999 47.2,1.84167 47.2,1.44498C 47.2,1.04666 47.3421,0.706238 47.6263,0.423737C 47.9104,0.141235 48.2492,0 48.6425,0C 49.0375,0 49.3758,0.141235 49.6575,0.423737C 49.9392,0.706238 50.08,1.04666 50.08,1.44498 Z "
                                          Fill="{StaticResource DarkTextBrush}"
                                          Stretch="Fill" />
                                    <Path x:Name="Path_7"
                                          Canvas.Left="51.52"
                                          Canvas.Top="0"
                                          Width="5.12"
                                          Height="12.16"
                                          Data="F1 M 56.64,12.16L 51.84,12.16L 51.84,11.52C 51.97,11.51 52.0967,11.4971 52.22,11.4812C 52.3433,11.4654 52.4525,11.4391 52.5475,11.4025C 52.7075,11.3408 52.8163,11.2516 52.8738,11.135C 52.9313,11.0183 52.96,10.8633 52.96,10.67L 52.96,2.03748C 52.96,1.84082 52.9208,1.65833 52.8425,1.48999C 52.7642,1.32166 52.6583,1.1933 52.525,1.10498C 52.4233,1.03665 52.2696,0.971222 52.0638,0.908722C 51.8579,0.846222 51.6767,0.809967 51.52,0.799988L 51.52,0.159973L 55.405,0L 55.52,0.125L 55.52,10.5675C 55.52,10.7592 55.5525,10.915 55.6175,11.035C 55.6825,11.155 55.7875,11.2491 55.9325,11.3175C 56.0342,11.3642 56.14,11.4058 56.25,11.4425C 56.36,11.4792 56.49,11.505 56.64,11.52L 56.64,12.16 Z "
                                          Fill="{StaticResource DarkTextBrush}"
                                          Stretch="Fill" />
                                </Canvas>
                            </Viewbox>
                        </Canvas>
                    </Canvas>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Ellipse" Property="Fill" Value="{StaticResource HoverSelectionBrush}" />
                            <Setter TargetName="Ellipse" Property="BitmapEffect">
                                <Setter.Value>
                                    <OuterGlowBitmapEffect GlowColor="#57BDA9"
                                                           GlowSize="5"
                                                           Noise="1"
                                                           Opacity="0.4" />
                                </Setter.Value>
                            </Setter>
                            <!--
                                <Setter TargetName="Path_3" Property="Fill" Value="{StaticResource LightTextColor}" />
                                <Setter TargetName="Path_4" Property="Fill" Value="{StaticResource LightTextColor}" />
                                <Setter TargetName="Path_5" Property="Fill" Value="{StaticResource LightTextColor}" />
                                <Setter TargetName="Path_6" Property="Fill" Value="{StaticResource LightTextColor}" />
                                <Setter TargetName="Path_7" Property="Fill" Value="{StaticResource LightTextColor}" />
                            -->
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Ellipse" Property="Fill" Value="{StaticResource PressedSelectionBrush}" />
                            <Setter TargetName="Path_3" Property="Fill" Value="White" />
                            <Setter TargetName="Path_4" Property="Fill" Value="White" />
                            <Setter TargetName="Path_5" Property="Fill" Value="White" />
                            <Setter TargetName="Path_6" Property="Fill" Value="White" />
                            <Setter TargetName="Path_7" Property="Fill" Value="White" />
                        </Trigger>

                        <Trigger Property="IsFocused" Value="True" />
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Ellipse" Property="Fill" Value="{StaticResource DefaultSelectionBrush}" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Menu Button  -->
    <Style x:Key="SoheilMenuButton" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource NuclearButtonFocusVisual}" />
        <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}" />
        <Setter Property="BorderBrush" Value="{StaticResource ThemeDarkBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder"
                                             Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.5" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder"
                                             Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="CheckedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="CheckedBorder"
                                             Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.75" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="CheckedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="CheckedBorder"
                                             Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="PressedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Pressed"
                                             Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="PressedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Pressed"
                                             Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid x:Name="grid">
                        <Border x:Name="Border" Background="{DynamicResource ButtonNormalBrush}"
                    BorderBrush="{DynamicResource ThemeDarkBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="3,3,3,3" Opacity="0.1" Padding="{TemplateBinding Padding}" />
                        <Border x:Name="CheckedBorder" Background="{DynamicResource SelectedItemBrush}"
                    BorderBrush="{DynamicResource SelectedItemBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="3,3,3,3" Opacity="0" Padding="{TemplateBinding Padding}" />
                        <Border x:Name="HoverBorder" Background="{DynamicResource HoverSelectionBrush}"
                    BorderBrush="{DynamicResource HoverSelectionBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="3,3,3,3" Opacity="0" Padding="{TemplateBinding Padding}" />
                        <Border x:Name="Pressed" Background="{DynamicResource SelectedItemBrush}"
                    BorderBrush="{DynamicResource SelectedItemBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="3,3,3,3" Opacity="0" Padding="{TemplateBinding Padding}" />
                        <Rectangle x:Name="Shine" Height="Auto" Margin="2,2,2,2" VerticalAlignment="Stretch"
                       Opacity="1" RadiusX="3" RadiusY="3" Stroke="{x:Null}">
                        </Rectangle>
                        <ContentPresenter Margin="1"
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="HoverOff_BeginStoryboard"
                                 Storyboard="{StaticResource HoverOff}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="PressedOff_BeginStoryboard"
                                 Storyboard="{StaticResource PressedOff}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="PressedOn_BeginStoryboard"
                                 Storyboard="{StaticResource PressedOn}" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true" />
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#ADADAD" />
                            <Setter TargetName="Border" Property="Background"
                      Value="{DynamicResource DisabledBackgroundBrush}" />
                            <Setter TargetName="Border" Property="BorderBrush"
                      Value="{DynamicResource DisabledBorderBrush}" />
                            <Setter TargetName="grid" Property="Opacity" Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- Tab Button -->
    <ControlTemplate x:Key="TabButtonSimpleTemplate" TargetType="{x:Type ToggleButton}">
        <ControlTemplate.Resources>
            <Storyboard x:Key="HoverOn">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder"
                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                </DoubleAnimationUsingKeyFrames>

            </Storyboard>
            <Storyboard x:Key="HoverOff">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder"
                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                </DoubleAnimationUsingKeyFrames>

            </Storyboard>
            <Storyboard x:Key="PressedOn">

                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PressedBorder"
                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                </DoubleAnimationUsingKeyFrames>

            </Storyboard>
            <Storyboard x:Key="PressedOff">

                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PressedBorder"
                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                </DoubleAnimationUsingKeyFrames>

            </Storyboard>
            <Storyboard x:Key="FocusedOn">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement"
                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="FocussedOff">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement"
                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>

        </ControlTemplate.Resources>
        <Grid x:Name="Grid">
            <Border x:Name="Background" Background="{StaticResource ButtonNormalBrush}"
              BorderBrush="{StaticResource ThemeDarkBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="1" />
            <Border x:Name="HoverBorder" Background="{StaticResource BlueHoverBrush}"
              BorderBrush="{StaticResource BlueHoverBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="1"
              Opacity="0" />
            <Border x:Name="PressedBorder" Background="{StaticResource BlueSelectedBrush}"
              BorderBrush="{StaticResource BlueSelectedBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="1"
              Opacity="0" />
            <ContentPresenter Margin="{TemplateBinding Padding}"
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" />
            <Border x:Name="FocusVisualElement" Margin="1,1,1,1" BorderBrush="{StaticResource BlueSelectedBrush}" 
              BorderThickness="1" CornerRadius="1,1,1,1" IsHitTestVisible="false" Opacity="0" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsKeyboardFocused" Value="true">
                <Trigger.ExitActions>
                    <BeginStoryboard x:Name="FocussedOff_BeginStoryboard" Storyboard="{StaticResource FocussedOff}" />
                </Trigger.ExitActions>
                <Trigger.EnterActions>
                    <BeginStoryboard x:Name="FocusedOn_BeginStoryboard" Storyboard="{StaticResource FocusedOn}" />
                </Trigger.EnterActions>

            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Trigger.ExitActions>
                    <BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}" />
                </Trigger.ExitActions>
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                </Trigger.EnterActions>

            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Trigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource PressedOff}" />
                </Trigger.ExitActions>
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource PressedOn}" />
                </Trigger.EnterActions>
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Trigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource PressedOff}" />
                </Trigger.ExitActions>
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource PressedOn}" />
                </Trigger.EnterActions>
            </Trigger>
            <Trigger Property="IsEnabled" Value="true" />
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="Background" Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" />
                <Setter TargetName="Grid" Property="Opacity" Value="0.5" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="SoheilTabButton" BasedOn="{StaticResource {x:Type ToggleButton}}" TargetType="{x:Type RadioButton}">
        <Setter Property="FocusVisualStyle" Value="{DynamicResource NuclearButtonFocusVisual}" />
        <Setter Property="Background" Value="{DynamicResource NormalBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}" />
        <Setter Property="Template" Value="{DynamicResource TabButtonSimpleTemplate}" />
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Padding" Value="7,2" />
    </Style>

    <!--  Menu Toggle Button  -->
    <ControlTemplate x:Key="ToggleButtonSimpleTemplate" TargetType="{x:Type ToggleButton}">
        <ControlTemplate.Resources>
            <Storyboard x:Key="HoverOn">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder"
                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                </DoubleAnimationUsingKeyFrames>

            </Storyboard>
            <Storyboard x:Key="HoverOff">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder"
                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                </DoubleAnimationUsingKeyFrames>

            </Storyboard>
            <Storyboard x:Key="PressedOn">

                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PressedBorder"
                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                </DoubleAnimationUsingKeyFrames>

            </Storyboard>
            <Storyboard x:Key="PressedOff">

                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PressedBorder"
                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                </DoubleAnimationUsingKeyFrames>

            </Storyboard>
            <Storyboard x:Key="FocusedOn">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement"
                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="FocussedOff">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement"
                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>

        </ControlTemplate.Resources>
        <Grid x:Name="Grid">
            <Border x:Name="Background" Background="{StaticResource ButtonNormalBrush}"
              BorderBrush="{StaticResource ThemeDarkBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3" />
            <Border x:Name="HoverBorder" Background="{StaticResource HoverSelectionBrush}"
              BorderBrush="{StaticResource HoverSelectionBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3"
              Opacity="0" />
            <Border x:Name="PressedBorder" Background="{StaticResource SelectedItemBrush}"
              BorderBrush="{StaticResource SelectedItemBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3"
              Opacity="0" />
            <ContentPresenter Margin="{TemplateBinding Padding}"
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" />
            <Border x:Name="FocusVisualElement" Margin="1,1,1,1" BorderBrush="{StaticResource SelectedItemBrush}" Background="{StaticResource SelectedItemBrush}"
              BorderThickness="1" CornerRadius="3,3,3,3" IsHitTestVisible="false" Opacity="0" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsKeyboardFocused" Value="true">
                <Trigger.ExitActions>
                    <BeginStoryboard x:Name="FocussedOff_BeginStoryboard" Storyboard="{StaticResource FocussedOff}" />
                </Trigger.ExitActions>
                <Trigger.EnterActions>
                    <BeginStoryboard x:Name="FocusedOn_BeginStoryboard" Storyboard="{StaticResource FocusedOn}" />
                </Trigger.EnterActions>

            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Trigger.ExitActions>
                    <BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}" />
                </Trigger.ExitActions>
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                </Trigger.EnterActions>

            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Trigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource PressedOff}" />
                </Trigger.ExitActions>
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource PressedOn}" />
                </Trigger.EnterActions>
            </Trigger>
            <Trigger Property="IsEnabled" Value="true" />
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="Background" Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" />
                <Setter TargetName="Grid" Property="Opacity" Value="0.5" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="SoheilMenuToggleButton" BasedOn="{x:Null}" TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle" Value="{DynamicResource NuclearButtonFocusVisual}" />
        <Setter Property="Background" Value="{DynamicResource NormalBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}" />
        <Setter Property="Template" Value="{DynamicResource ButtonSimpleTemplate}" />
        <Setter Property="Width" Value="75"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Padding" Value="7,2" />
    </Style>

    <!--  Progress Button  -->
    <Style x:Key="ProgressButton" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Canvas x:Name="Document"
                            Width="24"
                            Height="24"
                            Clip="F1 M 0,0L 24,0L 24,24L 0,24L 0,0">
                        <Canvas x:Name="Layer_1"
                                Canvas.Left="0"
                                Canvas.Top="0"
                                Width="800"
                                Height="600">
                            <Ellipse x:Name="Ellipse"
                                     Canvas.Left="3.86023"
                                     Canvas.Top="3.85977"
                                     Width="16.28"
                                     Height="16.28"
                                     Fill="{StaticResource DefaultSelectionBrush}"
                                     Stretch="Fill" />
                            <Path x:Name="Path"
                                  Canvas.Left="5.20294"
                                  Canvas.Top="10.625"
                                  Width="13.7625"
                                  Height="7.83643"
                                  Data="F1 M 12.0841,13.4264C 15.8845,13.4264 18.9654,8.30087 18.9654,11.9159C 18.9654,15.5309 15.8846,18.4615 12.0842,18.4615C 8.28375,18.4615 5.20294,15.5309 5.20294,11.9159C 5.20294,8.30087 8.28375,13.4264 12.0841,13.4264 Z "
                                  Stretch="Fill">
                                <Path.Fill>
                                    <RadialGradientBrush Center="0.5,0.164723" GradientOrigin="0.5,0.164723" RadiusX="0.5" RadiusY="0.878107">
                                        <RadialGradientBrush.GradientStops>
                                            <GradientStop Offset="0" Color="#675CC6B2" />
                                            <GradientStop Offset="0.846512" Color="#67ADE2D8" />
                                            <GradientStop Offset="0.990952" Color="#67FFFFFF" />
                                        </RadialGradientBrush.GradientStops>
                                        <RadialGradientBrush.RelativeTransform>
                                            <TransformGroup />
                                        </RadialGradientBrush.RelativeTransform>
                                    </RadialGradientBrush>
                                </Path.Fill>
                            </Path>
                        </Canvas>
                    </Canvas>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Ellipse" Property="Fill" Value="{StaticResource HoverSelectionBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Ellipse" Property="Fill" Value="{StaticResource PressedSelectionBrush}" />
                        </Trigger>
                        <Trigger Property="IsDefaulted" Value="True">
                            <Setter TargetName="Ellipse" Property="Fill" Value="{StaticResource DefaultSelectionBrush}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True" />
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Ellipse" Property="Fill" Value="{StaticResource DefaultSelectionBrush}" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Push Button  -->
    <Style x:Key="PushButton" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Viewbox x:Name="Document"
                             Width="125"
                             Height="125"
                             Clip="F1 M 0,0L 125,0L 125,125L 0,125L 0,0"
                             Stretch="None">
                        <Canvas x:Name="PushButton"
                                Canvas.Left="0"
                                Canvas.Top="0"
                                Width="800.162"
                                Height="600.373">
                            <Ellipse x:Name="Ellipse"
                                     Canvas.Left="-1.90735e-006"
                                     Canvas.Top="0"
                                     Width="42.1666"
                                     Height="42.1667"
                                     Stretch="Fill">
                                <Ellipse.Fill>
                                    <RadialGradientBrush Center="0.480524,0.496203" GradientOrigin="0.480524,0.496203" RadiusX="0.502747" RadiusY="0.502748">
                                        <RadialGradientBrush.GradientStops>
                                            <GradientStop Offset="0.278761" Color="#F8000000" />
                                            <GradientStop Offset="0.738938" Color="#7C3E3E3E" />
                                            <GradientStop Offset="1" Color="#007D7D7D" />
                                        </RadialGradientBrush.GradientStops>
                                        <RadialGradientBrush.RelativeTransform>
                                            <TransformGroup>
                                                <RotateTransform Angle="227.808" CenterX="0.480524" CenterY="0.496203" />
                                            </TransformGroup>
                                        </RadialGradientBrush.RelativeTransform>
                                    </RadialGradientBrush>
                                </Ellipse.Fill>
                            </Ellipse>
                            <Ellipse x:Name="Ellipse_0"
                                     Canvas.Left="1.95094"
                                     Canvas.Top="2.14244"
                                     Width="34.153"
                                     Height="34.153"
                                     Stretch="Fill"
                                     Stroke="#FFFFFFFF"
                                     StrokeLineJoin="Round"
                                     StrokeThickness="1.5911">
                                <Ellipse.Fill>
                                    <LinearGradientBrush StartPoint="0.791212,1.07143" EndPoint="0.26374,-0.0384634">
                                        <LinearGradientBrush.GradientStops>
                                            <GradientStop Offset="0.119469" Color="#FF969696" />
                                            <GradientStop Offset="0.199997" Color="#FFF8E9DD" />
                                            <GradientStop Offset="0.251163" Color="#FFFFFFFF" />
                                            <GradientStop Offset="0.265653" Color="#FFB2B2BD" />
                                            <GradientStop Offset="0.293023" Color="#FF65657B" />
                                            <GradientStop Offset="0.316279" Color="#FF000000" />
                                            <GradientStop Offset="0.334884" Color="#FF6F6F6F" />
                                            <GradientStop Offset="0.371681" Color="#FF877855" />
                                            <GradientStop Offset="0.389138" Color="#FF857D74" />
                                            <GradientStop Offset="0.411504" Color="#FE848394" />
                                            <GradientStop Offset="0.555357" Color="#FE76767E" />
                                            <GradientStop Offset="0.609302" Color="#FE696969" />
                                            <GradientStop Offset="0.699115" Color="#FFE9E9E9" />
                                            <GradientStop Offset="0.756637" Color="#FFFFFFFF" />
                                            <GradientStop Offset="1" Color="#FF969696" />
                                        </LinearGradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Ellipse.Fill>
                            </Ellipse>
                            <Ellipse x:Name="Ellipse_1"
                                     Canvas.Left="2.66665"
                                     Canvas.Top="2.85808"
                                     Width="32.7216"
                                     Height="32.7216"
                                     Stretch="Fill"
                                     StrokeLineJoin="Round"
                                     StrokeThickness="1.5911">
                                <Ellipse.Stroke>
                                    <LinearGradientBrush StartPoint="0.170191,0.0433385" EndPoint="0.943978,1.06448">
                                        <LinearGradientBrush.GradientStops>
                                            <GradientStop Offset="0" Color="#7FFFFFFF" />
                                            <GradientStop Offset="0.530233" Color="#7F313350" />
                                            <GradientStop Offset="1" Color="#7F000000" />
                                        </LinearGradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Ellipse.Stroke>
                            </Ellipse>
                            <Path x:Name="Path"
                                  Canvas.Left="5.87756"
                                  Canvas.Top="6.15833"
                                  Width="25.7632"
                                  Height="25.6738"
                                  Data="F1 M 18.7592,6.15833C 25.8735,6.15833 31.6408,11.9056 31.6408,18.9952C 31.6408,26.0848 25.8735,31.8321 18.7592,31.8321C 11.6449,31.8321 5.87756,26.0848 5.87756,18.9952C 5.87756,11.9056 11.6449,6.15833 18.7592,6.15833 Z "
                                  Fill="{StaticResource DefaultSelectionBrush}"
                                  Stretch="Fill" />
                            <Ellipse x:Name="Ellipse_2"
                                     Canvas.Left="5.17139"
                                     Canvas.Top="5.36284"
                                     Width="27.7121"
                                     Height="27.7121"
                                     Fill="{StaticResource DefaultSelectionBrush}"
                                     Stretch="Fill"
                                     StrokeLineJoin="Round"
                                     StrokeThickness="1.5911">
                                <Ellipse.Stroke>
                                    <LinearGradientBrush StartPoint="0.500002,0.499999" EndPoint="0.764701,0.893818">
                                        <LinearGradientBrush.GradientStops>
                                            <GradientStop Offset="0" Color="#FF7B7B7B" />
                                            <GradientStop Offset="0.110619" Color="#FFBDBDBD" />
                                            <GradientStop Offset="1" Color="#FFFFFFFF" />
                                        </LinearGradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Ellipse.Stroke>
                            </Ellipse>
                            <Path x:Name="Path_3"
                                  Canvas.Left="10.2161"
                                  Canvas.Top="9.68695"
                                  Width="17.1929"
                                  Height="12.1839"
                                  Data="F1 M 18.8126,9.68695C 23.5603,9.68695 27.409,12.4144 27.409,15.7789C 27.409,19.1434 23.5603,21.8708 18.8126,21.8708C 14.0649,21.8708 10.2161,19.1434 10.2161,15.7789C 10.2161,12.4144 14.0649,9.68695 18.8126,9.68695 Z "
                                  Stretch="Fill">
                                <Path.Fill>
                                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1.07463">
                                        <LinearGradientBrush.GradientStops>
                                            <GradientStop Offset="0.0139535" Color="#40FFFFFF" />
                                            <GradientStop Offset="0.42477" Color="#20FFFFFF" />
                                            <GradientStop Offset="0.995349" Color="#00FFFFFF" />
                                        </LinearGradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Path.Fill>
                            </Path>
                            <Path x:Name="Path_4"
                                  Canvas.Left="7.3654"
                                  Canvas.Top="10.0455"
                                  Width="4.96427"
                                  Height="9.93602"
                                  Data="F1 M 7.39822,18.7939C 7.10751,16.9377 8.74799,11.4807 12.3297,10.0455C 9.70808,11.8232 8.23915,15.6622 8.30039,18.42C 8.53877,20.1805 7.68893,20.6501 7.39822,18.7939 Z "
                                  Stretch="Fill">
                                <Path.Fill>
                                    <LinearGradientBrush StartPoint="0.0156206,0.932252" EndPoint="1.40453,0.932252">
                                        <LinearGradientBrush.RelativeTransform>
                                            <TransformGroup>
                                                <SkewTransform AngleX="31.812" AngleY="0" CenterX="0.0156206" CenterY="0.932252" />
                                                <RotateTransform Angle="-43.4019" CenterX="0.0156206" CenterY="0.932252" />
                                            </TransformGroup>
                                        </LinearGradientBrush.RelativeTransform>
                                        <LinearGradientBrush.GradientStops>
                                            <GradientStop Offset="0" Color="#40FFFFFF" />
                                            <GradientStop Offset="0.182652" Color="#80FFFFFF" />
                                            <GradientStop Offset="0.35814" Color="#BFFFFFFF" />
                                            <GradientStop Offset="1" Color="#40FFFFFF" />
                                        </LinearGradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Path.Fill>
                            </Path>
                            <Path x:Name="Path_5"
                                  Canvas.Left="24.1647"
                                  Canvas.Top="19.3708"
                                  Width="6.40562"
                                  Height="9.22227"
                                  Data="F1 M 25.513,28.3729C 27.267,27.6995 31.1261,23.4119 30.5029,19.3708C 30.3312,22.6979 27.78,26.0053 25.3668,27.3486C 23.7226,28.0219 23.759,29.0463 25.513,28.3729 Z "
                                  Stretch="Fill">
                                <Path.Fill>
                                    <LinearGradientBrush StartPoint="0.137522,0.999956" EndPoint="1.48249,0.999956">
                                        <LinearGradientBrush.RelativeTransform>
                                            <TransformGroup>
                                                <SkewTransform AngleX="15.349" AngleY="0" CenterX="0.137522" CenterY="0.999956" />
                                                <RotateTransform Angle="-49.6072" CenterX="0.137522" CenterY="0.999956" />
                                            </TransformGroup>
                                        </LinearGradientBrush.RelativeTransform>
                                        <LinearGradientBrush.GradientStops>
                                            <GradientStop Offset="0" Color="#00FFFFFF" />
                                            <GradientStop Offset="0.109032" Color="#80FFFFFF" />
                                            <GradientStop Offset="0.260465" Color="#FFFFFFFF" />
                                            <GradientStop Offset="0.995349" Color="#3EFFFFFF" />
                                        </LinearGradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Path.Fill>
                            </Path>
                        </Canvas>
                    </Viewbox>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Ellipse_2" Property="Fill" Value="{StaticResource HoverSelectionBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Ellipse_2" Property="Fill" Value="{StaticResource PressedSelectionBrush}" />
                        </Trigger>
                        <Trigger Property="IsDefaulted" Value="True">
                            <Setter TargetName="Ellipse_2" Property="Fill" Value="{StaticResource DefaultSelectionBrush}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True" />
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Ellipse_2" Property="Fill" Value="{StaticResource DefaultSelectionBrush}" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Gel ToggleButton  -->
    <Style x:Key="GelToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Canvas x:Name="Document"
                            Width="14.7704"
                            Height="14.7704"
                            Clip="F1 M 0,0L 14.7704,0L 14.7704,14.7704L 0,14.7704L 0,0">
                        <Canvas x:Name="Layer_2"
                                Canvas.Left="0"
                                Canvas.Top="0"
                                Width="799.57"
                                Height="599.679">
                            <Viewbox x:Name="Group"
                                     Canvas.Left="0"
                                     Canvas.Top="0"
                                     Width="14.7704"
                                     Height="14.7704">
                                <Canvas Width="14.7704" Height="14.7704">
                                    <Ellipse x:Name="Ellipse"
                                             Canvas.Left="0"
                                             Canvas.Top="3.05176e-005"
                                             Width="14.7704"
                                             Height="14.7704"
                                             Stretch="Fill">
                                        <Ellipse.Fill>
                                            <RadialGradientBrush Center="0.480524,0.496202" GradientOrigin="0.480524,0.496202" RadiusX="0.502747" RadiusY="0.502749">
                                                <RadialGradientBrush.GradientStops>
                                                    <GradientStop Offset="0.278761" Color="#F8000000" />
                                                    <GradientStop Offset="0.738938" Color="#7C3E3E3E" />
                                                    <GradientStop Offset="1" Color="#007D7D7D" />
                                                </RadialGradientBrush.GradientStops>
                                                <RadialGradientBrush.RelativeTransform>
                                                    <TransformGroup>
                                                        <RotateTransform Angle="227.808" CenterX="0.480524" CenterY="0.496202" />
                                                    </TransformGroup>
                                                </RadialGradientBrush.RelativeTransform>
                                            </RadialGradientBrush>
                                        </Ellipse.Fill>
                                    </Ellipse>
                                    <Path x:Name="Path"
                                          Canvas.Left="1.6229"
                                          Canvas.Top="1.13855"
                                          Width="10.7828"
                                          Height="10.7453"
                                          Data="F1 M 7.01429,1.13855C 9.99187,1.13855 12.4057,3.54398 12.4057,6.51123C 12.4057,9.47849 9.99187,11.8839 7.01429,11.8839C 4.03671,11.8839 1.6229,9.47849 1.6229,6.51123C 1.6229,3.54398 4.03671,1.13855 7.01429,1.13855 Z "
                                          Fill="#FFDB0000"
                                          Stretch="Fill" />
                                    <Path x:Name="Path_0"
                                          Canvas.Left="0.864767"
                                          Canvas.Top="0.343"
                                          Width="12.5236"
                                          Height="12.5236"
                                          Data="F1 M 7.12658,1.13855C 10.1455,1.13855 12.5928,3.58591 12.5928,6.60483C 12.5928,9.62378 10.1455,12.0711 7.12658,12.0711C 4.10764,12.0711 1.66032,9.62378 1.66032,6.60483C 1.66032,3.58591 4.10764,1.13855 7.12658,1.13855 Z "
                                          Fill="#FF4DAF94"
                                          Stretch="Fill"
                                          StrokeLineJoin="Round"
                                          StrokeThickness="1.5911">
                                        <Path.Stroke>
                                            <LinearGradientBrush StartPoint="0.500002,0.500001" EndPoint="0.745147,0.864727">
                                                <LinearGradientBrush.GradientStops>
                                                    <GradientStop Offset="0" Color="#FF7B7B7B" />
                                                    <GradientStop Offset="0.110619" Color="#FFBDBDBD" />
                                                    <GradientStop Offset="1" Color="#FFFFFFFF" />
                                                </LinearGradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                        </Path.Stroke>
                                    </Path>
                                    <Path x:Name="Path_1"
                                          Canvas.Left="3.65748"
                                          Canvas.Top="2.74084"
                                          Width="7.19582"
                                          Height="5.09933"
                                          Data="F1 M 7.25539,2.74084C 9.24247,2.74084 10.8533,3.88235 10.8533,5.29053C 10.8533,6.69864 9.24245,7.84018 7.25539,7.84018C 5.26832,7.84018 3.65748,6.69864 3.65748,5.29053C 3.65748,3.88235 5.2683,2.74084 7.25539,2.74084 Z "
                                          Stretch="Fill">
                                        <Path.Fill>
                                            <LinearGradientBrush StartPoint="0.500001,0" EndPoint="0.500001,1.07463">
                                                <LinearGradientBrush.GradientStops>
                                                    <GradientStop Offset="0.0139535" Color="#40FFFFFF" />
                                                    <GradientStop Offset="0.42477" Color="#20FFFFFF" />
                                                    <GradientStop Offset="0.995349" Color="#00FFFFFF" />
                                                </LinearGradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                        </Path.Fill>
                                    </Path>
                                    <Path x:Name="Path_2"
                                          Canvas.Left="2.74563"
                                          Canvas.Top="2.76541"
                                          Width="2.07771"
                                          Height="4.15858"
                                          Data="F1 M 2.75937,6.42697C 2.6377,5.65005 3.32429,3.36609 4.82334,2.76541C 3.72613,3.50943 3.11133,5.11621 3.13695,6.27042C 3.23672,7.00729 2.88104,7.20386 2.75937,6.42697 Z "
                                          Stretch="Fill">
                                        <Path.Fill>
                                            <LinearGradientBrush StartPoint="0.0156184,0.932248" EndPoint="1.40452,0.932248">
                                                <LinearGradientBrush.RelativeTransform>
                                                    <TransformGroup>
                                                        <SkewTransform AngleX="31.8122" AngleY="0" CenterX="0.0156184" CenterY="0.932248" />
                                                        <RotateTransform Angle="-43.4017" CenterX="0.0156184" CenterY="0.932248" />
                                                    </TransformGroup>
                                                </LinearGradientBrush.RelativeTransform>
                                                <LinearGradientBrush.GradientStops>
                                                    <GradientStop Offset="0" Color="#40FFFFFF" />
                                                    <GradientStop Offset="0.182652" Color="#80FFFFFF" />
                                                    <GradientStop Offset="0.35814" Color="#BFFFFFFF" />
                                                    <GradientStop Offset="1" Color="#40FFFFFF" />
                                                </LinearGradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                        </Path.Fill>
                                    </Path>
                                    <Path x:Name="Path_3"
                                          Canvas.Left="8.74544"
                                          Canvas.Top="6.57471"
                                          Width="2.68098"
                                          Height="3.85981"
                                          Data="F1 M 9.30978,10.3424C 10.0439,10.0605 11.659,8.26608 11.3982,6.57471C 11.3263,7.96716 10.2586,9.35147 9.24859,9.9137C 8.56042,10.1955 8.57566,10.6242 9.30978,10.3424 Z "
                                          Stretch="Fill">
                                        <Path.Fill>
                                            <LinearGradientBrush StartPoint="0.13752,0.999958" EndPoint="1.48248,0.999958">
                                                <LinearGradientBrush.RelativeTransform>
                                                    <TransformGroup>
                                                        <SkewTransform AngleX="15.3488" AngleY="0" CenterX="0.13752" CenterY="0.999958" />
                                                        <RotateTransform Angle="-49.6072" CenterX="0.13752" CenterY="0.999958" />
                                                    </TransformGroup>
                                                </LinearGradientBrush.RelativeTransform>
                                                <LinearGradientBrush.GradientStops>
                                                    <GradientStop Offset="0" Color="#00FFFFFF" />
                                                    <GradientStop Offset="0.109032" Color="#80FFFFFF" />
                                                    <GradientStop Offset="0.260465" Color="#FFFFFFFF" />
                                                    <GradientStop Offset="0.995349" Color="#3EFFFFFF" />
                                                </LinearGradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                        </Path.Fill>
                                    </Path>
                                </Canvas>
                            </Viewbox>
                        </Canvas>
                    </Canvas>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Path_0" Property="Fill" Value="{StaticResource HoverSelectionBrush}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Path_0" Property="Fill" Value="{StaticResource PressedSelectionBrush}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True" />
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="Path_0" Property="Fill" Value="{StaticResource DefaultSelectionBrush}" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Close Button  -->
    <Style x:Key="CloseButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="IsThreeState" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Canvas x:Name="Document"
                            Width="16"
                            Height="16"
                            Clip="F1 M 0,0L 16,0L 16,16L 0,16L 0,0">
                        <Canvas x:Name="PSD"
                                Canvas.Left="0"
                                Canvas.Top="0"
                                Width="800"
                                Height="600">
                            <Ellipse x:Name="Ellipse"
                                     Canvas.Left="0"
                                     Canvas.Top="0"
                                     Width="16"
                                     Height="16"
                                     Stretch="Fill">
                                <Ellipse.Fill>
                                    <RadialGradientBrush Center="0.256835,0.189974" GradientOrigin="0.256835,0.189974" RadiusX="0.807966" RadiusY="0.807965">
                                        <RadialGradientBrush.GradientStops>
                                            <GradientStop Offset="0" Color="#C6EEE8" />
                                            <GradientStop Offset="0.469767" Color="#6FB5AB" />
                                            <GradientStop Offset="0.990952" Color="#1D8375" />
                                        </RadialGradientBrush.GradientStops>
                                        <RadialGradientBrush.RelativeTransform>
                                            <TransformGroup>
                                                <RotateTransform Angle="53.7663" CenterX="0.256835" CenterY="0.189974" />
                                            </TransformGroup>
                                        </RadialGradientBrush.RelativeTransform>
                                    </RadialGradientBrush>
                                </Ellipse.Fill>
                            </Ellipse>
                            <Viewbox x:Name="Group"
                                     Canvas.Left="4.08245"
                                     Canvas.Top="4.02585"
                                     Width="7.99748"
                                     Height="7.88937">
                                <Canvas Width="7.99748" Height="7.88937">
                                    <Path x:Name="Path"
                                          Canvas.Left="0"
                                          Canvas.Top="0"
                                          Width="7.99748"
                                          Height="7.88937"
                                          Data="F1 M 7.99748,7.88937L 5.6114,7.88937L 3.97173,5.33276L 2.26955,7.88937L 0,7.88937L 2.79135,3.9126L 0.108086,0L 2.4874,0L 4.06798,2.41476L 5.72285,0L 7.99748,0L 5.2551,3.8248L 7.99748,7.88937 Z "
                                          Fill="#FFFFFFFF"
                                          Stretch="Fill" />
                                </Canvas>
                            </Viewbox>
                        </Canvas>
                    </Canvas>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Ellipse" Property="Fill" Value="{StaticResource HoverSelectionBrush}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Ellipse" Property="Fill" Value="Crimson"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter TargetName="Ellipse" Property="Fill" Value="Red"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="False">
                            <Setter Property="IsChecked" Value="False"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Minimize Button  -->
    <Style x:Key="MinimizeButton" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Image x:Name="Image"
                               Width="13"
                               Height="13"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               Source="\Images\normalMinimize.bmp" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Image" Property="Source" Value="\Images\highlightedMinimize.bmp" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true" />
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Maximize Button  -->
    <Style x:Key="MaximizeButton" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Image x:Name="Image"
                               Width="13"
                               Height="13"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               Source="\Images\normalMaximize.bmp" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Image" Property="Source" Value="\Images\highlightedMaximize.bmp" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true" />
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Forward Button  -->
    <Style x:Key="ForwardButton" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Canvas x:Name="Document"
                            Width="24.0002"
                            Height="27.713"
                            Clip="F1 M 0,0L 24.0002,0L 24.0002,27.713L 0,27.713L 0,0">
                        <Canvas x:Name="Layer_1"
                                Canvas.Left="0"
                                Canvas.Top="0"
                                Width="800.005"
                                Height="599.789">
                            <Path x:Name="Path"
                                  Canvas.Left="0"
                                  Canvas.Top="3.05176e-005"
                                  Width="24.0002"
                                  Height="27.713"
                                  Data="F1 M 24.0002,13.8565L 0,27.713L 0,20.9662C 4.60199,19.4826 7.68005,16.782 7.68005,13.6965C 7.68005,10.611 4.60199,7.91043 0,6.42679L 0,3.05176e-005L 24.0002,13.8565 Z "
                                  Fill="{StaticResource DefaultSelectionBrush}"
                                  Stretch="Fill" />
                            <Path x:Name="Path_0"
                                  Canvas.Left="1.49335"
                                  Canvas.Top="2.3364"
                                  Width="19.5188"
                                  Height="23.1366"
                                  Data="F1 M 21.0121,13.9064L 1.49335,25.473L 2.32117,22.6837C 6.09155,21.445 10.4532,16.3257 10.4532,13.7497C 10.4532,11.1738 6.41156,6.53555 2.64117,5.29691L 1.49335,2.3364L 21.0121,13.9064 Z "
                                  Stretch="Fill">
                                <Path.Fill>
                                    <RadialGradientBrush Center="0.189984,0.210871" GradientOrigin="0.189984,0.210871" RadiusX="0.581973" RadiusY="0.538176">
                                        <RadialGradientBrush.GradientStops>
                                            <GradientStop Offset="0" Color="#675CC6B2" />
                                            <GradientStop Offset="0.846512" Color="#67ADE2D8" />
                                            <GradientStop Offset="0.990952" Color="#67FFFFFF" />
                                        </RadialGradientBrush.GradientStops>
                                        <RadialGradientBrush.RelativeTransform>
                                            <TransformGroup>
                                                <SkewTransform AngleX="-8.93515" AngleY="0" CenterX="0.189984" CenterY="0.210871" />
                                                <RotateTransform Angle="29.1563" CenterX="0.189984" CenterY="0.210871" />
                                            </TransformGroup>
                                        </RadialGradientBrush.RelativeTransform>
                                    </RadialGradientBrush>
                                </Path.Fill>
                            </Path>
                        </Canvas>
                    </Canvas>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Path" Property="Fill" Value="{StaticResource HoverSelectionBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Path" Property="Fill" Value="{StaticResource PressedSelectionBrush}" />
                        </Trigger>
                        <Trigger Property="IsDefaulted" Value="True">
                            <Setter TargetName="Path" Property="Fill" Value="{StaticResource DefaultSelectionBrush}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True" />
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Path" Property="Fill" Value="{StaticResource DefaultSelectionBrush}" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Backward Button  -->
    <Style x:Key="BackwardButton" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Canvas x:Name="Document"
                            Width="24"
                            Height="27.7128"
                            Clip="F1 M 0,0L 24,0L 24,27.7128L 0,27.7128L 0,0">
                        <Canvas x:Name="Layer_1"
                                Canvas.Left="0"
                                Canvas.Top="0"
                                Width="800.001"
                                Height="599.784">
                            <Path x:Name="Path"
                                  Canvas.Left="0"
                                  Canvas.Top="-3.05176e-005"
                                  Width="24"
                                  Height="27.7128"
                                  Data="F1 M 0,13.8564L 24,-3.05176e-005L 24,6.74667C 19.3981,8.23032 16.32,10.9309 16.32,14.0164C 16.32,17.1018 19.3981,19.8024 24,21.286L 24,27.7128L 0,13.8564 Z "
                                  Fill="{StaticResource DefaultSelectionBrush}"
                                  Stretch="Fill" />
                            <Path x:Name="Path_0"
                                  Canvas.Left="2.98804"
                                  Canvas.Top="2.23996"
                                  Width="19.5186"
                                  Height="23.1364"
                                  Data="F1 M 2.98804,13.8065L 22.5067,2.23996L 21.6788,5.02927C 17.9085,6.26791 13.5469,11.3872 13.5469,13.9632C 13.5469,16.5391 17.5885,21.1773 21.3589,22.416L 22.5067,25.3764L 2.98804,13.8065 Z "
                                  Stretch="Fill">
                                <Path.Fill>
                                    <RadialGradientBrush Center="0.810015,0.789129" GradientOrigin="0.810015,0.789129" RadiusX="0.581972" RadiusY="0.538176">
                                        <RadialGradientBrush.GradientStops>
                                            <GradientStop Offset="0" Color="#675CC6B2" />
                                            <GradientStop Offset="0.846512" Color="#67ADE2D8" />
                                            <GradientStop Offset="0.990952" Color="#67FFFFFF" />
                                        </RadialGradientBrush.GradientStops>
                                        <RadialGradientBrush.RelativeTransform>
                                            <TransformGroup>
                                                <SkewTransform AngleX="-8.935" AngleY="0" CenterX="0.810015" CenterY="0.789129" />
                                                <RotateTransform Angle="209.157" CenterX="0.810015" CenterY="0.789129" />
                                            </TransformGroup>
                                        </RadialGradientBrush.RelativeTransform>
                                    </RadialGradientBrush>
                                </Path.Fill>
                            </Path>
                        </Canvas>
                    </Canvas>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Path" Property="Fill" Value="{StaticResource HoverSelectionBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Path" Property="Fill" Value="{StaticResource PressedSelectionBrush}" />
                        </Trigger>
                        <Trigger Property="IsDefaulted" Value="True">
                            <Setter TargetName="Path" Property="Fill" Value="{StaticResource DefaultSelectionBrush}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True" />
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Path" Property="Fill" Value="{StaticResource DefaultSelectionBrush}" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Bullet Button  -->
    <Style x:Key="BulletButton" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Canvas x:Name="Document"
                            Width="14.5"
                            Height="14.5"
                            Clip="F1 M 0,0L 14.5,0L 14.5,14.5L 0,14.5L 0,0">
                        <Canvas x:Name="Layer_1"
                                Canvas.Left="0"
                                Canvas.Top="0"
                                Width="800.4"
                                Height="600.3">
                            <Viewbox x:Name="Group"
                                     Canvas.Left="0"
                                     Canvas.Top="-1.52588e-005"
                                     Width="14.5"
                                     Height="14.5">
                                <Canvas Width="14.5" Height="14.5">
                                    <Rectangle x:Name="Rectangle"
                                               Canvas.Left="0"
                                               Canvas.Top="0"
                                               Width="14.5"
                                               Height="14.5"
                                               Stretch="Fill"
                                               Stroke="#FF8FE9D6"
                                               StrokeLineJoin="Round"
                                               StrokeThickness="0.5">
                                        <Rectangle.Fill>
                                            <LinearGradientBrush StartPoint="0.181549,0.153272" EndPoint="0.520835,0.56994">
                                                <LinearGradientBrush.GradientStops>
                                                    <GradientStop Offset="0" Color="#FF41CAAB" />
                                                    <GradientStop Offset="0.990952" Color="#FF3CCFB0" />
                                                </LinearGradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                        </Rectangle.Fill>
                                    </Rectangle>
                                    <Path x:Name="Path"
                                          Canvas.Left="1.31522"
                                          Canvas.Top="3.35416"
                                          Width="12.1015"
                                          Height="10.2292"
                                          Data="F1 M 13.4167,13.5833L 13.4167,3.35416C 6.94122,4.28516 1.93716,8.44336 1.31522,13.5833L 13.4167,13.5833 Z "
                                          Stretch="Fill">
                                        <Path.Fill>
                                            <LinearGradientBrush StartPoint="0.407784,0.510315" EndPoint="1.03715,0.510315">
                                                <LinearGradientBrush.RelativeTransform>
                                                    <TransformGroup>
                                                        <SkewTransform AngleX="-1.85131" AngleY="0" CenterX="0.407784" CenterY="0.510315" />
                                                        <RotateTransform Angle="26.2063" CenterX="0.407784" CenterY="0.510315" />
                                                    </TransformGroup>
                                                </LinearGradientBrush.RelativeTransform>
                                                <LinearGradientBrush.GradientStops>
                                                    <GradientStop Offset="0" Color="#FF3AC6A6" />
                                                    <GradientStop Offset="0.990952" Color="#FF3CCFB0" />
                                                </LinearGradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                        </Path.Fill>
                                    </Path>
                                </Canvas>
                            </Viewbox>
                        </Canvas>
                    </Canvas>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Path" Property="Fill" Value="{StaticResource HoverSelectionBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Path" Property="Fill" Value="{StaticResource PressedSelectionBrush}" />
                        </Trigger>
                        <Trigger Property="IsDefaulted" Value="True">
                            <Setter TargetName="Path" Property="Fill" Value="{StaticResource DefaultSelectionBrush}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True" />
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Path" Property="Fill" Value="{StaticResource DefaultSelectionBrush}" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Expander Button  -->
    <Style x:Key="ExpanderButton" TargetType="{x:Type Button}">
        <Setter Property="Margin" Value="1,2,1,2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Canvas x:Name="Document"
                            Width="{TemplateBinding Width}"
                            Height="22">
                        <Canvas x:Name="Layer_1"
                                Canvas.Top="0"
                                Canvas.Right="0"
                                Width="{TemplateBinding Width}"
                                Height="22">
                            <Rectangle x:Name="Rectangle"
                                       Canvas.Top="0"
                                       Canvas.Right="0"
                                       Width="{TemplateBinding Width}"
                                       Height="22"
                                       Fill="{DynamicResource DarkBackGroundBrush}"
                                       Stretch="Fill"
                                       Stroke="#FF333333"
                                       StrokeLineJoin="Round" />
                            <Rectangle x:Name="Rectangle_0"
                                       Canvas.Top="2.70831"
                                       Canvas.Right="5"
                                       Width="16"
                                       Height="17"
                                       Fill="#FF16202A"
                                       Stretch="Fill"
                                       Stroke="#FF333333"
                                       StrokeLineJoin="Round" />
                            <Rectangle x:Name="Rectangle_1"
                                       Canvas.Top="3.70831"
                                       Canvas.Right="6"
                                       Width="14"
                                       Height="7.875"
                                       Stretch="Fill">
                                <Rectangle.Fill>
                                    <LinearGradientBrush StartPoint="0.499999,1.52586" EndPoint="0.499999,-0.525863">
                                        <LinearGradientBrush.GradientStops>
                                            <GradientStop Offset="0.246512" Color="#FF16202A" />
                                            <GradientStop Offset="0.977376" Color="#FF646A71" />
                                        </LinearGradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                            <Path x:Name="Path"
                                  Canvas.Top="6.58331"
                                  Canvas.Right="10"
                                  Width="8.625"
                                  Height="8.5"
                                  Data="F1 M 248.417,6.58331L 250.542,6.58331L 250.542,10.0068L 253.792,10.0068L 253.792,11.8474L 250.542,11.8474L 250.542,15.0833L 248.417,15.0833L 248.417,11.8474L 245.167,11.8474L 245.167,10.0068L 248.417,10.0068L 248.417,6.58331 Z "
                                  Fill="#FFD1D1D1"
                                  Stretch="Fill" />
                        </Canvas>
                    </Canvas>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Rectangle_0" Property="Fill" Value="{StaticResource HoverSelectionBrush}" />
                            <Setter TargetName="Rectangle_1" Property="Fill">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0.499999,1.52586" EndPoint="0.499999,-0.525863">
                                        <LinearGradientBrush.GradientStops>
                                            <GradientStop Offset="0.246512" Color="{StaticResource DisabledSelectionColor}" />
                                            <GradientStop Offset="0.977376" Color="{StaticResource HoverSelectionColor}" />
                                        </LinearGradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Rectangle_0" Property="Fill" Value="{StaticResource PressedSelectionBrush}" />
                            <Setter TargetName="Rectangle_1" Property="Fill">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0.499999,1.52586" EndPoint="0.499999,-0.525863">
                                        <LinearGradientBrush.GradientStops>
                                            <GradientStop Offset="0.246512" Color="{StaticResource DefaultSelectionColor}" />
                                            <GradientStop Offset="0.977376" Color="{StaticResource PressedSelectionColor}" />
                                        </LinearGradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsDefaulted" Value="True">
                            <Setter TargetName="Rectangle_0" Property="Fill" Value="{StaticResource DefaultSelectionBrush}" />
                            <Setter TargetName="Rectangle_1" Property="Fill">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0.499999,1.52586" EndPoint="0.499999,-0.525863">
                                        <LinearGradientBrush.GradientStops>
                                            <GradientStop Offset="0.246512" Color="#FF16202A" />
                                            <GradientStop Offset="0.977376" Color="#FF646A71" />
                                        </LinearGradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True" />
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Rectangle_0" Property="Fill" Value="{StaticResource DefaultSelectionBrush}" />
                            <Setter TargetName="Rectangle_1" Property="Fill">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0.499999,1.52586" EndPoint="0.499999,-0.525863">
                                        <LinearGradientBrush.GradientStops>
                                            <GradientStop Offset="0.246512" Color="#FF16202A" />
                                            <GradientStop Offset="0.977376" Color="#FF646A71" />
                                        </LinearGradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- FocusVisual -->
    <Style x:Key="ButtonFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <!--<Rectangle Margin="2"
                     StrokeThickness="1"
                     Stroke="#60000000"
                     StrokeDashArray="1 2" />-->
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Index Button -->
    <Style x:Key="IndexButton" TargetType="{x:Type Button}">
        <Setter Property="SnapsToDevicePixels"
          Value="true" />
        <Setter Property="OverridesDefaultStyle"
          Value="true" />
        <Setter Property="FocusVisualStyle"
          Value="{StaticResource ButtonFocusVisual}" />
        <Setter Property="MinHeight"
          Value="10" />
        <Setter Property="MinWidth"
          Value="10" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border TextBlock.Foreground="{TemplateBinding Foreground}" Background="{TemplateBinding Background}"
                            x:Name="Border"
                            Width="{StaticResource IdxBtnNormalWidth}"
                            Height="{StaticResource IdxBtnNormalHeight}"
                            CornerRadius="2">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.1" />
                                    <VisualTransition GeneratedDuration="0"
                                  To="Pressed" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Height)" 
                                                                       Storyboard.TargetName="Border">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="{StaticResource IdxBtnWideHeight}"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Width)" 
                                                                       Storyboard.TargetName="Border">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="{StaticResource IdxBtnWideWidth}"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Height)" 
                                                                       Storyboard.TargetName="Border">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="{StaticResource IdxBtnWideHeight}"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Width)" 
                                                                       Storyboard.TargetName="Border">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="{StaticResource IdxBtnWideWidth}"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames 
                                            Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                                Storyboard.TargetName="Border">
                                            <EasingColorKeyFrame KeyTime="0"
                                         Value="White" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames 
                                            Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                                Storyboard.TargetName="Border">
                                            <EasingColorKeyFrame KeyTime="0"
                                         Value="Gray" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter  Margin="0.2" x:Name="contentPresenter"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            RecognizesAccessKey="True" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefault" Value="true">
                            <Setter TargetName="Border" Property="Width" Value="{StaticResource IdxBtnNormalWidth}"/>
                            <Setter TargetName="Border" Property="Height" Value="{StaticResource IdxBtnNormalHeight}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Soheil SingularView Border  -->
    <Style x:Key="SoheilSingularViewBorder" TargetType="{x:Type Border}">
        <Setter Property="BorderBrush" Value="{StaticResource LightBackGroundBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CornerRadius" Value="5,5,5,5" />
        <Setter Property="Margin" Value="{StaticResource detailMargin}" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="FlowDirection" Value="{DynamicResource flowDirection}" />
        <Setter Property="Width">
            <Setter.Value>
                <MultiBinding Converter="{StaticResource SizeConverter}">
                    <MultiBinding.Bindings>
                        <Binding Path="ActualWidth" RelativeSource="{RelativeSource AncestorType=Control}" />
                        <Binding Source="{StaticResource detailGap}" />
                        <Binding Source="{StaticResource detailGap}" />
                    </MultiBinding.Bindings>
                </MultiBinding>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--  Soheil Cover Border  -->
    <Style x:Key="SoheilCoverBorder" TargetType="{x:Type Border}">
        <Setter Property="BorderBrush" Value="{StaticResource LightBackGroundBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CornerRadius" Value="1,1,1,1" />
        <Setter Property="Margin" Value="2" />
    </Style>
    
    <!--  Soheil DetailView Border  -->
    <Style x:Key="SoheilViewBorder" TargetType="{x:Type Border}">
        <Setter Property="BorderBrush" Value="{StaticResource LightBackGroundBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CornerRadius" Value="0,0,0,0" />
        <Setter Property="Margin" Value="2" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="FlowDirection" Value="{DynamicResource flowDirection}" />
    </Style>

    <!--  Soheil Content GroupBox  -->
    <Style x:Key="SoheilContentGroupBox" TargetType="{x:Type GroupBox}">
        <Setter Property="BorderBrush" Value="{StaticResource LightBackGroundBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Margin" Value="{StaticResource detailMargin}" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="FlowDirection" Value="{DynamicResource flowDirection}" />
        <Setter Property="Foreground" Value="{StaticResource BlueSelectedBrush}"/>
        <Setter Property="Height" Value="{StaticResource contentHeight}"/>
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontFamily" Value="tahoma" />
        <Setter Property="Width">
            <Setter.Value>
                <MultiBinding Converter="{StaticResource SizeConverter}">
                    <MultiBinding.Bindings>
                        <Binding Path="ActualWidth" RelativeSource="{RelativeSource AncestorType=Control}" />
                        <Binding Source="{StaticResource detailGap}" />
                    </MultiBinding.Bindings>
                </MultiBinding>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupBox}">
                    <Grid SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Border x:Name="Header" Grid.Column="0" Grid.Row="0" Padding="3" Background="{StaticResource ThemeMediumBrush}" 
                                CornerRadius="4,4,0,0" BorderBrush="{StaticResource ThemeDarkBrush}" BorderThickness="1,1,1,0">
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" ContentSource="Header" 
                                              RecognizesAccessKey="True"/>
                        </Border>
                        <Border x:Name="Container" Grid.Column="0" Grid.Row="1" Padding="3" CornerRadius="0,0,4,4" 
                                Background="Transparent" BorderBrush="{StaticResource ThemeLightBrush}" 
                                BorderThickness="1,1,1,1">
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="{TemplateBinding Padding}"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Header" Property="Background" Value="{StaticResource ThemeDarkBrush}"/>
                            <Setter TargetName="Container" Property="Background" Value="{StaticResource DisabledBackground}"/>
                            <Setter Property="Foreground" Value="{StaticResource NormalOuterBorder}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>

    <!--  Soheil DetailView Border  -->
    <Style x:Key="SoheilDetailViewBorder" BasedOn="{StaticResource SoheilContentGroupBox}" TargetType="{x:Type GroupBox}">
        <Setter Property="BorderBrush" Value="{StaticResource LightBackGroundBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Margin" Value="{StaticResource detailMargin}" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="FlowDirection" Value="{DynamicResource flowDirection}" />
        <Setter Property="Width">
            <Setter.Value>
                <MultiBinding Converter="{StaticResource SizeConverter}">
                    <MultiBinding.Bindings>
                        <Binding Path="ActualWidth" RelativeSource="{RelativeSource AncestorType=Control}" />
                        <Binding Source="{StaticResource detailGap}" />
                        <Binding Source="{StaticResource leftSideGap}" />
                    </MultiBinding.Bindings>
                </MultiBinding>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Soheil ContentSplit GroupBox  -->
    <Style x:Key="SoheilContentSplitGroupBox" TargetType="{x:Type GroupBox}">
        <Setter Property="BorderBrush" Value="{StaticResource LightBackGroundBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Margin" Value="{StaticResource detailMargin}" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="FlowDirection" Value="{DynamicResource flowDirection}" />
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Height" Value="{StaticResource contentHeight}"/>
        <Setter Property="Width">
            <Setter.Value>
                <MultiBinding Converter="{StaticResource SizeConverter}">
                    <MultiBinding.Bindings>
                        <Binding Path="ActualWidth" RelativeSource="{RelativeSource AncestorType=Control}" />
                        <Binding Source="{StaticResource detailGap}" />
                        <Binding Source="{StaticResource leftSideGap}" />
                    </MultiBinding.Bindings>
                </MultiBinding>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupBox}">
                    <Grid SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Border x:Name="Header" Grid.Column="0" Grid.Row="0" Padding="3" Background="{StaticResource ThemeMediumBrush}" 
                                CornerRadius="4,4,0,0" BorderBrush="{StaticResource ThemeDarkBrush}" BorderThickness="1,1,1,0">
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" ContentSource="Header" 
                                              RecognizesAccessKey="True"/>
                        </Border>
                        <Border x:Name="Container" Grid.Column="0" Grid.Row="1" Padding="3" CornerRadius="0,0,4,4" 
                                Background="Transparent" BorderBrush="{StaticResource ThemeDarkBrush}" 
                                BorderThickness="1,1,1,1">
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="{TemplateBinding Padding}"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Header" Property="Background" Value="{StaticResource ThemeDarkBrush}"/>
                            <Setter TargetName="Container" Property="Background" Value="{StaticResource DisabledBackground}"/>
                            <Setter Property="Foreground" Value="{StaticResource NormalOuterBorder}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>

    <!--  Soheil DetailListView Border  -->
    <Style x:Key="SoheilDetailListViewBorder" BasedOn="{StaticResource SoheilContentGroupBox}" TargetType="{x:Type GroupBox}">
        <Setter Property="BorderBrush" Value="{StaticResource LightBackGroundBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Margin" Value="{StaticResource listMargin}" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Width" Value="{StaticResource listWidth}" />
        <Setter Property="FlowDirection" Value="{DynamicResource flowDirection}" />
    </Style>

    <!--  Soheil DualLeftView Border  -->
    <Style x:Key="SoheilDualLeftViewBorder" BasedOn="{StaticResource SoheilContentGroupBox}" TargetType="{x:Type GroupBox}">
        <Setter Property="BorderBrush" Value="{StaticResource LightBackGroundBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Margin" Value="{StaticResource dualMargin}" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Width" Value="{StaticResource halfWidth}" />
        <Setter Property="FlowDirection" Value="{DynamicResource flowDirection}" />
    </Style>

    <!--  Soheil DualRightView Border  -->
    <Style x:Key="SoheilDualRightViewBorder" BasedOn="{StaticResource SoheilContentGroupBox}" TargetType="{x:Type GroupBox}">
        <Setter Property="BorderBrush" Value="{StaticResource LightBackGroundBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Margin" Value="{StaticResource dualMargin}" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Width" Value="{StaticResource halfWidth}" />
        <Setter Property="FlowDirection" Value="{DynamicResource flowDirection}" />
    </Style>

    <!--  Soheil DualTopView Border  -->
    <Style x:Key="SoheilDualTopViewBorder" TargetType="{x:Type Border}">
        <Setter Property="BorderBrush" Value="{StaticResource LightBackGroundBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CornerRadius" Value="0,0,0,0" />
        <Setter Property="Margin" Value="{StaticResource dualMargin}" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Width" Value="{StaticResource listWidth}" />
        <Setter Property="FlowDirection" Value="{DynamicResource flowDirection}" />
    </Style>

    <!--  Soheil Internal Vertical Border  -->
    <Style x:Key="SoheilInternalVerticalBorder" TargetType="{x:Type Border}">
        <Setter Property="BorderBrush" Value="{StaticResource LightBackGroundBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CornerRadius" Value="5,0,0,5" />
        <Setter Property="Margin" Value="{StaticResource listMargin}" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="Width" Value="{StaticResource listWidth}" />
        <Setter Property="FlowDirection" Value="{DynamicResource flowDirection}" />
    </Style>

    <!--  Soheil ContentBar Border  -->
    <Style x:Key="SoheilContentBorder" TargetType="{x:Type Border}">
        <Setter Property="BorderBrush" Value="{StaticResource ThemeDarkBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CornerRadius" Value="0,0,0,0" />
        <Setter Property="Margin" Value="{StaticResource barMargin}" />
        <Setter Property="FlowDirection" Value="{DynamicResource flowDirection}" />
    </Style>

    <!--  Soheil ContentUpperBar Border  -->
    <Style x:Key="SoheilContentUpperBarBorder" TargetType="{x:Type Border}">
        <Setter Property="BorderBrush" Value="{StaticResource ThemeDarkBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CornerRadius" Value="0,0,0,0" />
        <Setter Property="Margin" Value="{StaticResource barMargin}" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Height" Value="{StaticResource barHeight}" />
        <Setter Property="FlowDirection" Value="{DynamicResource flowDirection}" />
    </Style>

    <!--  Soheil ContentLowerBar Border  -->
    <Style x:Key="SoheilContentLowerBarBorder" TargetType="{x:Type Border}">
        <Setter Property="BorderBrush" Value="{StaticResource ThemeDarkBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CornerRadius" Value="0,0,0,0" />
        <Setter Property="Margin" Value="{StaticResource barMargin}" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Setter Property="Height" Value="{StaticResource barHeight}" />
        <Setter Property="FlowDirection" Value="{DynamicResource flowDirection}" />
    </Style>

    <!--  Soheil ContentUpper Border  -->
    <Style x:Key="SoheilContentUpperBorder" TargetType="{x:Type Border}">
        <Setter Property="BorderBrush" Value="{StaticResource ThemeLightBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CornerRadius" Value="5,5,5,5" />
        <Setter Property="Margin" Value="{StaticResource barMargin}" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="FlowDirection" Value="{DynamicResource flowDirection}" />
    </Style>

    <!--  Soheil ContentMiddle Rectangle  -->
    <Style x:Key="SoheilContentMiddleBorder" TargetType="{x:Type Border}">
        <Setter Property="BorderBrush" Value="{StaticResource ThemeLightBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CornerRadius" Value="5,5,5,5" />
        <Setter Property="Margin" Value="{StaticResource barMargin}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FlowDirection" Value="{DynamicResource flowDirection}" />
    </Style>

    <!--  Soheil ContentLower Rectangle  -->
    <Style x:Key="SoheilContentLowerBorder" TargetType="{x:Type Border}">
        <Setter Property="BorderBrush" Value="{StaticResource ThemeLightBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CornerRadius" Value="5,5,5,5" />
        <Setter Property="Margin" Value="{StaticResource barMargin}" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Setter Property="FlowDirection" Value="{DynamicResource flowDirection}" />
    </Style>

	<!--  Soheil ContentLower Expander  -->
	<Style x:Key="SoheilContentLowerExpander" TargetType="{x:Type Expander}">
		<Setter Property="BorderBrush" Value="{StaticResource ThemeLightBrush}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="IsExpanded" Value="False" />
		<Setter Property="Header" Value="{Loc splitContentMoreInfo}" />
		<Setter Property="Margin" Value="{StaticResource barMargin}" />
		<Setter Property="VerticalAlignment" Value="Bottom" />
		<Setter Property="FlowDirection" Value="{DynamicResource flowDirection}" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontFamily" Value="tahoma" />
        <Setter Property="Foreground" Value="{StaticResource Foreground}"/>
    </Style>
	
	<!--  Soheil ContentRight Rectangle  -->
    <Style x:Key="SoheilContentRightBorder" TargetType="{x:Type Border}">
        <Setter Property="BorderBrush" Value="{StaticResource ThemeLightBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CornerRadius" Value="5,5,5,5" />
        <Setter Property="Margin" Value="{StaticResource barMargin}" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="FlowDirection" Value="{DynamicResource flowDirection}" />
    </Style>

    <!--  Soheil ContentLeft Rectangle  -->
    <Style x:Key="SoheilContentLeftBorder" TargetType="{x:Type Border}">
        <Setter Property="BorderBrush" Value="{StaticResource ThemeLightBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CornerRadius" Value="5,5,5,5" />
        <Setter Property="Margin" Value="{StaticResource barMargin}" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="FlowDirection" Value="{DynamicResource flowDirection}" />
    </Style>

    <!--  Soheil EntryBox TextBlock  -->
    <Style x:Key="EntryBoxHeader" TargetType="TextBlock">
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontFamily" Value="tahoma" />
        <Setter Property="Foreground" Value="{StaticResource TextBrush}" />
    </Style>

    <!--  Soheil OrganizationChartNode TreeViewItem  -->
    <Style x:Key="OrgChartNode" TargetType="TreeViewItem">
        <Style.Resources>
            <LinearGradientBrush x:Key="ItemAreaBrush" StartPoint="0.5, 0" EndPoint="0.5, 1">
                <GradientStop Offset="0" Color="{StaticResource DisabledSelectionColor}" />
                <GradientStop Offset="1" Color="{StaticResource DisabledSelectionColor}" />
            </LinearGradientBrush>
            <LinearGradientBrush x:Key="SelectedItemAreaBrush" StartPoint="0.5, 0" EndPoint="0.5, 1">
                <GradientStop Offset="0" Color="{StaticResource HoverSelectionColor}" />
                <GradientStop Offset="1" Color="{StaticResource PressedSelectionColor}" />
            </LinearGradientBrush>
            <LinearGradientBrush x:Key="ItemBorderBrush" StartPoint="0.5, 0" EndPoint="0.5, 1">
                <GradientStop Offset="0" Color="LightGray" />
                <GradientStop Offset="1" Color="Gray" />
            </LinearGradientBrush>
            <LinearGradientBrush x:Key="SelectedItemBorderBrush" StartPoint="0.5, 0" EndPoint="0.5, 1">
                <GradientStop Offset="0" Color="Honeydew" />
                <GradientStop Offset="1" Color="Black" />
            </LinearGradientBrush>
            <DropShadowBitmapEffect x:Key="DropShadowEffect" />
        </Style.Resources>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TreeViewItem">
                    <Grid Margin="2">
                        <Grid.RowDefinitions>
                            <!--  The top row contains the item's content.  -->
                            <RowDefinition Height="Auto" />
                            <!--  The bottom row contains the item's children.  -->
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Border Name="Bd"
                                Background="{StaticResource ItemAreaBrush}"
                                BorderBrush="{StaticResource ItemBorderBrush}"
                                BorderThickness="0.6"
                                CornerRadius="8"
                                Padding="6"
                                TextElement.Foreground="{StaticResource TextBrush}">
                            <ContentPresenter Name="PART_Header"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              ContentSource="Header" />
                        </Border>
                        <ItemsPresenter Grid.Row="1" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Bd" Property="Panel.Background" Value="{StaticResource SelectedItemAreaBrush}" />
                            <Setter TargetName="Bd" Property="Border.BorderBrush" Value="{StaticResource SelectedItemBorderBrush}" />
                            <Setter TargetName="Bd" Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                            <Setter TargetName="Bd" Property="Border.BitmapEffect" Value="{StaticResource DropShadowEffect}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Margin="4,6"
                                HorizontalAlignment="Center"
                                IsItemsHost="True"
                                Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- Soheil SimpleBar -->
    <Style x:Key="SimpleBar" TargetType="ToggleButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="15"/>
                            </Grid.ColumnDefinitions>
                            <Rectangle x:Name="Color" Fill="{TemplateBinding Background}" Grid.Column="0"/>
                            <Rectangle x:Name="Bar" Fill="{TemplateBinding Foreground}" Grid.Column="1"/>
                        </Grid>
                        <Grid x:Name="Shade" Background="White" Opacity="0">
                            <Grid.Effect>
                                <DropShadowEffect x:Name="Effect"
                                    ShadowDepth="0"
                                    Color= "White"
                                    Opacity="0"
                                    BlurRadius="20"/>
                            </Grid.Effect>
                        </Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition To="MouseOver" GeneratedDuration="0:0:0.2"/>
                                    <VisualTransition To="Pressed" GeneratedDuration="0:0:0.2"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Shade" Storyboard.TargetProperty="Opacity" To="0.3" />
                                        <DoubleAnimation Storyboard.TargetName="Effect" Storyboard.TargetProperty="Opacity" To="0.5" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Shade" Storyboard.TargetProperty="Opacity" To="0.6" />
                                        <DoubleAnimation Storyboard.TargetName="Effect" Storyboard.TargetProperty="Opacity" To="0.8" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Soheil Radio ListBox -->
    <Style x:Key="RadioListBox" TargetType="{x:Type ListBox}">
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ToggleButton Content="{Binding}" 
                              IsChecked="{Binding IsSelected, Mode=TwoWay, 
                                RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- Soheil Color Picker -->
    <Style x:Key="ColorPickerRepeatButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="Transparent" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ColorSliderThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid Width="9" Height="12">
                        <Polygon 
              Fill="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" 
              Points="4.5,0 9,5 9,12 0,12 0,5"/>
                        <Polygon Fill="Black" Points="4.5,1 8,5 1,5"/>
                        <Polygon Stroke="Black" StrokeThickness="1"  Points="7.5,5.5 7.5,10.5 1.5,10.5 1.5,5.5"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SpectrumSliderThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid Background="Transparent" Width="16" Height="9">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="6" />
                            <ColumnDefinition Width="4"/>
                            <ColumnDefinition Width="6"/>
                        </Grid.ColumnDefinitions>
                        <Polygon Grid.Column="0" Stroke="White" StrokeThickness="1" Fill="Black" Points="0.5,0  5.5,4.5  0.5,9"/>
                        <Polygon Grid.Column="2" Stroke="White" StrokeThickness="1" Fill="Black" Points="5.5,0  0.5,4.5  5.5,9"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <DrawingBrush x:Key="CheckersBrush" 
                  Viewport="0,0,11,11" ViewportUnits="Absolute"
                  TileMode="Tile">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <GeometryDrawing Geometry="M0,0 L2,0 2,2, 0,2Z" Brush="White"/>
                <GeometryDrawing Geometry="M0,1 L2,1 2,2 1,2 1,0 0,0Z" Brush="LightGray"/>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>
    <Style x:Key="SunkenFrameStyle" TargetType="{x:Type Label}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid>
                        <Border Margin="0,1" BorderBrush="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderThickness="1,0,0,0"/>
                        <Border Margin="1,0" BorderBrush="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderThickness="0,1,0,0"/>
                        <Border Margin="0,1" BorderBrush="#F8F8F8" BorderThickness="0,0,1,0"/>
                        <Border Margin="1,0" BorderBrush="#F8F8F8" BorderThickness="0,0,0,1"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type ColorPicker:ColorSlider}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Maximum" Value="255"/>
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="SmallChange" Value="1"/>
        <Setter Property="LargeChange" Value="10"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ColorPicker:ColorSlider}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="8*"/>
                            <RowDefinition Height="13"/>
                            <RowDefinition Height="12*"/>
                        </Grid.RowDefinitions>
                        <Border Margin="1" Grid.Row="1" Background="{TemplateBinding Background}"/>
                        <Border Margin="1" Grid.Row="1">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                    <!--<GradientStop Color="{Binding diagnostics:PresentationTraceSources.TraceLevel=High, RelativeSource={RelativeSource TemplatedParent}, Path=LeftColor}" Offset="0"/>-->
                                    <GradientStop Color="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=LeftColor}" Offset="0"/>
                                    <GradientStop Color="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=RightColor}" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                        <Label Grid.Row="1" Style="{StaticResource SunkenFrameStyle}"/>
                        <Track Grid.Row="1" Margin="-3,0,-2,0" x:Name="PART_Track" >
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Style="{StaticResource ColorPickerRepeatButtonStyle}" Command="{x:Static Slider.DecreaseLarge}" />
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Style="{StaticResource ColorPickerRepeatButtonStyle}" Command="{x:Static Slider.IncreaseLarge}" />
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb x:Name="Thumb" Style="{StaticResource ColorSliderThumbStyle}">
                                    <Thumb.RenderTransform>
                                        <TranslateTransform Y="5"/>
                                    </Thumb.RenderTransform>
                                </Thumb>
                            </Track.Thumb>
                        </Track>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type ColorPicker:SpectrumSlider}">
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Orientation" Value="Vertical"/>
        <Setter Property="Maximum" Value="360"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ColorPicker:SpectrumSlider}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="10*"/>
                            <ColumnDefinition Width="17"/>
                            <ColumnDefinition Width="10*"/>
                        </Grid.ColumnDefinitions>
                        <Grid Grid.Column="1">
                            <Border Margin="1" Background="{TemplateBinding Background}"/>
                            <Label Style="{StaticResource SunkenFrameStyle}"/>
                        </Grid>
                        <Track Grid.Column="1"  Margin="0,-3" x:Name="PART_Track" >
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Style="{StaticResource ColorPickerRepeatButtonStyle}" Command="{x:Static Slider.DecreaseLarge}" />
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Style="{StaticResource ColorPickerRepeatButtonStyle}" Command="{x:Static Slider.IncreaseLarge}" />
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb x:Name="Thumb" Style="{StaticResource SpectrumSliderThumbStyle}">
                                </Thumb>
                            </Track.Thumb>
                        </Track>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ColorPicker:HueToColorConverter x:Key="HueToColorConverter"/>
    <Style x:Key="HsvControlThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="True" />
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid Height="12" Width="12">
                        <Ellipse Stroke="White" Margin="0"/>
                        <Ellipse Stroke="Black" Margin="1"/>
                        <Ellipse Stroke="White" Margin="2"/>
                        <Line Stroke="#80000000" X1="0" Y1="6" X2="12" Y2="6"/>
                        <Line Stroke="#80000000" X1="6" Y1="0" X2="6" Y2="12"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type ColorPicker:HsvControl}">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ColorPicker:HsvControl}">
                    <Grid>
                        <Rectangle>
                            <Rectangle.Fill>
                                <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                                    <GradientStop Offset="0" Color="#FFFFFFFF"/>
                                    <GradientStop Offset="1"
                      Color="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Hue, Converter={StaticResource HueToColorConverter}}"/>
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <Rectangle>
                            <Rectangle.Fill>
                                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                    <GradientStop Offset="0" Color="#00000000"/>
                                    <GradientStop Offset="1" Color="#FF000000"/>
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <Grid>
                            <Border BorderBrush="#A0808080" BorderThickness="1,1,0,0"/>
                            <Border BorderBrush="#A0F0F0F0" BorderThickness="0,0,1,1"/>
                        </Grid>
                        <Canvas ClipToBounds="true">
                            <Thumb Canvas.Left="-5" Canvas.Top="-5" x:Name="PART_Thumb" Style="{StaticResource HsvControlThumbStyle}">
                                <Thumb.RenderTransform>
                                    <TranslateTransform X="0" Y="0"/>
                                </Thumb.RenderTransform>
                            </Thumb>
                        </Canvas>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ColorPicker:DoubleToIntegerStringConverter x:Key="DoubleToIntegerStringConverter"/>
    <Style x:Key="ColorPickerTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="Margin" Value="5,1,3,3"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>
    <Style TargetType="{x:Type ColorPicker:ColorPicker}">
        <Setter Property="Focusable" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border
            Padding="{TemplateBinding Padding}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            Background="{TemplateBinding Background}">
                        <Grid Height="80" Width="200">
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="180" />
                                <ColumnDefinition Width="20" />
                            </Grid.ColumnDefinitions>
                            <ColorPicker:HsvControl 
                x:Name="PART_HsvControl"
                Grid.Row="0" Grid.Column="0" Grid.RowSpan="4"/>
                            <ColorPicker:SpectrumSlider 
                x:Name="PART_SpectrumSlider1" 
                Grid.Column="1" Grid.RowSpan="4"
                BorderBrush="Black" BorderThickness="1" 
                LargeChange="30" SmallChange="10" Hue="0" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ColorPicker:ColorToStringConverter x:Key="ColorToStringConverter"/>
    <Style TargetType="{x:Type ColorPicker:ColorComboBox}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ColorPicker:ColorComboBox}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="25"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Border Grid.Row="1" x:Name="OverallBorder"
                  BorderBrush="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}"
                  BorderThickness="1"/>
                        <Grid Grid.Row="1" Background="Transparent">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="25"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="15"/>
                            </Grid.ColumnDefinitions>
                            <Grid Grid.Column ="0" Margin="4">
                                <Rectangle Fill="{StaticResource CheckersBrush}"/>
                                <Rectangle Stroke="Black" StrokeThickness="1">
                                    <Rectangle.Fill>
                                        <SolidColorBrush Color="{Binding SelectedColor, RelativeSource={RelativeSource TemplatedParent}}"/>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <!--<Border BorderBrush="Black" BorderThickness="1"/>-->
                            </Grid>
                            <TextBlock
                  Text="{Binding SelectedColor, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ColorToStringConverter}}" 
                  Grid.Column="1" Margin="5,0" VerticalAlignment="Center"/>
                            <Grid Grid.Column="2">
                                <Border x:Name="ToggleButtonFill" Visibility="Hidden" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
                                <Border x:Name="ToggleButtonGlass" Visibility="Hidden" Background="{StaticResource GlassBrush}"/>
                                <Border x:Name="ToggleButtonBorder" Visibility="Hidden" BorderThickness="1"  BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
                                <ToggleButton 
                  x:Name="PART_ToggleButton"
                  Focusable="False"                  
                  IsChecked="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}">
                                    <ToggleButton.Style>
                                        <Style TargetType="ToggleButton">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate>
                                                        <Grid Background="Transparent">
                                                            <Path 
                                  Fill="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" 
                                  HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 3.5 4 L 7 0 Z"/>
                                                        </Grid>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ToggleButton.Style>
                                </ToggleButton>
                            </Grid>
                            <Popup
                x:Name="PART_Popup"
                AllowsTransparency="True"
                Placement="Bottom" Focusable="True" StaysOpen="False"
                PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" 
                IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}">
                                <!--IsOpen="{Binding IsChecked, ElementName=PART_ToggleButton}">-->
                                <!--IsOpen="{TemplateBinding IsDropDownOpen}">-->
                                <Border
                  Padding="5"
                  Background="#F6F6F6"
                  BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"
                  BorderThickness="1">
                                    <ColorPicker:ColorPicker x:Name="PART_ColorPicker"/>
                                </Border>
                            </Popup>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ToggleButtonFill" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ToggleButtonGlass" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ToggleButtonBorder" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="OverallBorder" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsDropDownOpen" Value="True">
                            <Setter TargetName="ToggleButtonFill" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ToggleButtonGlass" Property="Visibility" Value="Hidden"/>
                            <Setter TargetName="ToggleButtonBorder" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="OverallBorder" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Menu Toggle Button  -->
    <Style x:Key="ConfirmCancelButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource NuclearButtonFocusVisual}" />
        <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}" />
        <Setter Property="BorderBrush" Value="{StaticResource ThemeDarkBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Margin" Value="2"/>
        <Setter Property="IsThreeState" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder"
                                             Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.5" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder"
                                             Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="CheckedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="CheckedBorder"
                                             Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.75" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="CheckedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="CheckedBorder"
                                             Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="PressedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Pressed"
                                             Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="PressedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Pressed"
                                             Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid x:Name="grid">
                        <Border x:Name="Border" Background="{DynamicResource ButtonNormalBrush}"
                    BorderBrush="{DynamicResource ThemeDarkBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="3,3,3,3" Opacity="0.1" Padding="{TemplateBinding Padding}" />
                        <Border x:Name="CheckedBorder" Background="{DynamicResource SelectedItemBrush}"
                    BorderBrush="{DynamicResource SelectedItemBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="3,3,3,3" Opacity="0" Padding="{TemplateBinding Padding}" />
                        <Border x:Name="HoverBorder" Background="{DynamicResource HoverSelectionBrush}"
                    BorderBrush="{DynamicResource HoverSelectionBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="3,3,3,3" Opacity="0" Padding="{TemplateBinding Padding}" />
                        <Border x:Name="Pressed" Background="{DynamicResource SelectedItemBrush}"
                    BorderBrush="{DynamicResource SelectedItemBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="3,3,3,3" Opacity="0" Padding="{TemplateBinding Padding}" />
                        <Rectangle x:Name="Shine" Height="Auto" Margin="2,2,2,2" VerticalAlignment="Stretch"
                       Opacity="1" RadiusX="3" RadiusY="3" Stroke="{x:Null}">
                        </Rectangle>
                        <ContentPresenter Margin="1"
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="HoverOff_BeginStoryboard"
                                 Storyboard="{StaticResource HoverOff}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="PressedOff_BeginStoryboard"
                                 Storyboard="{StaticResource PressedOff}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="PressedOn_BeginStoryboard"
                                 Storyboard="{StaticResource PressedOn}" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true" />
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Foreground" Value="Crimson"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter Property="Foreground" Value="Red"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="False">
                            <Setter Property="IsChecked" Value="False"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#ADADAD" />
                            <Setter TargetName="Border" Property="Background"
                      Value="{DynamicResource DisabledBackgroundBrush}" />
                            <Setter TargetName="Border" Property="BorderBrush"
                      Value="{DynamicResource DisabledBorderBrush}" />
                            <Setter TargetName="grid" Property="Opacity" Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>

