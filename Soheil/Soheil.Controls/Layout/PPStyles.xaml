<ResourceDictionary x:Class="Soheil.Controls.Layout.PPStyles"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:CustomControls="clr-namespace:Soheil.Controls.CustomControls" 
    xmlns:Common="clr-namespace:Soheil.Common;assembly=Soheil.Common" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:sys="clr-namespace:System;assembly=mscorlib">

	<Style x:Key="SmallButtonStyle" TargetType="Button">
		<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Button Command="{TemplateBinding Command}"
                            CommandParameter="{TemplateBinding CommandParameter}"
                            Content="{TemplateBinding Content}"
                            ToolTip="{TemplateBinding ToolTip}"
                            Margin="-2" Background="Transparent" Opacity="0.5">
						<Button.Triggers>
							<EventTrigger RoutedEvent="MouseEnter">
								<BeginStoryboard>
									<Storyboard Duration="0:0:0.1">
										<DoubleAnimation Duration="0:0:0.1" Storyboard.TargetProperty="Opacity" To="1"/>
									</Storyboard>
								</BeginStoryboard>
							</EventTrigger>
							<EventTrigger RoutedEvent="MouseLeave">
								<BeginStoryboard>
									<Storyboard Duration="0:0:0.1">
										<DoubleAnimation Duration="0:0:0.1" Storyboard.TargetProperty="Opacity" To="0.5"/>
									</Storyboard>
								</BeginStoryboard>
							</EventTrigger>
							<EventTrigger RoutedEvent="MouseDown">
								<BeginStoryboard>
									<Storyboard Duration="0:0:0.1">
										<ColorAnimation Duration="0:0:0.1" Storyboard.TargetProperty="Background.(SolidColorBrush.Color)" From="#4AA"/>
									</Storyboard>
								</BeginStoryboard>
							</EventTrigger>
							<EventTrigger RoutedEvent="MouseUp">
								<BeginStoryboard>
									<Storyboard Duration="0:0:0.1">
										<ColorAnimation Duration="0:0:0.1" Storyboard.TargetProperty="Background.(SolidColorBrush.Color)" From="Transparent"/>
									</Storyboard>
								</BeginStoryboard>
							</EventTrigger>
						</Button.Triggers>
					</Button>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>


	<ControlTemplate TargetType="ContentControl" x:Key="hoverStyle">
		<Border BorderBrush="#4FFF" BorderThickness="0,1,1,0" Padding="0" Margin="0">
			<Border.Background>
				<SolidColorBrush Color="White" Opacity="0" x:Name="bkg"/>
			</Border.Background>
			<ContentPresenter Content="{TemplateBinding Content}" Margin="0" VerticalAlignment="Center"/>
		</Border>
		<ControlTemplate.Triggers>
			<EventTrigger RoutedEvent="MouseEnter">
				<BeginStoryboard>
					<Storyboard Duration="0:0:0.2">
						<DoubleAnimation Storyboard.TargetName="bkg" Storyboard.TargetProperty="Opacity" Duration="0:0:0.1" To="0.1"/>
					</Storyboard>
				</BeginStoryboard>
			</EventTrigger>
			<EventTrigger RoutedEvent="MouseLeave">
				<BeginStoryboard>
					<Storyboard Duration="0:0:0.7">
						<DoubleAnimation Storyboard.TargetName="bkg" Storyboard.TargetProperty="Opacity" Duration="0:0:0.4" To="0"/>
					</Storyboard>
				</BeginStoryboard>
			</EventTrigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<DataTemplate x:Key="balloonTemplate">
		<Canvas>
			<Canvas.Margin>
				<MultiBinding Converter="{StaticResource balloonVerticalMargin}">
					<Binding Path="RowIndex"/>
					<Binding Path="StartDateTime"/>
					<Binding ElementName="ppTable" Path="DataContext.HourZoom"/>
				</MultiBinding>
			</Canvas.Margin>
			<Canvas DataContext="{Binding Message}" Width="0" Height="0" Margin="-20,-150,0,0" ClipToBounds="False" MouseDown="balloonClicked"
					Visibility="{Binding HasException, Converter={StaticResource booleanToVisibilityConverter}}">
				<Path x:Name="balloon" Width="183.667" Height="90.7315" Canvas.Left="1.49997" Canvas.Top="1.8334" Stretch="Fill"  MouseDown="balloonClicked"
								Stroke="#4000" Fill="#FFB" Opacity="0.75" ClipToBounds="False"
								Data="F1 M 6.99997,2.3334L 179.667,2.3334C 182.428,2.3334 184.667,4.57199 184.667,7.3334L 184.667,64.6667C 184.667,67.4282 182.428,69.6667 179.667,69.6667L 36.6112,69.6669L 44.5225,92.0649L 17.6166,69.6668L 6.99997,69.6667C 4.23854,69.6667 1.99997,67.4282 1.99997,64.6667L 1.99997,7.3334C 1.99997,4.57199 4.23854,2.3334 6.99997,2.3334 Z ">
					<Path.Effect>
						<DropShadowEffect BlurRadius="8" ShadowDepth="1" Opacity="0.6" Direction="315"/>
					</Path.Effect>
				</Path>
				<ScrollViewer Width="177" Height="70" MouseDown="balloonClicked" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
					<TextBlock Text="{Binding MainExceptionText}" TextWrapping="Wrap" Margin="2" FlowDirection="RightToLeft" MouseDown="balloonClicked"/>
				</ScrollViewer>
				<Canvas.ToolTip>
					<TextBlock TextWrapping="Wrap" Text="{Binding FullExceptionText}"/>
				</Canvas.ToolTip>
			</Canvas>
			<Canvas.Triggers>
				<EventTrigger RoutedEvent="MouseEnter">
					<BeginStoryboard>
						<Storyboard Duration="0:0:0.2">
							<DoubleAnimation Storyboard.TargetName="balloon" Storyboard.TargetProperty="Opacity" Duration="0:0:0.1" To="1"/>
						</Storyboard>
					</BeginStoryboard>
				</EventTrigger>
				<EventTrigger RoutedEvent="MouseLeave">
					<BeginStoryboard>
						<Storyboard Duration="0:0:0.7">
							<DoubleAnimation Storyboard.TargetName="balloon" Storyboard.TargetProperty="Opacity" Duration="0:0:0.4" To="0.75"/>
						</Storyboard>
					</BeginStoryboard>
				</EventTrigger>
			</Canvas.Triggers>
		</Canvas>
	</DataTemplate>


	<Style x:Key="PPGhostButtonStyle" TargetType="Button">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Border Background="#1FFF" Name="border" Opacity="0.5" BorderBrush="#2FFF" BorderThickness="0,0,1,0"/>
					<ControlTemplate.Triggers>
						<EventTrigger SourceName="border" RoutedEvent="MouseEnter">
							<BeginStoryboard>
								<Storyboard Duration="0:0:0.1">
									<DoubleAnimation Duration="0:0:0.1"
													 Storyboard.TargetName="border"
													 Storyboard.TargetProperty="Opacity"
													 To="1"/>
								</Storyboard>
							</BeginStoryboard>
						</EventTrigger>
						<EventTrigger SourceName="border" RoutedEvent="MouseLeave">
							<BeginStoryboard>
								<Storyboard Duration="0:0:0.1">
									<DoubleAnimation Duration="0:0:0.1"
													 Storyboard.TargetName="border"
													 Storyboard.TargetProperty="Opacity"
													 To="0.5"/>
								</Storyboard>
							</BeginStoryboard>
						</EventTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>


	<Style TargetType="{x:Type CustomControls:TimeBox}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type CustomControls:TimeBox}">
					<ControlTemplate.Resources>
						<Style x:Key="TimeComponents" TargetType="{x:Type TextBox}">
							<Setter Property="SnapsToDevicePixels" Value="True" />
							<Setter Property="OverridesDefaultStyle" Value="True" />
							<Setter Property="KeyboardNavigation.TabNavigation" Value="Cycle"/>
							<Setter Property="MinWidth" Value="22"/>
							<Setter Property="Height" Value="22"/>
							<Setter Property="VerticalAlignment" Value="Center"/>
							<Setter Property="TextAlignment" Value="Center"/>
							<Setter Property="Foreground" Value="White"/>
							<Setter Property="Template">
								<Setter.Value>
									<ControlTemplate TargetType="{x:Type TextBox}">
										<Border Name="Border" CornerRadius="2" Padding="2,0" BorderThickness="1" Margin="0,1" TextBlock.FontSize="12">
											<Border.Background>
												<SolidColorBrush Color="#4088"/>
											</Border.Background>
											<Border.BorderBrush>
												<SolidColorBrush Color="#8088"/>
											</Border.BorderBrush>
											<VisualStateManager.VisualStateGroups>
												<VisualStateGroup x:Name="CommonStates">
													<VisualState x:Name="Normal"/>
													<VisualState x:Name="Disabled">
														<Storyboard>
															<ColorAnimationUsingKeyFrames 
														Storyboard.TargetName="Border"
														Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
																<EasingColorKeyFrame KeyTime="0" Value="Transparent"/>
															</ColorAnimationUsingKeyFrames>
															<ColorAnimationUsingKeyFrames 
														Storyboard.TargetName="Border"
														Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
																<EasingColorKeyFrame KeyTime="0" Value="Transparent"/>
															</ColorAnimationUsingKeyFrames>
														</Storyboard>
													</VisualState>
													<VisualState x:Name="ReadOnly">
														<Storyboard>
															<ColorAnimationUsingKeyFrames 
														Storyboard.TargetName="Border"
														Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
																<EasingColorKeyFrame KeyTime="0" Value="Transparent" />
															</ColorAnimationUsingKeyFrames>
															<ColorAnimationUsingKeyFrames 
														Storyboard.TargetName="Border"
														Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
																<EasingColorKeyFrame KeyTime="0" Value="Transparent" />
															</ColorAnimationUsingKeyFrames>
														</Storyboard>
													</VisualState>
													<VisualState x:Name="MouseOver">
														<Storyboard>
															<ColorAnimationUsingKeyFrames 
														Storyboard.TargetName="Border"
														Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
																<EasingColorKeyFrame KeyTime="0" Value="#88FF"/>
															</ColorAnimationUsingKeyFrames>
														</Storyboard>
													</VisualState>
													<VisualState x:Name="Focused">
														<Storyboard>
															<ColorAnimationUsingKeyFrames 
														Storyboard.TargetName="Border"
														Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
																<EasingColorKeyFrame KeyTime="0" Value="#C8FF"/>
															</ColorAnimationUsingKeyFrames>
														</Storyboard>
													</VisualState>
												</VisualStateGroup>
											</VisualStateManager.VisualStateGroups>
											<ScrollViewer Margin="0" x:Name="PART_ContentHost"/>
										</Border>
										<ControlTemplate.Triggers>
											<Trigger Property="IsReadOnly" Value="True">
												<Setter Property="Foreground">
													<Setter.Value>
														<SolidColorBrush Color="Gray"/>
													</Setter.Value>
												</Setter>
											</Trigger>
											<Trigger Property="IsFocused" Value="True">
												<Setter Property="Foreground">
													<Setter.Value>
														<SolidColorBrush Color="Black"/>
													</Setter.Value>
												</Setter>
											</Trigger>
										</ControlTemplate.Triggers>
									</ControlTemplate>
								</Setter.Value>
							</Setter>
						</Style>
					</ControlTemplate.Resources>
					<Grid FlowDirection="LeftToRight" ContextMenuService.Placement="Bottom" x:Name="grid">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*"/>
							<ColumnDefinition Width="Auto"/>
							<ColumnDefinition Width="*"/>
							<ColumnDefinition Width="Auto"/>
							<ColumnDefinition Width="*"/>
						</Grid.ColumnDefinitions>
						<TextBox Text="{Binding Hour, RelativeSource={RelativeSource AncestorType={x:Type CustomControls:TimeBox}}, StringFormat=D2}" 
								 IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource AncestorType={x:Type CustomControls:TimeBox}}}" 
								 Style="{StaticResource TimeComponents}" FlowDirection="{TemplateBinding FlowDirection}"/>
						<TextBlock Text=":" VerticalAlignment="Center" Grid.Column="1"/>
						<TextBox Text="{Binding Minute, RelativeSource={RelativeSource AncestorType={x:Type CustomControls:TimeBox}}, StringFormat=D2}" 
								 IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource AncestorType={x:Type CustomControls:TimeBox}}}"
								 Style="{StaticResource TimeComponents}" FlowDirection="{TemplateBinding FlowDirection}" Grid.Column="2"/>
						<TextBlock Text=":" VerticalAlignment="Center" Grid.Column="3"/>
						<TextBox Text="{Binding Second, RelativeSource={RelativeSource AncestorType={x:Type CustomControls:TimeBox}}, StringFormat=D2}" 
								 IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource AncestorType={x:Type CustomControls:TimeBox}}}" 
								 Style="{StaticResource TimeComponents}" FlowDirection="{TemplateBinding FlowDirection}" Grid.Column="4"/>
						<Popup FlowDirection="LeftToRight" IsEnabled="{Binding Path=IsReadOnly, RelativeSource={RelativeSource AncestorType={x:Type CustomControls:TimeBox}}, Converter={StaticResource inverter}}" x:Name="contextMenu" Placement="Bottom" PlacementTarget="{Binding ElementName=grid}">
							<StackPanel>
								<StackPanel.Resources>
									<Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource {x:Type MenuItem}}">
										<Setter Property="Margin" Value="0,-5"/>
										<Setter Property="Height" Value="30"/>
										<Setter Property="VerticalAlignment" Value="Center"/>
										<Setter Property="VerticalContentAlignment" Value="Center"/>
									</Style>
								</StackPanel.Resources>
								<MenuItem Header="Now" Command="{Binding SetTimeCommand, RelativeSource={RelativeSource AncestorType={x:Type CustomControls:TimeBox}}}"
										  CommandParameter="{x:Static Common:TimeBoxParameter.Now}">
									<MenuItem.Icon>
										<Image Style="{StaticResource NowImage}"/>
									</MenuItem.Icon>
								</MenuItem>
								<MenuItem Header="{Loc PPE_StartOfHour}" Command="{Binding SetTimeCommand, RelativeSource={RelativeSource AncestorType={x:Type CustomControls:TimeBox}}}"
										  CommandParameter="{x:Static Common:TimeBoxParameter.StartOfHour}">
									<MenuItem.Icon>
										<Image Style="{StaticResource TimeStartOfHour}"/>
									</MenuItem.Icon>
								</MenuItem>
								<MenuItem Header="{Loc PPE_NextHour}" Command="{Binding SetTimeCommand, RelativeSource={RelativeSource AncestorType={x:Type CustomControls:TimeBox}}}"
										  CommandParameter="{x:Static Common:TimeBoxParameter.NextHour}">
									<MenuItem.Icon>
										<Image Style="{StaticResource TimeNextHour}"/>
									</MenuItem.Icon>
								</MenuItem>
								<MenuItem Header="{Loc PPE_PreviousHour}" Command="{Binding SetTimeCommand, RelativeSource={RelativeSource AncestorType={x:Type CustomControls:TimeBox}}}"
										  CommandParameter="{x:Static Common:TimeBoxParameter.PreviousHour}">
									<MenuItem.Icon>
										<Image Style="{StaticResource TimePreviousHour}"/>
									</MenuItem.Icon>
								</MenuItem>
								<MenuItem Header="+30 Minutes" Command="{Binding SetTimeCommand, RelativeSource={RelativeSource AncestorType={x:Type CustomControls:TimeBox}}}"
										  CommandParameter="{x:Static Common:TimeBoxParameter.AddHalfHour}">
									<MenuItem.Icon>
										<Image Style="{StaticResource TimeAddHalfHour}"/>
									</MenuItem.Icon>
								</MenuItem>
								<MenuItem Header="+5 Minutes" Command="{Binding SetTimeCommand, RelativeSource={RelativeSource AncestorType={x:Type CustomControls:TimeBox}}}"
										  CommandParameter="{x:Static Common:TimeBoxParameter.Add5Minutes}">
									<MenuItem.Icon>
										<Image Style="{StaticResource TimeAdd5Minutes}"/>
									</MenuItem.Icon>
								</MenuItem>
								<MenuItem Header="+1 Minute" Command="{Binding SetTimeCommand, RelativeSource={RelativeSource AncestorType={x:Type CustomControls:TimeBox}}}"
										  CommandParameter="{x:Static Common:TimeBoxParameter.Add1Minute}">
									<MenuItem.Icon>
										<Image Style="{StaticResource TimeNextHour}"/>
									</MenuItem.Icon>
								</MenuItem>
							</StackPanel>
						</Popup>
					</Grid>

					<ControlTemplate.Triggers>
						<EventTrigger RoutedEvent="MouseEnter">
							<BeginStoryboard>
								<Storyboard Duration="0:0:0.2">
									<BooleanAnimationUsingKeyFrames Storyboard.TargetName="contextMenu" Storyboard.TargetProperty="IsOpen" Duration="0:0:0.2" FillBehavior="HoldEnd">
										<DiscreteBooleanKeyFrame Value="True" KeyTime="0:0:0.2" />
									</BooleanAnimationUsingKeyFrames>
								</Storyboard>
							</BeginStoryboard>
						</EventTrigger>
						<EventTrigger RoutedEvent="MouseLeave">
							<BeginStoryboard>
								<Storyboard Duration="0:0:0.2">
									<BooleanAnimationUsingKeyFrames Storyboard.TargetName="contextMenu" Storyboard.TargetProperty="IsOpen" Duration="0:0:0.2" FillBehavior="HoldEnd">
										<DiscreteBooleanKeyFrame Value="False" KeyTime="0:0:0.2" />
									</BooleanAnimationUsingKeyFrames>
								</Storyboard>
							</BeginStoryboard>
						</EventTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<Style TargetType="{x:Type CustomControls:DurationBox}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type CustomControls:DurationBox}">
					<ControlTemplate.Resources>
						<Style x:Key="TimeComponents" TargetType="{x:Type TextBox}">
							<Setter Property="SnapsToDevicePixels" Value="True" />
							<Setter Property="OverridesDefaultStyle" Value="True" />
							<Setter Property="KeyboardNavigation.TabNavigation" Value="Cycle"/>
							<Setter Property="MinWidth" Value="22"/>
							<Setter Property="Height" Value="22"/>
							<Setter Property="VerticalAlignment" Value="Center"/>
							<Setter Property="TextAlignment" Value="Center"/>
							<Setter Property="Foreground" Value="White"/>
							<Setter Property="Template">
								<Setter.Value>
									<ControlTemplate TargetType="{x:Type TextBox}">
										<Border Name="Border" CornerRadius="2" Padding="2,0" BorderThickness="1" Margin="0,1" TextBlock.FontSize="12">
											<Border.Background>
												<SolidColorBrush Color="#4088"/>
											</Border.Background>
											<Border.BorderBrush>
												<SolidColorBrush Color="#8088"/>
											</Border.BorderBrush>
											<VisualStateManager.VisualStateGroups>
												<VisualStateGroup x:Name="CommonStates">
													<VisualState x:Name="Normal"/>
													<VisualState x:Name="Disabled">
														<Storyboard>
															<ColorAnimationUsingKeyFrames 
														Storyboard.TargetName="Border"
														Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
																<EasingColorKeyFrame KeyTime="0" Value="Transparent"/>
															</ColorAnimationUsingKeyFrames>
															<ColorAnimationUsingKeyFrames 
														Storyboard.TargetName="Border"
														Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
																<EasingColorKeyFrame KeyTime="0" Value="Transparent"/>
															</ColorAnimationUsingKeyFrames>
														</Storyboard>
													</VisualState>
													<VisualState x:Name="ReadOnly">
														<Storyboard>
															<ColorAnimationUsingKeyFrames 
														Storyboard.TargetName="Border"
														Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
																<EasingColorKeyFrame KeyTime="0" Value="Transparent" />
															</ColorAnimationUsingKeyFrames>
															<ColorAnimationUsingKeyFrames 
														Storyboard.TargetName="Border"
														Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
																<EasingColorKeyFrame KeyTime="0" Value="Transparent" />
															</ColorAnimationUsingKeyFrames>
														</Storyboard>
													</VisualState>
													<VisualState x:Name="MouseOver">
														<Storyboard>
															<ColorAnimationUsingKeyFrames 
														Storyboard.TargetName="Border"
														Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
																<EasingColorKeyFrame KeyTime="0" Value="#88FF"/>
															</ColorAnimationUsingKeyFrames>
														</Storyboard>
													</VisualState>
													<VisualState x:Name="Focused">
														<Storyboard>
															<ColorAnimationUsingKeyFrames 
														Storyboard.TargetName="Border"
														Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
																<EasingColorKeyFrame KeyTime="0" Value="#C8FF"/>
															</ColorAnimationUsingKeyFrames>
														</Storyboard>
													</VisualState>
												</VisualStateGroup>
											</VisualStateManager.VisualStateGroups>
											<ScrollViewer Margin="0" x:Name="PART_ContentHost"/>
										</Border>
										<ControlTemplate.Triggers>
											<Trigger Property="IsReadOnly" Value="True">
												<Setter Property="Foreground">
													<Setter.Value>
														<SolidColorBrush Color="Gray"/>
													</Setter.Value>
												</Setter>
											</Trigger>
											<Trigger Property="IsFocused" Value="True">
												<Setter Property="Foreground">
													<Setter.Value>
														<SolidColorBrush Color="Black"/>
													</Setter.Value>
												</Setter>
											</Trigger>
										</ControlTemplate.Triggers>
									</ControlTemplate>
								</Setter.Value>
							</Setter>
						</Style>
					</ControlTemplate.Resources>
					<Grid FlowDirection="LeftToRight" ContextMenuService.Placement="Bottom" x:Name="grid">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*"/>
							<ColumnDefinition Width="Auto"/>
							<ColumnDefinition Width="*"/>
							<ColumnDefinition Width="Auto"/>
							<ColumnDefinition Width="*"/>
						</Grid.ColumnDefinitions>
						<TextBox Text="{Binding Hour, RelativeSource={RelativeSource AncestorType={x:Type CustomControls:DurationBox}}, StringFormat=D2}" 
								 IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource AncestorType={x:Type CustomControls:DurationBox}}}" 
								 Style="{StaticResource TimeComponents}" FlowDirection="{TemplateBinding FlowDirection}"/>
						<TextBlock Text=":" VerticalAlignment="Center" Grid.Column="1"/>
						<TextBox Text="{Binding Minute, RelativeSource={RelativeSource AncestorType={x:Type CustomControls:DurationBox}}, StringFormat=D2}" 
								 IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource AncestorType={x:Type CustomControls:DurationBox}}}"
								 Style="{StaticResource TimeComponents}" FlowDirection="{TemplateBinding FlowDirection}" Grid.Column="2"/>
						<TextBlock Text=":" VerticalAlignment="Center" Grid.Column="3"/>
						<TextBox Text="{Binding Second, RelativeSource={RelativeSource AncestorType={x:Type CustomControls:DurationBox}}, StringFormat=D2}" 
								 IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource AncestorType={x:Type CustomControls:DurationBox}}}" 
								 Style="{StaticResource TimeComponents}" FlowDirection="{TemplateBinding FlowDirection}" Grid.Column="4"/>
						<Popup FlowDirection="LeftToRight" IsEnabled="{Binding Path=IsReadOnly, RelativeSource={RelativeSource AncestorType={x:Type CustomControls:DurationBox}}, Converter={StaticResource inverter}}" x:Name="contextMenu" Placement="Bottom" PlacementTarget="{Binding ElementName=grid}">
							<StackPanel>
								<StackPanel.Resources>
									<Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource {x:Type MenuItem}}">
										<Setter Property="Margin" Value="0,-5"/>
										<Setter Property="Height" Value="30"/>
										<Setter Property="VerticalAlignment" Value="Center"/>
										<Setter Property="VerticalContentAlignment" Value="Center"/>
									</Style>
								</StackPanel.Resources>

								<MenuItem Header="Until work break" Command="{Binding SetDurationMinutesCommand, RelativeSource={RelativeSource AncestorType={x:Type CustomControls:DurationBox}}}">
									<MenuItem.Icon>
										<Image Style="{StaticResource DurationFillToEnd}"/>
									</MenuItem.Icon>
									<MenuItem.CommandParameter>
										<sys:Int32>0</sys:Int32>
									</MenuItem.CommandParameter>
								</MenuItem>
								<MenuItem Header="15 Minutes" Command="{Binding SetDurationMinutesCommand, RelativeSource={RelativeSource AncestorType={x:Type CustomControls:DurationBox}}}">
									<MenuItem.Icon>
										<Image Style="{StaticResource DurationQuarterHour}"/>
									</MenuItem.Icon>
									<MenuItem.CommandParameter>
										<sys:Int32>15</sys:Int32>
									</MenuItem.CommandParameter>
								</MenuItem>
								<MenuItem Header="30 Minutes" Command="{Binding SetDurationMinutesCommand, RelativeSource={RelativeSource AncestorType={x:Type CustomControls:DurationBox}}}">
									<MenuItem.Icon>
										<Image Style="{StaticResource DurationHalfHour}"/>
									</MenuItem.Icon>
									<MenuItem.CommandParameter>
										<sys:Int32>30</sys:Int32>
									</MenuItem.CommandParameter>
								</MenuItem>
								<MenuItem Header="45 Minutes" Command="{Binding SetDurationMinutesCommand, RelativeSource={RelativeSource AncestorType={x:Type CustomControls:DurationBox}}}">
									<MenuItem.Icon>
										<Image Style="{StaticResource Duration3QuratersHour}"/>
									</MenuItem.Icon>
									<MenuItem.CommandParameter>
										<sys:Int32>45</sys:Int32>
									</MenuItem.CommandParameter>
								</MenuItem>
								<MenuItem Header="1 Hour" Command="{Binding SetDurationMinutesCommand, RelativeSource={RelativeSource AncestorType={x:Type CustomControls:DurationBox}}}">
									<MenuItem.Icon>
										<Image Style="{StaticResource Duration1Hour}"/>
									</MenuItem.Icon>
									<MenuItem.CommandParameter>
										<sys:Int32>60</sys:Int32>
									</MenuItem.CommandParameter>
								</MenuItem>
								<MenuItem Header="2 Hours" Command="{Binding SetDurationMinutesCommand, RelativeSource={RelativeSource AncestorType={x:Type CustomControls:DurationBox}}}">
									<MenuItem.Icon>
										<Image Style="{StaticResource Duration2Hours}"/>
									</MenuItem.Icon>
									<MenuItem.CommandParameter>
										<sys:Int32>120</sys:Int32>
									</MenuItem.CommandParameter>
								</MenuItem>
							</StackPanel>
						</Popup>
					</Grid>

					<ControlTemplate.Triggers>
						<EventTrigger RoutedEvent="MouseEnter">
							<BeginStoryboard>
								<Storyboard Duration="0:0:0.2">
									<BooleanAnimationUsingKeyFrames Storyboard.TargetName="contextMenu" Storyboard.TargetProperty="IsOpen" Duration="0:0:0.2" FillBehavior="HoldEnd">
										<DiscreteBooleanKeyFrame Value="True" KeyTime="0:0:0.2" />
									</BooleanAnimationUsingKeyFrames>
								</Storyboard>
							</BeginStoryboard>
						</EventTrigger>
						<EventTrigger RoutedEvent="MouseLeave">
							<BeginStoryboard>
								<Storyboard Duration="0:0:0.2">
									<BooleanAnimationUsingKeyFrames Storyboard.TargetName="contextMenu" Storyboard.TargetProperty="IsOpen" Duration="0:0:0.2" FillBehavior="HoldEnd">
										<DiscreteBooleanKeyFrame Value="False" KeyTime="0:0:0.2" />
									</BooleanAnimationUsingKeyFrames>
								</Storyboard>
							</BeginStoryboard>
						</EventTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>


	<Style TargetType="Border" x:Key="boundaryStyle">
		<Setter Property="TextBlock.Foreground" Value="White"/>
		<Setter Property="BorderBrush" Value="Gainsboro"/>
		<Setter Property="ContextMenu">
			<Setter.Value>
				<ContextMenu>
					<MenuItem Header="حذف گزارش" Command="{Binding DeleteCommand}"/>
				</ContextMenu>
			</Setter.Value>
		</Setter>
		<Setter Property="Background" Value="Black"/>
	</Style>
	<Style TargetType="Border" x:Key="startBoundaryStyle" BasedOn="{StaticResource boundaryStyle}">
		<Setter Property="Width" Value="30"/>
		<Setter Property="Height" Value="22"/>
		<Setter Property="BorderThickness" Value="3,0,0,2"/>
		<Setter Property="CornerRadius" Value="0,0,0,3"/>
		<Setter Property="TextBlock.FontSize" Value="10"/>
		<Style.Triggers>
			<EventTrigger RoutedEvent="MouseEnter">
				<BeginStoryboard>
					<Storyboard Duration="0:0:0.1">
						<ColorAnimation Storyboard.TargetProperty="Background.(SolidColorBrush.Color)" To="#4CC" Duration="0:0:0.1"/>
					</Storyboard>
				</BeginStoryboard>
			</EventTrigger>
			<EventTrigger RoutedEvent="MouseLeave">
				<BeginStoryboard>
					<Storyboard Duration="0:0:0.2">
						<ColorAnimation Storyboard.TargetProperty="Background.(SolidColorBrush.Color)" To="Black" Duration="0:0:0.2"/>
					</Storyboard>
				</BeginStoryboard>
			</EventTrigger>
		</Style.Triggers>
	</Style>
	<Style TargetType="Border" x:Key="endBoundaryStyle" BasedOn="{StaticResource boundaryStyle}">
		<Setter Property="Width" Value="30"/>
		<Setter Property="Height" Value="22"/>
		<Setter Property="BorderThickness" Value="0,0,3,2"/>
		<Setter Property="CornerRadius" Value="0,0,3,0"/>
		<Setter Property="TextBlock.FontSize" Value="10"/>
		<Style.Triggers>
			<EventTrigger RoutedEvent="MouseEnter">
				<BeginStoryboard>
					<Storyboard Duration="0:0:0.1">
						<ColorAnimation Storyboard.TargetProperty="Background.(SolidColorBrush.Color)" To="#4CC" Duration="0:0:0.1"/>
					</Storyboard>
				</BeginStoryboard>
			</EventTrigger>
			<EventTrigger RoutedEvent="MouseLeave">
				<BeginStoryboard>
					<Storyboard Duration="0:0:0.2">
						<ColorAnimation Storyboard.TargetProperty="Background.(SolidColorBrush.Color)" To="Black" Duration="0:0:0.2"/>
					</Storyboard>
				</BeginStoryboard>
			</EventTrigger>
		</Style.Triggers>
	</Style>

</ResourceDictionary>